{"ast":null,"code":"var _jsxFileName = \"/Users/kaspar/Environment/my-app/frontend/src/Components/Audio.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport './Audio.css';\nimport Sound from 'react-sound';\nimport { Spectrogram } from 'react-spectrogram';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction updateAudio() {\n  _s();\n\n  const [audioFile, setAudioFile] = useState([]); // setAudioFile(document.getElementById(\"inputAudio\"))\n  // axios\n  //     .post('/api/unprocessedaudios/', {\n  //         title: 'betaTest',\n  //         filedata: document.getElementById(\"inputAudio\") })\n  //     .catch((err) => console.log(err));\n  // axios\n  // .get(\"/api/unprocessedaudios/\")\n  // .then((res) => setTest(res))\n  // .catch((err) => console.log(err));\n\n  return 0;\n}\n\n_s(updateAudio, \"hNgXc/6uWfwWvRVQrRuOeT8qsGQ=\");\n\nfunction Audio() {\n  _s2();\n\n  const [test, setTest] = useState(0);\n\n  function getAudio() {\n    if (!document.getElementById(\"inputAudio\") == undefined) {\n      return /*#__PURE__*/_jsxDEV(Spectrogram, {\n        data: {\n          x: document.getElementById(\"inputAudio\")\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"no data yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [\"Hello this is audio page :)\", test, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-area\",\n      children: [\"Upload Audio Here\", /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"inputAudio\",\n          name: \"inputAudio\",\n          onChange: () => updateAudio()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTest(555),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"audio-container\",\n      children: \"Here is where the audio goes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Audio, \"fAeQ64B5hJe636p2A7GzLjDGG1U=\");\n\n_c = Audio;\nexport default Audio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Audio\");","map":{"version":3,"sources":["/Users/kaspar/Environment/my-app/frontend/src/Components/Audio.js"],"names":["React","useState","Sound","Spectrogram","axios","updateAudio","audioFile","setAudioFile","Audio","test","setTest","getAudio","document","getElementById","undefined","x"],"mappings":";;;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C,CADmB,CAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAQ,CAAR;AAEH;;GAdQI,W;;AAgBT,SAASG,KAAT,GAAiB;AAAA;;AAEb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,CAAD,CAAhC;;AAEA,WAASU,QAAT,GAAoB;AAChB,QAAI,CAAEC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAF,IAA0CC,SAA9C,EAAyD;AACrD,0BACI,QAAC,WAAD;AACA,QAAA,IAAI,EAAI;AAACC,UAAAA,CAAC,EAACH,QAAQ,CAACC,cAAT,CAAwB,YAAxB;AAAH;AADR;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KAND,MAOK;AACD,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AAEJ;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,8CAEKJ,IAFL,eAII;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,mDAGI;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,YAAtB;AAAmC,UAAA,IAAI,EAAC,YAAxC;AAAqD,UAAA,QAAQ,EAAE,MAAIJ,WAAW;AAA9E;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,OAAO,EAAE,MAAIK,OAAO,CAAC,GAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAaI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;IAvCQF,K;;KAAAA,K;AAyCT,eAAeA,KAAf","sourcesContent":["import { React, useState } from 'react';\nimport './Audio.css';\nimport Sound from 'react-sound';\nimport { Spectrogram } from 'react-spectrogram';\nimport axios from 'axios';\n\nfunction updateAudio() {\n    const [ audioFile, setAudioFile ] = useState([])\n    // setAudioFile(document.getElementById(\"inputAudio\"))\n    // axios\n    //     .post('/api/unprocessedaudios/', {\n    //         title: 'betaTest',\n    //         filedata: document.getElementById(\"inputAudio\") })\n    //     .catch((err) => console.log(err));\n    // axios\n    // .get(\"/api/unprocessedaudios/\")\n    // .then((res) => setTest(res))\n    // .catch((err) => console.log(err));\n    return (0\n    )\n}\n\nfunction Audio() {\n\n    const [test, setTest] = useState(0)\n\n    function getAudio() {\n        if (!(document.getElementById(\"inputAudio\"))==undefined) {\n            return (\n                <Spectrogram \n                data = {{x:document.getElementById(\"inputAudio\")}}\n                />\n            )\n        }\n        else {\n            return <div>no data yet</div>\n        }\n        \n    }\n\n    return (\n        <div className='container'>\n            Hello this is audio page :)\n            {test}\n\n            <div className='upload-area'>\n                Upload Audio Here\n\n                <form>\n                    <input type=\"file\" id=\"inputAudio\" name=\"inputAudio\" onChange={()=>updateAudio()} />\n                    <button onClick={()=>setTest(555)}>Submit</button>\n                </form>\n\n            </div>\n            <div className='audio-container'>\n                Here is where the audio goes\n                {/* {getAudio()} */}\n                {/* <audio src=\"{{ cat.wav }}\" controls></audio> */}\n            </div>\n        </div>\n    )\n}\n\nexport default Audio;"]},"metadata":{},"sourceType":"module"}