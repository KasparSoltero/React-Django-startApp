{"ast":null,"code":"var _jsxFileName = \"/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/Highlights.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Highlights(props) {\n  _s();\n\n  const [noiseclips, setNoiseclips] = useState(null);\n  useEffect(() => {\n    console.log('tolato');\n    updateNoiseclips();\n  }, [props]);\n\n  function updateNoiseclips() {\n    //get noiseclips associated with audioFile from database\n    const form = new FormData();\n    form.append('object', 'Noiseclip');\n    form.append('return', 'filtered_list');\n    form.append('id', props.audioFile.id);\n    axios({\n      method: 'post',\n      url: 'get-model/',\n      data: form\n    }).then(function (response) {\n      setNoiseclips(response.data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: noiseclips ? noiseclips.map(function (nc) {\n      console.log(nc);\n      const duration = parseFloat(props.audioFile.duration); // let color = response.data[i]['color']\n\n      let color = 'rgba(255,0,0,0.3)';\n      console.log(color);\n      let start = parseFloat(nc.startTime);\n      let end = parseFloat(nc.endTime);\n      let relStart = Math.round(100 * start / duration);\n      let relEnd = Math.round(100 * end / duration);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"highlight\",\n        style: {\n          width: String(relEnd - relStart) + \"%\",\n          height: '100px',\n          backgroundColor: color,\n          marginLeft: String(relStart) + \"%\",\n          marginTop: '-100px',\n          position: 'relative',\n          //required to bring highlight to front of page\n          zIndex: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this);\n    }) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n} // for(let i=0;i<response.data.length;i++) {\n//     let props = {\n//         color: 'rgba(255,0,0,0.3)',\n//     }\n//     var highlight = <script>{Highlight(props)}</script>\n//     ReactDOM.render(highlight, wave)\n//     wave.appendChild(highlight)\n//     highlight = document.createElement(\"div\")\n//     wave.appendChild(highlight)\n//     highlight.className = 'highlight'\n// }\n// highlight.call = response.data[i]['referenceTitle']\n// function generateHighlights() {\n//     // setWavesurferReady(false)\n//     // remove any highlights currently on document\n//     let hls = document.getElementsByClassName('highlight')\n//     for (let i=hls.length-1; i>=0; i--) {\n//         hls[i].remove()\n//     }\n//     var wave = document.getElementById('wave')\n//     console.log(wave)\n//     return (\n//         <div>hello!</div>\n//     )\n// ReactDOM.unmountComponentAtNode(wave)\n// const form = (new FormData)\n// form.append('object', 'Noiseclip')\n// form.append('return', 'filtered_list')\n// form.append('id', audioFile.id)\n// axios({\n//     method: 'post',\n//     url: 'get-model/',\n//     data: form\n// }).then(function(response) {\n//     const duration = parseFloat(audioFile.duration)\n//     for(let i=0;i<response.data.length;i++) {\n//         let props = {\n//             color: 'rgba(255,0,0,0.3)',\n//         }\n//         console.log('returning...')\n//         return (\n//             <Highlight {...props}/>\n//         )\n// var highlight = <script>{Highlight(props)}</script>\n// ReactDOM.render(highlight, wave)\n// wave.appendChild(highlight)\n// highlight = document.createElement(\"div\")\n// wave.appendChild(highlight)\n// highlight.className = 'highlight'\n// }\n\n\n_s(Highlights, \"2doSFL6fLdgUEBHkrO/pPlkCvZE=\");\n\n_c = Highlights;\nexport default Highlights;\n\nvar _c;\n\n$RefreshReg$(_c, \"Highlights\");","map":{"version":3,"sources":["/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/Highlights.js"],"names":["useState","useEffect","axios","Highlights","props","noiseclips","setNoiseclips","console","log","updateNoiseclips","form","FormData","append","audioFile","id","method","url","data","then","response","map","nc","duration","parseFloat","color","start","startTime","end","endTime","relStart","Math","round","relEnd","width","String","height","backgroundColor","marginLeft","marginTop","position","zIndex"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAEvB,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCN,QAAQ,CAAC,IAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAC,IAAAA,gBAAgB;AACnB,GAHQ,EAGN,CAACL,KAAD,CAHM,CAAT;;AAKA,WAASK,gBAAT,GAA4B;AACxB;AACA,UAAMC,IAAI,GAAI,IAAIC,QAAJ,EAAd;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,QAAZ,EAAsB,WAAtB;AACAF,IAAAA,IAAI,CAACE,MAAL,CAAY,QAAZ,EAAsB,eAAtB;AACAF,IAAAA,IAAI,CAACE,MAAL,CAAY,IAAZ,EAAkBR,KAAK,CAACS,SAAN,CAAgBC,EAAlC;AAEAZ,IAAAA,KAAK,CAAC;AACFa,MAAAA,MAAM,EAAE,MADN;AAEFC,MAAAA,GAAG,EAAE,YAFH;AAGFC,MAAAA,IAAI,EAAEP;AAHJ,KAAD,CAAL,CAIGQ,IAJH,CAIQ,UAASC,QAAT,EAAmB;AACvBb,MAAAA,aAAa,CAACa,QAAQ,CAACF,IAAV,CAAb;AACH,KAND;AAOH;;AAED,sBACI;AAAA,cACKZ,UAAU,GAAGA,UAAU,CAACe,GAAX,CAAe,UAASC,EAAT,EAAa;AACtCd,MAAAA,OAAO,CAACC,GAAR,CAAYa,EAAZ;AAEA,YAAMC,QAAQ,GAAGC,UAAU,CAACnB,KAAK,CAACS,SAAN,CAAgBS,QAAjB,CAA3B,CAHsC,CAKtC;;AACA,UAAIE,KAAK,GAAG,mBAAZ;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,KAAZ;AAEA,UAAIC,KAAK,GAAGF,UAAU,CAACF,EAAE,CAACK,SAAJ,CAAtB;AACA,UAAIC,GAAG,GAAGJ,UAAU,CAACF,EAAE,CAACO,OAAJ,CAApB;AAEA,UAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAW,MAAIN,KAAJ,GAAUH,QAArB,CAAf;AACA,UAAIU,MAAM,GAAGF,IAAI,CAACC,KAAL,CAAW,MAAIJ,GAAJ,GAAQL,QAAnB,CAAb;AAEA,0BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAE;AAC9BW,UAAAA,KAAK,EAAEC,MAAM,CAACF,MAAM,GAACH,QAAR,CAAN,GAA0B,GADH;AAE9BM,UAAAA,MAAM,EAAC,OAFuB;AAG9BC,UAAAA,eAAe,EAAEZ,KAHa;AAI9Ba,UAAAA,UAAU,EAAEH,MAAM,CAACL,QAAD,CAAN,GAAmB,GAJD;AAK9BS,UAAAA,SAAS,EAAE,QALmB;AAM9BC,UAAAA,QAAQ,EAAE,UANoB;AAMR;AACtBC,UAAAA,MAAM,EAAE;AAPsB;AAAlC;AAAA;AAAA;AAAA;AAAA,cADJ;AAWH,KA1Ba,CAAH,GA0BN;AA3BT;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BC,C,CAGD;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIJ;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEI;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEQ;AACA;AACA;AACA;AACA;AACA;AACZ;;;GAjISrC,U;;KAAAA,U;AAqIT,eAAeA,UAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nfunction Highlights(props) {\n\n    const [ noiseclips, setNoiseclips ] = useState(null)\n\n    useEffect(() => {\n        console.log('tolato')\n        updateNoiseclips()\n    }, [props])\n\n    function updateNoiseclips() {\n        //get noiseclips associated with audioFile from database\n        const form = (new FormData)\n        form.append('object', 'Noiseclip')\n        form.append('return', 'filtered_list')\n        form.append('id', props.audioFile.id)\n\n        axios({\n            method: 'post',\n            url: 'get-model/',\n            data: form\n        }).then(function(response) {\n            setNoiseclips(response.data)\n        })\n    }\n\n    return (\n        <div>\n            {noiseclips ? noiseclips.map(function(nc) {\n                console.log(nc)\n\n                const duration = parseFloat(props.audioFile.duration)\n                \n                // let color = response.data[i]['color']\n                let color = 'rgba(255,0,0,0.3)'\n                console.log(color)\n\n                let start = parseFloat(nc.startTime)\n                let end = parseFloat(nc.endTime)\n\n                let relStart = Math.round(100*start/duration)\n                let relEnd = Math.round(100*end/duration)\n\n                return (\n                    <div className='highlight' style={{\n                        width: String(relEnd-relStart) + \"%\",\n                        height:'100px',\n                        backgroundColor: color,\n                        marginLeft: String(relStart) + \"%\",\n                        marginTop: '-100px',\n                        position: 'relative', //required to bring highlight to front of page\n                        zIndex: 10,\n                    }}/>\n                )\n            }) : null}\n        </div>\n        )\n    }\n\n\n    // for(let i=0;i<response.data.length;i++) {\n\n    //     let props = {\n    //         color: 'rgba(255,0,0,0.3)',\n    //     }\n\n    //     var highlight = <script>{Highlight(props)}</script>\n    //     ReactDOM.render(highlight, wave)\n    //     wave.appendChild(highlight)\n    //     highlight = document.createElement(\"div\")\n    //     wave.appendChild(highlight)\n    //     highlight.className = 'highlight'\n    // }\n    \n\n    // highlight.call = response.data[i]['referenceTitle']\n\n\n\n// function generateHighlights() {\n\n//     // setWavesurferReady(false)\n\n//     // remove any highlights currently on document\n//     let hls = document.getElementsByClassName('highlight')\n//     for (let i=hls.length-1; i>=0; i--) {\n//         hls[i].remove()\n//     }\n\n//     var wave = document.getElementById('wave')\n//     console.log(wave)\n\n\n//     return (\n//         <div>hello!</div>\n//     )\n\n    // ReactDOM.unmountComponentAtNode(wave)\n\n    // const form = (new FormData)\n    // form.append('object', 'Noiseclip')\n    // form.append('return', 'filtered_list')\n    // form.append('id', audioFile.id)\n\n    // axios({\n    //     method: 'post',\n    //     url: 'get-model/',\n    //     data: form\n    // }).then(function(response) {\n    \n    //     const duration = parseFloat(audioFile.duration)\n\n    //     for(let i=0;i<response.data.length;i++) {\n\n    //         let props = {\n    //             color: 'rgba(255,0,0,0.3)',\n    //         }\n\n    //         console.log('returning...')\n\n    //         return (\n    //             <Highlight {...props}/>\n    //         )\n\n            // var highlight = <script>{Highlight(props)}</script>\n            // ReactDOM.render(highlight, wave)\n            // wave.appendChild(highlight)\n            // highlight = document.createElement(\"div\")\n            // wave.appendChild(highlight)\n            // highlight.className = 'highlight'\n// }\n\n\n\nexport default Highlights"]},"metadata":{},"sourceType":"module"}