{"ast":null,"code":"var _jsxFileName = \"/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/Analysis.js\",\n    _s = $RefreshSig$();\n\nimport './Analysis.css';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport SelectionList from './SelectionList.js';\nimport Waveform from './Waveform.js';\nimport Highlights from './Highlights.js';\nimport ObjectDataPanel from './ObjectDataPanel.js';\nimport MultipleObjectDataPanel from './MultipleObjectDataPanel.js';\nimport Toolbar from './Toolbar';\nimport { isChrome } from 'react-device-detect';\nimport getCSRF from './getCSRF.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.headers.common[\"X-CSRFTOKEN\"] = getCSRF(); //initialise\n\nvar original_wavesurfer = null;\nvar processed_wavesurfer = null;\nconst waveform_height = 200;\n\nfunction Analysis() {\n  _s();\n\n  const [audio_file, setAudioFile] = useState(null);\n  const [selected_audio_clip, setSelectedAudioClip] = useState(null);\n  const [update_data_panel, setUpdateDataPanel] = useState(false);\n  const [update_highlights, setUpdateHighlights] = useState(false);\n\n  function handleAudioSelection(selection) {\n    setAudioFile(() => selection.object);\n  }\n\n  function handleHighlightSelection(selection) {\n    if (selection.html_selected) {\n      const form = new FormData();\n      form.append('return', 'single');\n      form.append('model', 'AudioClip');\n      form.append('id', selection.object_id);\n      axios({\n        method: 'post',\n        url: 'get-model/',\n        data: form\n      }).then(response => {\n        setSelectedAudioClip(() => response.data[0]);\n      });\n    } else {\n      setSelectedAudioClip(() => null);\n    }\n  }\n\n  function handleHighlightSave(object_id) {\n    const form = new FormData();\n    form.append('return', 'single');\n    form.append('model', 'AudioClip');\n    form.append('id', object_id);\n    axios({\n      method: 'post',\n      url: 'get-model/',\n      data: form\n    }).then(response => {\n      setSelectedAudioClip(() => response.data[0]);\n      setUpdateDataPanel(update_data_panel => !update_data_panel);\n    });\n  }\n\n  function handleAudioClipDataChange() {\n    setUpdateHighlights(update_highlights => !update_highlights);\n  }\n\n  function playPauseButtons() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"playpausebutton\",\n        onClick: function () {\n          if (original_wavesurfer != undefined) {\n            original_wavesurfer.playPause();\n          }\n        },\n        children: \"Play/Pause original\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"playpausebutton\",\n        onClick: function () {\n          if (processed_wavesurfer != undefined) {\n            processed_wavesurfer.playPause();\n          }\n        },\n        children: \"Play/Pause denoised\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n\n  function handleKeyDown(e) {\n    if (e.code === \"Backspace\") {\n      if (selected_audio_clip) {\n        //delete selected audio clip on backspace key press\n        let form = new FormData();\n        form.append('model', 'audioclip');\n        form.append('id', selected_audio_clip.id);\n        axios({\n          method: 'post',\n          url: 'delete-object/',\n          data: form\n        }).then(response => {\n          console.log(response);\n        });\n        setUpdateHighlights(update_highlights => !update_highlights);\n        setUpdateDataPanel(update_data_panel => !update_data_panel);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-box\",\n    onKeyDown: e => handleKeyDown(e),\n    tabIndex: \"-1\",\n    children: [/*#__PURE__*/_jsxDEV(SelectionList, {\n      list_type: \"backend-data\",\n      object: ['audiofile'],\n      selectable: true,\n      onSelect: handleAudioSelection // display_audio={true}\n      ,\n      display_title: true,\n      style_options: {\n        width: '20%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analyse-audio-container\",\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        playpause: true,\n        Highlights: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wavesurfer-container\",\n        children: [/*#__PURE__*/_jsxDEV(Waveform, {\n          spectrogram: true //if chrome is used, visuals are generated from original audio, else from denoised audio\n          ,\n          filedata: audio_file ? audio_file.denoised_filedata ? isChrome ? audio_file.filedata : audio_file.denoised_filedata : null : null,\n          wave_height: 150,\n          spec_height: '150px',\n          style_options: {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), audio_file ? /*#__PURE__*/_jsxDEV(Highlights, {\n          audio_file: audio_file,\n          onSelect: handleHighlightSelection,\n          onHighlightSave: handleHighlightSave,\n          update_prop: update_highlights\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), selected_audio_clip ? /*#__PURE__*/_jsxDEV(ObjectDataPanel, {\n        object: selected_audio_clip,\n        keys: ['title', 'start_time', 'end_time', 'use_as_ref', 'animal'],\n        mutable: true,\n        style_options: {\n          width: 'calc(50% - 10px)',\n          height: 'calc(45px * 5 + 15px)'\n        },\n        update_prop: update_data_panel,\n        onDataUpdate: handleAudioClipDataChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MultipleObjectDataPanel, {\n      model: \"animal\",\n      keys: ['color'],\n      style_options: {\n        width: 'calc(20% - 40px + 18px)'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Analysis, \"v7Nu5/F7QYOaknlxNOULjkXUEdE=\");\n\n_c = Analysis;\nexport default Analysis;\n\nvar _c;\n\n$RefreshReg$(_c, \"Analysis\");","map":{"version":3,"sources":["/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/Analysis.js"],"names":["useEffect","useState","axios","SelectionList","Waveform","Highlights","ObjectDataPanel","MultipleObjectDataPanel","Toolbar","isChrome","getCSRF","defaults","headers","common","original_wavesurfer","processed_wavesurfer","waveform_height","Analysis","audio_file","setAudioFile","selected_audio_clip","setSelectedAudioClip","update_data_panel","setUpdateDataPanel","update_highlights","setUpdateHighlights","handleAudioSelection","selection","object","handleHighlightSelection","html_selected","form","FormData","append","object_id","method","url","data","then","response","handleHighlightSave","handleAudioClipDataChange","playPauseButtons","undefined","playPause","handleKeyDown","e","code","id","console","log","width","height","denoised_filedata","filedata"],"mappings":"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","sourcesContent":["import './Analysis.css';\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nimport SelectionList from './SelectionList.js'\nimport Waveform from './Waveform.js'\nimport Highlights from './Highlights.js'\nimport ObjectDataPanel from './ObjectDataPanel.js'\nimport MultipleObjectDataPanel from './MultipleObjectDataPanel.js'\nimport Toolbar from './Toolbar'\n\nimport { isChrome } from 'react-device-detect';\n\nimport getCSRF from './getCSRF.js'\naxios.defaults.headers.common[\"X-CSRFTOKEN\"] = getCSRF();\n\n//initialise\nvar original_wavesurfer = null;\nvar processed_wavesurfer = null;\n\nconst waveform_height = 200;\n\nfunction Analysis() {\n\n    const [ audio_file, setAudioFile ] = useState(null);\n\n    const [ selected_audio_clip, setSelectedAudioClip ] = useState(null)\n\n    const [ update_data_panel, setUpdateDataPanel ] = useState(false)\n\n    const [ update_highlights, setUpdateHighlights ] = useState(false)\n\n    function handleAudioSelection(selection) {\n        setAudioFile(()=>selection.object)\n    }\n\n\n    function handleHighlightSelection(selection) {\n        if (selection.html_selected) {\n            const form = new FormData\n            form.append('return', 'single')\n            form.append('model', 'AudioClip')\n            form.append('id', selection.object_id)\n\n            axios({\n                method: 'post',\n                url: 'get-model/',\n                data: form,\n            }).then((response)=>{\n                setSelectedAudioClip(()=>response.data[0])\n            })\n        } else {\n            setSelectedAudioClip(()=>null)\n        }\n    }\n\n\n    function handleHighlightSave(object_id) {\n        const form = new FormData\n        form.append('return', 'single')\n        form.append('model', 'AudioClip')\n        form.append('id', object_id)\n\n        axios({\n            method: 'post',\n            url: 'get-model/',\n            data: form,\n        }).then((response)=>{\n            setSelectedAudioClip(()=>response.data[0])\n            setUpdateDataPanel((update_data_panel)=>!update_data_panel)\n        })\n    }\n\n    function handleAudioClipDataChange() {\n        setUpdateHighlights((update_highlights)=>!update_highlights)\n    }\n\n    function playPauseButtons() {\n\n        return (\n            <div>\n                <button className='playpausebutton' onClick={function() {\n                    if (original_wavesurfer != undefined) {\n                        original_wavesurfer.playPause()\n                    }\n                }}>Play/Pause original</button>\n                <button className='playpausebutton' onClick={function() {\n                    if (processed_wavesurfer != undefined) {\n                        processed_wavesurfer.playPause()\n                    }\n                }}>Play/Pause denoised</button>\n            </div>\n        )\n    }\n\n\n    function handleKeyDown(e) {\n        if (e.code===\"Backspace\") {\n            if (selected_audio_clip) {\n                //delete selected audio clip on backspace key press\n                let form = new FormData\n                form.append('model', 'audioclip')\n                form.append('id', selected_audio_clip.id)\n                axios({\n                    method: 'post',\n                    url: 'delete-object/',\n                    data: form,\n                }).then((response)=>{\n                    console.log(response)\n                })\n                setUpdateHighlights((update_highlights)=>!update_highlights)\n                setUpdateDataPanel((update_data_panel)=>!update_data_panel)\n            }\n        }\n    }\n\n\n    return (\n        <div className='main-box' onKeyDown={(e)=>handleKeyDown(e)} tabIndex=\"-1\">\n            <SelectionList \n                list_type='backend-data' \n                object={['audiofile']}\n                selectable={true}\n                onSelect={handleAudioSelection}\n                // display_audio={true}\n                display_title={true}\n                style_options={{\n                    width: '20%',\n                    height: '100%',\n                }}\n            />\n\n            <div className='analyse-audio-container'>\n                <Toolbar\n                    playpause={true}\n                    Highlights={true}\n                />\n                <div className='wavesurfer-container'>\n                    <Waveform\n                        spectrogram={true}\n                        //if chrome is used, visuals are generated from original audio, else from denoised audio\n                        filedata={audio_file? (audio_file.denoised_filedata? (isChrome? audio_file.filedata : audio_file.denoised_filedata) : null) : null}\n                        wave_height={150}\n                        spec_height={'150px'}\n                        style_options={{\n                        }}\n                    />\n                    {audio_file ? \n                        <Highlights\n                            audio_file={audio_file}\n                            onSelect={handleHighlightSelection}\n                            onHighlightSave={handleHighlightSave}\n                            update_prop={update_highlights}\n                        /> : <div/>}\n                </div>\n                {selected_audio_clip ? \n                    <ObjectDataPanel\n                        object = {selected_audio_clip}\n                        keys = {['title', 'start_time', 'end_time', 'use_as_ref', 'animal']}\n                        mutable = {true}\n                        style_options={{\n                            width: 'calc(50% - 10px)',\n                            height: 'calc(45px * 5 + 15px)',\n                        }}\n                        update_prop = {update_data_panel}\n                        onDataUpdate = {handleAudioClipDataChange}\n                    /> : <div/>}\n            </div>\n\n            <MultipleObjectDataPanel\n                model='animal'\n                keys={['color']}\n                style_options={{\n                    width: 'calc(20% - 40px + 18px)',\n                }}\n            />\n\n        </div>\n    )\n}\n\nexport default Analysis;"]},"metadata":{},"sourceType":"module"}