{"ast":null,"code":"var _jsxFileName = \"/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/SelectionList.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport './SelectionList.css';\nimport getCSRF from './getCSRF.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\naxios.defaults.headers.common[\"X-CSRFTOKEN\"] = getCSRF();\n\nfunction SelectionList(props) {\n  _s();\n\n  //general selection list\n  //props:\n  //list_type: backend-data\n  //object - single object or list of object to retrieve from backend\n  //should be in array form: ['audiofile']\n  //display_title - display title of object?\n  //display_audio - display audio controls for file?\n  //selectable - are list items selectable?\n  //onSelect - function to which selected item is passed upwards\n  //style_options - passed to css style of the list container\n  const [list, setList] = useState(null);\n  const [is_table, setIsTable] = useState(null);\n  const [selected_header, setSelectedHeader] = useState(null);\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  useEffect(() => {\n    if (props.list_type === 'backend-data') {\n      if (!selected_header) {\n        if (props.object.length > 1) {\n          //if multiple objects are provided, list will provide a table\n          setIsTable(true);\n          setSelectedHeader(props.object[0]);\n        } else {\n          setIsTable(false);\n          setSelectedHeader(props.object[0]);\n        }\n      }\n\n      let temp = {};\n\n      for (let object of props.object) {\n        let form = new FormData();\n        form.append('model', object);\n        form.append('return', 'list');\n        axios({\n          method: 'post',\n          url: 'get-model/',\n          data: form\n        }).then(response => {\n          console.log('here');\n          console.log(isMounted.current);\n\n          if (isMounted.current) {\n            temp[object] = response.data;\n\n            if (Object.keys(temp).length == props.object.length) {\n              setList(temp);\n            }\n          }\n        });\n      }\n    }\n  }, [props]);\n\n  function handleHeaderClick(e) {\n    setSelectedHeader(e.target.getAttribute('object')); //add property for sending selected header to parent component\n\n    for (let header of document.getElementsByClassName('list-header')) {\n      header === e.currentTarget ? header.className = 'list-header selected' : header.className = 'list-header selectable';\n    }\n  }\n\n  function handleItemClick(e) {\n    //send selected item to parent component\n    if (e.currentTarget.className === 'list-element selectable') {\n      let pk = e.currentTarget.getAttribute('pk');\n      let selected_db_object = list[selected_header].find(obj => String(obj.id) === pk);\n\n      if (props.onSelect) {\n        let form = {\n          html_selected: e.currentTarget,\n          object: selected_db_object\n        };\n        props.onSelect(form);\n      } //update visuals to show selected component\n\n\n      for (let el of document.getElementsByClassName('list-element')) {\n        if (el === e.currentTarget) {\n          el.className = 'list-element selected'; // el.setAttribute('onClick', (e)=>null)\n        } else {\n          el.className = 'list-element selectable';\n        } // el['onClick'] = (e)=>handleItemClick(e)\n\n      }\n    }\n  }\n\n  function displayElement(el) {\n    function displayData() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-data-container\",\n        children: props.display_data.bool.map(function (booldata) {\n          if (!typeof booldata === 'object') {\n            booldata = {\n              data: booldata\n            };\n          }\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'inline'\n            },\n            children: [booldata.title ? booldata.title : booldata.data, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-data-bool-indicator\",\n              style: {\n                backgroundColor: el[booldata.data] ? booldata.colors ? booldata.colors[0] : 'rgb(0,255,0)' : booldata.colors ? booldata.colors[1] : 'rgb(255,0,0)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, this)]\n          }, booldata.data, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this);\n        })\n      }, String(el.id), false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selection-list-element-container\",\n      children: [props.display_title === undefined || props.display_title ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selection-list-title\",\n        children: String(el.title)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 76\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 26\n      }, this), props.display_audio && el.filedata ? /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        src: el.filedata,\n        className: \"selection-list-audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 57\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 28\n      }, this), props.display_data ? displayData() : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 54\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"list-container\",\n    style: props.style_options ? { ...props.style_options\n    } : null,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-headers-container\",\n      children: is_table ? props.object.map(function (object) {\n        const header_props = {\n          object: object,\n          onClick: e => handleHeaderClick(e)\n        };\n        return /*#__PURE__*/_createElement(\"div\", {\n          className: object === selected_header ? 'list-header selected' : 'list-header selectable',\n          ...header_props,\n          key: object,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }\n        }, object);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-elements-container\",\n      style: {\n        height: //calculations for height based on other element heights...\n        document.getElementById('list-container') ? document.getElementsByClassName('list-header')[0] ? String(document.getElementById('list-container').offsetHeight - document.getElementsByClassName('list-header')[0].offsetHeight - 20) + 'px' : String(document.getElementById('list-container').offsetHeight - 10) + 'px' : 'auto'\n      },\n      children: list && selected_header ? list[selected_header].map(function (list_element) {\n        //display list elements\n        const element_props = {\n          className: 'list-element',\n          pk: list_element.id\n        };\n\n        if (props.selectable) {\n          if (props.default_selected && props.default_selected === list_element.id) {\n            element_props['className'] = 'list-element selected';\n          } else {\n            element_props['className'] = 'list-element selectable';\n          }\n\n          element_props['onClick'] = e => handleItemClick(e);\n        }\n\n        return /*#__PURE__*/_createElement(\"div\", { ...element_props,\n          key: list_element.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }\n        }, displayElement(list_element));\n      }) : 'retrieving list...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SelectionList, \"W+6gji2V7/52a8/2qrH2y0vaRlE=\");\n\n_c = SelectionList;\nexport default SelectionList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectionList\");","map":{"version":3,"sources":["/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/SelectionList.js"],"names":["axios","useState","useEffect","getCSRF","defaults","headers","common","SelectionList","props","list","setList","is_table","setIsTable","selected_header","setSelectedHeader","isMounted","useRef","current","list_type","object","length","temp","form","FormData","append","method","url","data","then","response","console","log","Object","keys","handleHeaderClick","e","target","getAttribute","header","document","getElementsByClassName","currentTarget","className","handleItemClick","pk","selected_db_object","find","obj","String","id","onSelect","html_selected","el","displayElement","displayData","display_data","bool","map","booldata","display","title","backgroundColor","colors","display_title","undefined","display_audio","filedata","style_options","header_props","onClick","height","getElementById","offsetHeight","list_element","element_props","selectable","default_selected"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { useState, useEffect } from 'react'\nimport './SelectionList.css'\n\nimport getCSRF from './getCSRF.js'\naxios.defaults.headers.common[\"X-CSRFTOKEN\"] = getCSRF();\n\nfunction SelectionList(props) {\n    //general selection list\n\n    //props:\n    //list_type: backend-data\n        //object - single object or list of object to retrieve from backend\n                    //should be in array form: ['audiofile']\n        //display_title - display title of object?\n        //display_audio - display audio controls for file?\n    //selectable - are list items selectable?\n    //onSelect - function to which selected item is passed upwards\n    //style_options - passed to css style of the list container\n    \n    const [ list, setList ] = useState(null)\n    const [ is_table, setIsTable ] = useState(null)\n    const [ selected_header, setSelectedHeader ] = useState(null)\n\n    const isMounted = useRef(false)\n\n    useEffect(() => {\n        isMounted.current = true;\n        return () => { isMounted.current = false }\n    }, []);\n\n    useEffect(() => {\n        if (props.list_type==='backend-data') {\n        \n            if (!selected_header) {\n                if (props.object.length > 1) {\n                    //if multiple objects are provided, list will provide a table\n                    setIsTable(true)\n                    setSelectedHeader(props.object[0])\n                } else {\n                    setIsTable(false)\n                    setSelectedHeader(props.object[0])\n                }\n            }\n\n            let temp = {}\n\n            for (let object of props.object) {\n\n                let form = (new FormData)\n                form.append('model', object)\n                form.append('return', 'list')\n\n                axios({\n                    method: 'post',\n                    url: 'get-model/',\n                    data: form\n                }).then((response) => {\n\n                    console.log('here')\n                    console.log(isMounted.current)\n                    if (isMounted.current) {\n\n                        temp[object]=response.data\n                        if (Object.keys(temp).length == props.object.length) {\n                            setList(temp)\n                        }\n                    }\n                })\n            }\n        }\n    }, [props])\n\n\n    function handleHeaderClick(e) {\n        setSelectedHeader(e.target.getAttribute('object'))\n\n        //add property for sending selected header to parent component\n        for (let header of document.getElementsByClassName('list-header')) {\n            header===e.currentTarget? header.className='list-header selected' : header.className='list-header selectable'\n        }\n    }\n\n\n    function handleItemClick(e) {\n        //send selected item to parent component\n        if (e.currentTarget.className==='list-element selectable') {\n            \n            let pk = e.currentTarget.getAttribute('pk')\n            let selected_db_object = list[selected_header].find((obj) => String(obj.id)===pk)\n\n            if (props.onSelect) {\n                let form = {\n                    html_selected: e.currentTarget,\n                    object: selected_db_object\n                }\n                props.onSelect(form)\n            }\n\n            //update visuals to show selected component\n            for (let el of document.getElementsByClassName('list-element')) {\n\n                if (el===e.currentTarget) {\n                    el.className = 'list-element selected'\n                    // el.setAttribute('onClick', (e)=>null)\n                } else {\n                    el.className = 'list-element selectable'}\n                    // el['onClick'] = (e)=>handleItemClick(e)\n                }\n        }\n    }\n\n\n    function displayElement(el) {\n\n        function displayData() {\n\n            return (\n                <div className='list-data-container' key={String(el.id)}>\n                    {props.display_data.bool.map(function(booldata) {\n\n                        if (!typeof(booldata)==='object') {booldata = {data: booldata}}\n\n                        return(\n                            <div style={{display:'inline'}} key={booldata.data}>\n                                {booldata.title? booldata.title : booldata.data}\n                                <div className='list-data-bool-indicator' style={{\n                                    backgroundColor: el[booldata.data] ? (booldata.colors? booldata.colors[0]:'rgb(0,255,0)'):(booldata.colors? booldata.colors[1]:'rgb(255,0,0)')\n                                }}/>\n                            </div>\n                        )\n\n                    })}\n                </div>\n            )\n        }\n\n        return (\n            <div className='selection-list-element-container'>\n\n                {(props.display_title===undefined || props.display_title)? <div className='selection-list-title'>\n                    {String(el.title)}\n                </div> : <div/>}\n\n                {(props.display_audio && el.filedata) ? <audio \n                    controls\n                    src={el.filedata}\n                    className='selection-list-audio'>\n                </audio> : <div/>}\n\n                {props.display_data? displayData() : <div/>}\n\n            </div>\n        )\n    }\n    \n\n    return (\n        <div id='list-container' style={props.style_options? {...props.style_options} : null}>\n            \n            <div className='list-headers-container'>\n                {is_table ? props.object.map(function(object) {\n\n                    const header_props = {\n                        object: object,\n                        onClick: (e) => handleHeaderClick(e),\n                    }\n\n                    return (\n                        <div className={object===selected_header? 'list-header selected':'list-header selectable'} {...header_props} key={object}>\n                            {object}\n                        </div>\n                    )\n                }) : <div/>}\n            </div>\n            \n            <div className='list-elements-container' style={\n                {height: //calculations for height based on other element heights...\n                    document.getElementById('list-container') ?\n                    (document.getElementsByClassName('list-header')[0] ?\n                    String(document.getElementById('list-container').offsetHeight - document.getElementsByClassName('list-header')[0].offsetHeight - 20) + 'px' \n                    : String(document.getElementById('list-container').offsetHeight - 10) + 'px')\n                    : 'auto'}}>\n                \n                {(list && selected_header) ? list[selected_header].map(function(list_element) {//display list elements\n\n                    const element_props = {\n                        className: 'list-element',\n                        pk: list_element.id\n                    }\n\n                    if (props.selectable) {\n                        if (props.default_selected && props.default_selected===list_element.id) {\n                            element_props['className'] = 'list-element selected'\n                        } else {\n                            element_props['className'] = 'list-element selectable'\n                        }\n                        element_props['onClick'] = (e)=>handleItemClick(e)\n                    }\n\n                    return (\n                        <div {...element_props} key={list_element.id}>\n                            {displayElement(list_element)}\n                        </div>\n                    )\n                }) : 'retrieving list...'}\n\n            </div>\n        </div>\n    )\n}\n\nexport default SelectionList"]},"metadata":{},"sourceType":"module"}