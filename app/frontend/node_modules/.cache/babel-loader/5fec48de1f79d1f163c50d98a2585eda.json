{"ast":null,"code":"var _jsxFileName = \"/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/ObjectDataPanel.js\",\n    _s = $RefreshSig$();\n\nimport './ObjectDataPanel.css';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport SelectionList from './SelectionList';\nimport getCSRF from './getCSRF.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.headers.common[\"X-CSRFTOKEN\"] = getCSRF();\n\nfunction ObjectDataPanel(props) {\n  _s();\n\n  //display mutable and/or immutable data about an object\n  //object - object to display data for\n  //mutable: true/false - should object values be alterable?\n  //keys - which keys of object to display, if left blank all keys are displayed\n  //style_options - custom css styles passed to data panel\n  const [field_types, setFieldTypes] = useState(null);\n  useEffect(() => {\n    //get types of *mutable* fields\n    let form = new FormData();\n    form.append('model', 'audioclip');\n    form.append('fields', props.keys);\n    axios({\n      method: 'post',\n      url: 'get-field-types/',\n      data: form\n    }).then(function (response) {\n      setFieldTypes(response.data);\n    });\n  }, [props]);\n\n  function onButtonPress(e) {\n    let field_key = e.target.id.split('-')[0];\n    let input_element = document.getElementById(field_key);\n\n    if (input_element.type === 'checkbox') {\n      input_element.value = input_element.checked;\n    }\n\n    let new_value = input_element.value;\n    updateDB(field_key, new_value);\n  }\n\n  function updateDB(field_key, new_value) {\n    let form = new FormData();\n    form.append('model', 'audioclip');\n    form.append('id', props.object.id);\n    form.append('field_key', field_key);\n    form.append('new_value', new_value);\n    axios({\n      method: 'post',\n      url: 'update-object/',\n      data: form\n    }).then(function (response) {\n      console.log(response.data);\n    });\n\n    if (props.onDataUpdate) {\n      props.onDataUpdate();\n    }\n  }\n\n  function foreignKeyChange(form) {\n    let field_key = form.html_selected.parentElement.parentElement.parentElement.parentElement.getAttribute('ref_key');\n    let new_value = form.object.id;\n    updateDB(field_key, new_value);\n  }\n\n  function displayParameter(key) {\n    if (field_types) {\n      let field_type = field_types[props.keys.indexOf(key)];\n\n      if (field_type === 'CharField') {\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          id: key,\n          className: \"data-panel-value\",\n          type: \"text\",\n          defaultValue: String(props.object[key])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this);\n      } else if (field_type === 'DecimalField') {\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          id: key,\n          className: \"data-panel-value\",\n          type: \"number\",\n          step: 0.01,\n          defaultValue: parseFloat(props.object[key])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this);\n      } else if (field_type === 'BooleanField') {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-panel-value\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            id: key,\n            type: \"checkbox\",\n            name: \"use as ref\",\n            defaultChecked: props.object[key]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this);\n      } else if (field_type === 'ForeignKey') {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-panel-value-list\",\n          children: /*#__PURE__*/_jsxDEV(SelectionList, {\n            list_type: \"backend-data\",\n            object: ['animal'],\n            selectable: true,\n            onSelect: foreignKeyChange,\n            style_options: {\n              height: 'max-content',\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this);\n      } else return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"unknown field type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 27\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-panel-value\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: key,\n          type: \"text\",\n          defaultValue: String(props.object[key])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: key + '-button',\n          className: \"data-panel-update-button\",\n          type: \"button\",\n          onClick: onButtonPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"object-data-panel\",\n    style: props.style_options ? { ...props.style_options\n    } : null,\n    children: Object.keys(props.object).map(function (key) {\n      if (!props.keys || props.keys.includes(key)) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-panel-property\",\n          ref_key: key,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-panel-key\",\n            children: key + ': '\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this), displayParameter(key)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ObjectDataPanel, \"7Hw7BghEXAF3qz1NPTITjOUocOw=\");\n\n_c = ObjectDataPanel;\nexport default ObjectDataPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"ObjectDataPanel\");","map":{"version":3,"sources":["/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/ObjectDataPanel.js"],"names":["useEffect","useState","axios","SelectionList","getCSRF","defaults","headers","common","ObjectDataPanel","props","field_types","setFieldTypes","form","FormData","append","keys","method","url","data","then","response","onButtonPress","e","field_key","target","id","split","input_element","document","getElementById","type","value","checked","new_value","updateDB","object","console","log","onDataUpdate","foreignKeyChange","html_selected","parentElement","getAttribute","displayParameter","key","field_type","indexOf","String","parseFloat","height","width","style_options","Object","map","includes"],"mappings":";;;AAAA,OAAO,uBAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAOC,OAAP,MAAoB,cAApB;;AACAF,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,aAA9B,IAA+CH,OAAO,EAAtD;;AAGA,SAASI,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC5B;AAEA;AACA;AACA;AACA;AAEA,QAAM,CAAEC,WAAF,EAAeC,aAAf,IAAiCV,QAAQ,CAAC,IAAD,CAA/C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAIY,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqB,WAArB;AACAF,IAAAA,IAAI,CAACE,MAAL,CAAY,QAAZ,EAAsBL,KAAK,CAACM,IAA5B;AACAb,IAAAA,KAAK,CAAC;AACFc,MAAAA,MAAM,EAAE,MADN;AAEFC,MAAAA,GAAG,EAAE,kBAFH;AAGFC,MAAAA,IAAI,EAAEN;AAHJ,KAAD,CAAL,CAIGO,IAJH,CAIQ,UAASC,QAAT,EAAmB;AACvBT,MAAAA,aAAa,CAACS,QAAQ,CAACF,IAAV,CAAb;AACH,KAND;AAOH,GAZQ,EAYN,CAACT,KAAD,CAZM,CAAT;;AAeA,WAASY,aAAT,CAAuBC,CAAvB,EAA0B;AACtB,QAAIC,SAAS,GAAGD,CAAC,CAACE,MAAF,CAASC,EAAT,CAAYC,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAhB;AAEA,QAAIC,aAAa,GAAGC,QAAQ,CAACC,cAAT,CAAwBN,SAAxB,CAApB;;AAEA,QAAII,aAAa,CAACG,IAAd,KAAqB,UAAzB,EAAqC;AACjCH,MAAAA,aAAa,CAACI,KAAd,GAAsBJ,aAAa,CAACK,OAApC;AACH;;AAED,QAAIC,SAAS,GAAGN,aAAa,CAACI,KAA9B;AAEAG,IAAAA,QAAQ,CAACX,SAAD,EAAYU,SAAZ,CAAR;AACH;;AAED,WAASC,QAAT,CAAkBX,SAAlB,EAA6BU,SAA7B,EAAwC;AAEpC,QAAIrB,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqB,WAArB;AACAF,IAAAA,IAAI,CAACE,MAAL,CAAY,IAAZ,EAAkBL,KAAK,CAAC0B,MAAN,CAAaV,EAA/B;AACAb,IAAAA,IAAI,CAACE,MAAL,CAAY,WAAZ,EAAyBS,SAAzB;AACAX,IAAAA,IAAI,CAACE,MAAL,CAAY,WAAZ,EAAyBmB,SAAzB;AAEA/B,IAAAA,KAAK,CAAC;AACFc,MAAAA,MAAM,EAAE,MADN;AAEFC,MAAAA,GAAG,EAAE,gBAFH;AAGFC,MAAAA,IAAI,EAAEN;AAHJ,KAAD,CAAL,CAIGO,IAJH,CAIQ,UAASC,QAAT,EAAmB;AACvBgB,MAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAQ,CAACF,IAArB;AACH,KAND;;AAQA,QAAIT,KAAK,CAAC6B,YAAV,EAAwB;AAAC7B,MAAAA,KAAK,CAAC6B,YAAN;AAAqB;AACjD;;AAED,WAASC,gBAAT,CAA0B3B,IAA1B,EAAgC;AAC5B,QAAIW,SAAS,GAAGX,IAAI,CAAC4B,aAAL,CAAmBC,aAAnB,CAAiCA,aAAjC,CAA+CA,aAA/C,CAA6DA,aAA7D,CAA2EC,YAA3E,CAAwF,SAAxF,CAAhB;AACA,QAAIT,SAAS,GAAGrB,IAAI,CAACuB,MAAL,CAAYV,EAA5B;AACAS,IAAAA,QAAQ,CAACX,SAAD,EAAYU,SAAZ,CAAR;AACH;;AAGD,WAASU,gBAAT,CAA0BC,GAA1B,EAA+B;AAE3B,QAAIlC,WAAJ,EAAiB;AAEb,UAAImC,UAAU,GAAGnC,WAAW,CAACD,KAAK,CAACM,IAAN,CAAW+B,OAAX,CAAmBF,GAAnB,CAAD,CAA5B;;AACA,UAAIC,UAAU,KAAG,WAAjB,EAA8B;AAC1B,4BACI;AACI,UAAA,EAAE,EAAED,GADR;AAEI,UAAA,SAAS,EAAC,kBAFd;AAGI,UAAA,IAAI,EAAC,MAHT;AAII,UAAA,YAAY,EAAEG,MAAM,CAACtC,KAAK,CAAC0B,MAAN,CAAaS,GAAb,CAAD;AAJxB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAQH,OATD,MASO,IAAIC,UAAU,KAAG,cAAjB,EAAiC;AACpC,4BACI;AACI,UAAA,EAAE,EAAED,GADR;AAEI,UAAA,SAAS,EAAC,kBAFd;AAGI,UAAA,IAAI,EAAC,QAHT;AAII,UAAA,IAAI,EAAE,IAJV;AAKI,UAAA,YAAY,EAAEI,UAAU,CAACvC,KAAK,CAAC0B,MAAN,CAAaS,GAAb,CAAD;AAL5B;AAAA;AAAA;AAAA;AAAA,gBADJ;AASH,OAVM,MAUA,IAAIC,UAAU,KAAG,cAAjB,EAAiC;AACpC,4BACI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI;AACI,YAAA,EAAE,EAAED,GADR;AAEI,YAAA,IAAI,EAAC,UAFT;AAGI,YAAA,IAAI,EAAC,YAHT;AAII,YAAA,cAAc,EAAEnC,KAAK,CAAC0B,MAAN,CAAaS,GAAb;AAJpB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAUH,OAXM,MAWA,IAAIC,UAAU,KAAG,YAAjB,EAA+B;AAClC,4BACI;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,iCACI,QAAC,aAAD;AACI,YAAA,SAAS,EAAC,cADd;AAEI,YAAA,MAAM,EAAE,CAAC,QAAD,CAFZ;AAGI,YAAA,UAAU,EAAE,IAHhB;AAII,YAAA,QAAQ,EAAEN,gBAJd;AAKI,YAAA,aAAa,EAAE;AACXU,cAAAA,MAAM,EAAE,aADG;AAEXC,cAAAA,KAAK,EAAE;AAFI;AALnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAcH,OAfM,MAeA,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAEV,KAlDD,MAkDO;AAEH,0BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACI;AACI,UAAA,EAAE,EAAEN,GADR;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,YAAY,EAAEG,MAAM,CAACtC,KAAK,CAAC0B,MAAN,CAAaS,GAAb,CAAD;AAHxB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAQ,UAAA,EAAE,EAAEA,GAAG,GAAC,SAAhB;AAA2B,UAAA,SAAS,EAAC,0BAArC;AAAgE,UAAA,IAAI,EAAC,QAArE;AAA8E,UAAA,OAAO,EAAEvB;AAAvF;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAUH;AACJ;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAkC,IAAA,KAAK,EAAEZ,KAAK,CAAC0C,aAAN,GAAqB,EAAC,GAAG1C,KAAK,CAAC0C;AAAV,KAArB,GAAgD,IAAzF;AAAA,cAEKC,MAAM,CAACrC,IAAP,CAAYN,KAAK,CAAC0B,MAAlB,EAA0BkB,GAA1B,CAA8B,UAAST,GAAT,EAAc;AAEzC,UAAI,CAACnC,KAAK,CAACM,IAAP,IAAeN,KAAK,CAACM,IAAN,CAAWuC,QAAX,CAAoBV,GAApB,CAAnB,EAA6C;AACzC,4BACI;AAAK,UAAA,SAAS,EAAC,qBAAf;AAA+C,UAAA,OAAO,EAAEA,GAAxD;AAAA,kCAEI;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,sBACKA,GAAG,GAAG;AADX;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAKKD,gBAAgB,CAACC,GAAD,CALrB;AAAA,WAA0CA,GAA1C;AAAA;AAAA;AAAA;AAAA,gBADJ;AAUH;AACJ,KAdA;AAFL;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GAxJQpC,e;;KAAAA,e;AA0JT,eAAeA,eAAf","sourcesContent":["import './ObjectDataPanel.css'\nimport { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nimport SelectionList from './SelectionList';\n\nimport getCSRF from './getCSRF.js'\naxios.defaults.headers.common[\"X-CSRFTOKEN\"] = getCSRF();\n\n\nfunction ObjectDataPanel(props) {\n    //display mutable and/or immutable data about an object\n\n    //object - object to display data for\n    //mutable: true/false - should object values be alterable?\n    //keys - which keys of object to display, if left blank all keys are displayed\n    //style_options - custom css styles passed to data panel\n\n    const [ field_types, setFieldTypes ] = useState(null)\n\n    useEffect(() => {\n        //get types of *mutable* fields\n        let form = new FormData\n        form.append('model', 'audioclip')\n        form.append('fields', props.keys)\n        axios({\n            method: 'post',\n            url: 'get-field-types/',\n            data: form\n        }).then(function(response) {\n            setFieldTypes(response.data)\n        })\n    }, [props])\n\n\n    function onButtonPress(e) {\n        let field_key = e.target.id.split('-')[0]\n\n        let input_element = document.getElementById(field_key)\n        \n        if (input_element.type==='checkbox') {\n            input_element.value = input_element.checked\n        }\n\n        let new_value = input_element.value\n\n        updateDB(field_key, new_value)\n    }\n\n    function updateDB(field_key, new_value) {\n\n        let form = new FormData\n        form.append('model', 'audioclip')\n        form.append('id', props.object.id)\n        form.append('field_key', field_key)\n        form.append('new_value', new_value)\n\n        axios({\n            method: 'post',\n            url: 'update-object/',\n            data: form\n        }).then(function(response) {\n            console.log(response.data)\n        })\n\n        if (props.onDataUpdate) {props.onDataUpdate()}\n    }\n\n    function foreignKeyChange(form) {\n        let field_key = form.html_selected.parentElement.parentElement.parentElement.parentElement.getAttribute('ref_key')\n        let new_value = form.object.id\n        updateDB(field_key, new_value)\n    }\n\n\n    function displayParameter(key) {\n\n        if (field_types) {\n\n            let field_type = field_types[props.keys.indexOf(key)]\n            if (field_type==='CharField') {\n                return (\n                    <input \n                        id={key}\n                        className='data-panel-value'\n                        type='text'\n                        defaultValue={String(props.object[key])}\n                    />\n                )\n            } else if (field_type==='DecimalField') {\n                return (\n                    <input\n                        id={key}\n                        className='data-panel-value'\n                        type='number'\n                        step={0.01}\n                        defaultValue={parseFloat(props.object[key])}\n                    />\n                )\n            } else if (field_type==='BooleanField') {\n                return (\n                    <div className='data-panel-value'>\n                        <input\n                            id={key}\n                            type='checkbox'\n                            name='use as ref'\n                            defaultChecked={props.object[key]}\n                        />\n                    </div>\n                )\n            } else if (field_type==='ForeignKey') {\n                return (\n                    <div className='data-panel-value-list'>\n                        <SelectionList\n                            list_type='backend-data'\n                            object={['animal']}\n                            selectable={true}\n                            onSelect={foreignKeyChange}\n                            style_options={{\n                                height: 'max-content',\n                                width: '100%',\n                            }}\n                        />\n                    </div>\n                )\n            } else return <div>unknown field type</div>\n\n        } else {\n\n            return (\n                <div className='data-panel-value'>\n                    <input \n                        id={key}\n                        type='text'\n                        defaultValue={String(props.object[key])}\n                    />\n                    <button id={key+'-button'} className='data-panel-update-button' type='button' onClick={onButtonPress}/>\n                </div>\n            )\n        }\n    }\n\n    return (\n        <div className='object-data-panel'style={props.style_options? {...props.style_options} : null}>\n\n            {Object.keys(props.object).map(function(key) {\n\n                if (!props.keys || props.keys.includes(key)) {\n                    return (\n                        <div className='data-panel-property' key={key} ref_key={key}>\n\n                            <div className='data-panel-key'>\n                                {key + ': '}\n                            </div>\n                            {displayParameter(key)}\n    \n                        </div>\n                    )\n                }\n            })}\n        </div>\n    )\n}\n\nexport default ObjectDataPanel"]},"metadata":{},"sourceType":"module"}