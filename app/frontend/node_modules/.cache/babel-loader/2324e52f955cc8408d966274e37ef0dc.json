{"ast":null,"code":"var _jsxFileName = \"/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/ObjectDataPanel.js\",\n    _s = $RefreshSig$();\n\nimport './ObjectDataPanel.css';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport getCSRF from './getCSRF.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.headers.common[\"X-CSRFTOKEN\"] = getCSRF();\n\nfunction ObjectDataPanel(props) {\n  _s();\n\n  //display mutable and/or immutable data about an object\n  //object - object to display data for\n  //mutable: true/false - should object values be alterable?\n  //keys - which keys of object to display, if left blank all keys are displayed\n  //style_options - custom css styles passed to data panel\n  useEffect(() => {\n    //get types of *mutable* fields\n    axios({\n      method: 'post',\n      url: ''\n    });\n    console.log('data panel useeffect');\n  });\n\n  function onButtonPress(e) {\n    let field_key = e.target.id.split('-')[0];\n    let new_value = document.getElementById(field_key).value;\n    let form = new FormData();\n    form.append('model', 'audioclip');\n    form.append('id', props.object.id);\n    form.append('field_key', field_key);\n    form.append('new_value', new_value);\n    axios({\n      method: 'post',\n      url: 'update-object/',\n      data: form\n    }).then(function (response) {\n      console.log(response);\n    });\n  }\n\n  function displayParameter() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"object-data-panel\",\n    style: props.style_options ? { ...props.style_options\n    } : null,\n    children: Object.keys(props.object).map(function (key) {\n      if (!props.keys || props.keys.includes(key)) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-panel-property\",\n          children: [displayParameter(), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-panel-key\",\n            children: key + ': '\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: key,\n            className: \"data-panel-value\",\n            type: \"text\",\n            defaultValue: String(props.object[key])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: key + '-button',\n            className: \"data-panel-update-button\",\n            type: \"button\",\n            onClick: onButtonPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ObjectDataPanel, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ObjectDataPanel;\nexport default ObjectDataPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"ObjectDataPanel\");","map":{"version":3,"sources":["/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/ObjectDataPanel.js"],"names":["useEffect","axios","getCSRF","defaults","headers","common","ObjectDataPanel","props","method","url","console","log","onButtonPress","e","field_key","target","id","split","new_value","document","getElementById","value","form","FormData","append","object","data","then","response","displayParameter","style_options","Object","keys","map","key","includes","String"],"mappings":"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","sourcesContent":["import './ObjectDataPanel.css'\nimport { useEffect } from 'react'\nimport axios from 'axios'\n\nimport getCSRF from './getCSRF.js'\naxios.defaults.headers.common[\"X-CSRFTOKEN\"] = getCSRF();\n\nfunction ObjectDataPanel(props) {\n    //display mutable and/or immutable data about an object\n\n    //object - object to display data for\n    //mutable: true/false - should object values be alterable?\n    //keys - which keys of object to display, if left blank all keys are displayed\n    //style_options - custom css styles passed to data panel\n\n    useEffect(() => {\n        //get types of *mutable* fields\n        axios({\n            method: 'post',\n            url: ''\n        })\n        console.log('data panel useeffect')\n    })\n\n    function onButtonPress(e) {\n        let field_key = e.target.id.split('-')[0]\n        let new_value = document.getElementById(field_key).value\n\n        let form = new FormData\n        form.append('model', 'audioclip')\n        form.append('id', props.object.id)\n        form.append('field_key', field_key)\n        form.append('new_value', new_value)\n\n        axios({\n            method: 'post',\n            url: 'update-object/',\n            data: form\n        }).then(function(response) {\n            console.log(response)\n        })\n    }\n\n    function displayParameter() {\n        return (\n            <div></div>\n        )\n    }\n\n    return (\n        <div className='object-data-panel'style={props.style_options? {...props.style_options} : null}>\n\n            {Object.keys(props.object).map(function(key) {\n\n                if (!props.keys || props.keys.includes(key)) {\n                    return (\n                        <div className='data-panel-property' key={key}>\n    \n                            {displayParameter()}\n                            <div className='data-panel-key'>\n                                {key + ': '}\n                            </div>\n                            <input id={key} className='data-panel-value'\n                                type='text'\n                                defaultValue={String(props.object[key])}\n                            />\n                            <button id={key+'-button'} className='data-panel-update-button' type='button' onClick={onButtonPress}/>\n    \n                        </div>\n                    )\n                }\n            })}\n        </div>\n    )\n}\n\nexport default ObjectDataPanel"]},"metadata":{},"sourceType":"module"}