{"ast":null,"code":"var _jsxFileName = \"/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/SelectionList.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport './SelectionList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.headers.common[\"X-CSRFTOKEN\"] = 'gPvOPnEwl4K7jFnYGucAwkW06M5RrJFRvEtwPMUNbylfnVsG0BOm5niJPd3COr9r';\n\nfunction SelectionList(props) {\n  _s();\n\n  //general selection list\n  //props:\n  //list_type: backend-data\n  //object - single object or list of object to retrieve from backend\n  //display_title - display title of object?\n  //display_audio - display audio controls for file?\n  //selectable - are list items selectable?\n  //updateSelected - function to which selected item is passed upwards\n  //style_options - passed to css style of the list container\n  const [list, setList] = useState(null);\n  const [is_table, setIsTable] = useState(null);\n  const [selected_header, setSelectedHeader] = useState(null);\n  useEffect(() => {\n    if (props.list_type === 'backend-data') {\n      if (typeof props.object === 'object' && props.object.length > 1) {\n        //if multiple objects are provided, list will provide a table\n        setIsTable(true);\n        setSelectedHeader(props.object[0]);\n      } else if (typeof props.object === 'string') {\n        setIsTable(false);\n        setSelectedHeader(props.object);\n        props.object = [props.object];\n      } else {\n        setIsTable(false);\n        setSelectedHeader(props.object[0]);\n      }\n\n      let temp = {};\n\n      for (let object of props.object) {\n        let form = new FormData();\n        form.append('object', object);\n        form.append('return', 'list');\n        axios({\n          method: 'post',\n          url: 'get-model/',\n          data: form\n        }).then(response => {\n          temp[object] = response.data;\n\n          if (Object.keys(temp).length == list_objects.length) {\n            setList(temp);\n          }\n        });\n      }\n    }\n  }, [props.list_type]);\n\n  function handleHeaderClick(e) {\n    setSelectedHeader(e.target.getAttribute('object')); //add property for sending selected header to parent component\n\n    for (let header of document.getElementsByClassName('list-header')) {\n      header === e.currentTarget ? header.className = 'list-header selected' : header.className = 'list-header selectable';\n    }\n  }\n\n  function handleItemClick(e) {\n    console.log('item clikc');\n    console.log('selected header: ');\n    console.log(selected_header); //send selected item to parent component\n\n    let pk = e.currentTarget.getAttribute('pk');\n    let selected_db_object = list[selected_header].find(obj => String(obj.id) === pk);\n    let form = {\n      html_selected: e.currentTarget,\n      object: selected_db_object\n    };\n    if (props.updateSelected) props.updateSelected(form); //update visuals to show selected component\n\n    for (let el of document.getElementsByClassName('list-element')) {\n      el === e.currentTarget ? el.className = 'list-element selected' : el.className = 'list-element selectable';\n    }\n  }\n\n  function displayElement(el) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selection-list-element-container\",\n      children: [props.display_title ? /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"selection-list-title\",\n        children: String(el.title)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 39\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"invisible\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 26\n      }, this), props.display_audio ? /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        src: el.filedata,\n        class: \"selection-list-audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 39\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"list-container\",\n    style: props.style_options ? { ...props.style_options\n    } : null,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-headers-container\",\n      children: is_table ? props.object.map(function (object) {\n        const header_props = {\n          object: object,\n          onClick: e => handleHeaderClick(e)\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-header selectable\",\n          ...header_props,\n          children: object\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-elements-container\",\n      style: {\n        height: //calculations for height based on other element heights...\n        document.getElementById('list-container') ? document.getElementsByClassName('list-header')[0] ? String(document.getElementById('list-container').offsetHeight - document.getElementsByClassName('list-header')[0].offsetHeight - 20) + 'px' : String(document.getElementById('list-container').offsetHeight - 10) + 'px' : 'auto'\n      },\n      children: list && selected_header ? list[selected_header].map(function (list_element) {\n        //display list elements\n        const element_props = {\n          className: 'list-element',\n          pk: list_element.id\n        };\n\n        if (props.selectable) {\n          element_props['onClick'] = e => handleItemClick(e);\n\n          element_props['className'] = 'list-element selectable';\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", { ...element_props,\n          children: displayElement(list_element)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this);\n      }) : 'retrieving list...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SelectionList, \"6nrOKvstNdthvdIBkettrUoaIuc=\");\n\n_c = SelectionList;\nexport default SelectionList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectionList\");","map":{"version":3,"sources":["/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/SelectionList.js"],"names":["axios","useState","useEffect","defaults","headers","common","SelectionList","props","list","setList","is_table","setIsTable","selected_header","setSelectedHeader","list_type","object","length","temp","form","FormData","append","method","url","data","then","response","Object","keys","list_objects","handleHeaderClick","e","target","getAttribute","header","document","getElementsByClassName","currentTarget","className","handleItemClick","console","log","pk","selected_db_object","find","obj","String","id","html_selected","updateSelected","el","displayElement","display_title","title","display_audio","filedata","style_options","map","header_props","onClick","height","getElementById","offsetHeight","list_element","element_props","selectable"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { useState, useEffect } from 'react'\nimport './SelectionList.css'\n\naxios.defaults.headers.common[\"X-CSRFTOKEN\"] = 'gPvOPnEwl4K7jFnYGucAwkW06M5RrJFRvEtwPMUNbylfnVsG0BOm5niJPd3COr9r';\n\nfunction SelectionList(props) {\n    //general selection list\n\n    //props:\n    //list_type: backend-data\n        //object - single object or list of object to retrieve from backend\n        //display_title - display title of object?\n        //display_audio - display audio controls for file?\n    //selectable - are list items selectable?\n    //updateSelected - function to which selected item is passed upwards\n    //style_options - passed to css style of the list container\n    \n    const [ list, setList ] = useState(null)\n    const [ is_table, setIsTable ] = useState(null)\n    const [ selected_header, setSelectedHeader ] = useState(null)\n\n    useEffect(() => {\n\n        if (props.list_type==='backend-data') {\n\n            if (typeof(props.object)==='object' && props.object.length > 1) {\n                //if multiple objects are provided, list will provide a table\n                setIsTable(true)\n                setSelectedHeader(props.object[0])\n\n            } else if (typeof(props.object)==='string') {\n                setIsTable(false)\n                setSelectedHeader(props.object)\n                props.object = [props.object]\n            } else {\n                setIsTable(false)\n                setSelectedHeader(props.object[0])\n            }\n\n            let temp = {}\n\n            for (let object of props.object) {\n\n                let form = (new FormData)\n                form.append('object', object)\n                form.append('return', 'list')\n\n                axios({\n                    method: 'post',\n                    url: 'get-model/',\n                    data: form\n                }).then((response) => {\n                    temp[object]=response.data\n                    \n                    if (Object.keys(temp).length == list_objects.length) {\n                        setList(temp)\n                    }\n                })\n            }\n        }\n    }, [props.list_type])\n\n\n    function handleHeaderClick(e) {\n        setSelectedHeader(e.target.getAttribute('object'))\n\n        //add property for sending selected header to parent component\n        for (let header of document.getElementsByClassName('list-header')) {\n            header===e.currentTarget? header.className='list-header selected' : header.className='list-header selectable'\n        }\n    }\n\n\n    function handleItemClick(e) {\n        console.log('item clikc')\n        console.log('selected header: ')\n        console.log(selected_header)\n\n        //send selected item to parent component\n        let pk = e.currentTarget.getAttribute('pk')\n        let selected_db_object = list[selected_header].find((obj) => String(obj.id)===pk)\n\n        let form = {\n            html_selected: e.currentTarget,\n            object: selected_db_object\n        }\n\n        if (props.updateSelected) props.updateSelected(form)\n\n        //update visuals to show selected component\n        for (let el of document.getElementsByClassName('list-element')) {\n            el===e.currentTarget? el.className = 'list-element selected' : el.className = 'list-element selectable'\n        }\n    }\n\n\n    function displayElement(el) {\n\n        return (\n            <div className='selection-list-element-container'>\n\n                {props.display_title? <div class='selection-list-title'>\n                    {String(el.title)}\n                </div> : <div class='invisible'/>}\n\n                {props.display_audio? <audio \n                    controls\n                    src={el.filedata}\n                    class='selection-list-audio'>\n                </audio> : <div/>}\n\n            </div>\n        )\n    }\n    \n\n    return (\n        <div id='list-container' style={props.style_options? {...props.style_options} : null}>\n            \n            <div className='list-headers-container'>\n                {is_table ? props.object.map(function(object) {\n\n                    const header_props = {\n                        object: object,\n                        onClick: (e) => handleHeaderClick(e),\n                    }\n\n                    return (\n                        <div className='list-header selectable' {...header_props}>\n                            {object}\n                        </div>\n                    )\n                }) : <div/>}\n            </div>\n            \n            <div className='list-elements-container' style={\n                {height: //calculations for height based on other element heights...\n                    document.getElementById('list-container') ?\n                    (document.getElementsByClassName('list-header')[0] ?\n                    String(document.getElementById('list-container').offsetHeight - document.getElementsByClassName('list-header')[0].offsetHeight - 20) + 'px' \n                    : String(document.getElementById('list-container').offsetHeight - 10) + 'px')\n                    : 'auto'}}>\n                \n                {(list && selected_header) ? list[selected_header].map(function(list_element) {//display list elements\n\n                    const element_props = {\n                        className: 'list-element',\n                        pk: list_element.id\n                    }\n\n                    if (props.selectable) {\n                        element_props['onClick'] = (e)=>handleItemClick(e)\n                        element_props['className'] = 'list-element selectable'\n                    }\n\n                    return (\n                        <div {...element_props}>\n                            {displayElement(list_element)}\n                        </div>\n                    )\n                }) : 'retrieving list...'}\n\n            </div>\n        </div>\n    )\n}\n\nexport default SelectionList"]},"metadata":{},"sourceType":"module"}