{"ast":null,"code":"var _jsxFileName = \"/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/Highlights.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Highlights(props) {\n  _s();\n\n  const [audio_clips, setAudioClips] = useState(null);\n  const [colors, setColors] = useState(null);\n  const [selected_highlight, setSelectedHighlight] = useState(null);\n  const [is_dragging, setIsDragging] = useState(false);\n  const [xInitial, setXInitial] = useState(null);\n  const [xPos, setXPos] = useState(null);\n  const [highlightXInitial, setHighlightXInitial] = useState(null);\n  const [dragging_left, setDraggingLeft] = useState(null);\n  const [highlightWidthInitial, setHighlightWidthInitial] = useState(null);\n  useEffect(() => {\n    setSelectedHighlight(null);\n    updateAudioClips();\n  }, [props.audio_file, props.update_var]);\n  useEffect(() => {\n    //send selected highlight to parent function\n    if (props.onSelect) {\n      let form = {\n        html_selected: selected_highlight,\n        object_id: selected_highlight ? selected_highlight.getAttribute('highlight_id') : null\n      };\n      props.onSelect(form);\n    }\n  }, [selected_highlight]);\n\n  function updateAudioClips() {\n    //get noiseclips associated with audioFile from database\n    const form = new FormData();\n    form.append('model', 'AudioClip');\n    form.append('return', 'filtered_list');\n    form.append('id', props.audio_file.id);\n    axios({\n      method: 'post',\n      url: 'get-model/',\n      data: form\n    }).then(function (response) {\n      setAudioClips(response.data);\n      form = new FormData();\n      form.append('model', 'AudioClip');\n      form.append('return', 'filtered_list');\n      form.append('id', props.audio_file.id);\n      axios({\n        method: 'post',\n        url: 'get-model/',\n        data: form\n      }).then(function (response) {\n        console.log('colors!');\n        console.log(response.data);\n      });\n    });\n  }\n\n  function updateHighlight() {\n    // edit highlight's stored times in the database based on the user's edits\n    let hl = selected_highlight;\n    const duration = parseFloat(props.audio_file.duration);\n    let new_start = Math.round(100 * duration * hl.offsetLeft / hl.offsetParent.offsetWidth) / 100;\n    let new_end = Math.round(100 * duration * (hl.offsetWidth + hl.offsetLeft) / hl.offsetParent.offsetWidth) / 100;\n    let formdata = new FormData();\n    formdata.append('id', selected_highlight.getAttribute('highlight_id'));\n    formdata.append('start', new_start);\n    formdata.append('end', new_end);\n    axios({\n      method: 'post',\n      url: 'update-highlight/',\n      data: formdata\n    }).then(response => {\n      console.log(response);\n    });\n  }\n\n  function handleHighlightSelect(e) {\n    function changeAlpha(color, newAlpha) {\n      //takes rgba(a,b,c,d) color and alters alpha value\n      let split = color.split(',');\n      return split[0] + ',' + split[1] + ',' + split[2] + ',' + String(newAlpha) + ')';\n    } //deselect other clips\n\n\n    let hls = document.getElementsByClassName('highlight');\n\n    for (let hl of hls) {\n      if (!(hl == e.target)) {\n        hl.style.backgroundColor = changeAlpha(hl.style.backgroundColor, 0.3);\n      }\n    } //deselect or change selected highlight clip\n\n\n    let hl = e.target;\n\n    if (!(hl == selected_highlight)) {\n      hl.style.backgroundColor = changeAlpha(hl.style.backgroundColor, 0.8);\n      setSelectedHighlight(hl);\n    } else {\n      hl.style.backgroundColor = changeAlpha(hl.style.backgroundColor, 0.3);\n      setSelectedHighlight(null);\n    }\n  }\n\n  function handleMouseDown(e) {\n    if (e.target.className == 'highlight' && selected_highlight) {\n      //initial x position for dragging\n      if (xInitial == null) {\n        setXInitial(e.pageX);\n        setHighlightXInitial(selected_highlight.offsetLeft);\n        setHighlightWidthInitial(selected_highlight.offsetWidth);\n      }\n\n      handleHighlightDrag(e);\n    }\n  }\n\n  function handleHighlightDrag(e) {\n    setIsDragging(true);\n    let mouse = e.pageX - selected_highlight.offsetParent.offsetLeft;\n    let left = selected_highlight.offsetLeft;\n    let right = selected_highlight.offsetLeft + selected_highlight.offsetWidth; //drag either left or right side of highlight, depending on which side is closer\n\n    if (Math.abs(mouse - left) > Math.abs(right - mouse)) {\n      setDraggingLeft(false);\n    } else setDraggingLeft(true);\n  }\n\n  function handleMouseUp(e) {\n    if (!xInitial || xInitial == e.pageX) {\n      // if mouse did not move between mousedown & mouseup\n      if (e.target.className == 'highlight') {\n        handleHighlightSelect(e);\n      }\n\n      setIsDragging(false);\n    } else if (is_dragging) {\n      // if mouse was dragging\n      setIsDragging(false);\n      setXPos(null);\n      setDraggingLeft(null);\n      updateHighlight();\n    }\n\n    setXInitial(null);\n    setHighlightXInitial(null);\n    setHighlightWidthInitial(null);\n  }\n\n  function handlePointerMove(e) {\n    if (is_dragging && xInitial) {\n      setXPos(e.pageX - xInitial);\n\n      if (dragging_left == true) {\n        selected_highlight.style.marginLeft = String(highlightXInitial + xPos) + 'px';\n        selected_highlight.style.width = String(highlightWidthInitial - xPos) + 'px';\n      } else if (dragging_left == false) {\n        selected_highlight.style.width = String(highlightWidthInitial + xPos) + 'px';\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: audio_clips ? audio_clips.map(function (clip) {\n      const duration = parseFloat(props.audio_file.duration);\n      console.log(clip);\n      let color = 'rgba(255,0,0,0.3)';\n      let start = parseFloat(clip.start_time);\n      let end = parseFloat(clip.end_time);\n      let rel_start = Math.round(100 * start / duration);\n      let rel_end = Math.round(100 * end / duration);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"highlight\",\n        highlight_id: clip.id,\n        style: {\n          width: String(rel_end - rel_start) + \"%\",\n          height: '100px',\n          backgroundColor: color,\n          marginLeft: String(rel_start) + \"%\",\n          top: '0px',\n          position: 'absolute',\n          zIndex: 10\n        },\n        onMouseDown: handleMouseDown,\n        onMouseUp: handleMouseUp,\n        onPointerMove: handlePointerMove\n      }, clip.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }, this);\n    }) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Highlights, \"th9yobClDI+Mczcet8MT0GacBzU=\");\n\n_c = Highlights;\nexport default Highlights;\n\nvar _c;\n\n$RefreshReg$(_c, \"Highlights\");","map":{"version":3,"sources":["/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/Highlights.js"],"names":["useState","useEffect","axios","Highlights","props","audio_clips","setAudioClips","colors","setColors","selected_highlight","setSelectedHighlight","is_dragging","setIsDragging","xInitial","setXInitial","xPos","setXPos","highlightXInitial","setHighlightXInitial","dragging_left","setDraggingLeft","highlightWidthInitial","setHighlightWidthInitial","updateAudioClips","audio_file","update_var","onSelect","form","html_selected","object_id","getAttribute","FormData","append","id","method","url","data","then","response","console","log","updateHighlight","hl","duration","parseFloat","new_start","Math","round","offsetLeft","offsetParent","offsetWidth","new_end","formdata","handleHighlightSelect","e","changeAlpha","color","newAlpha","split","String","hls","document","getElementsByClassName","target","style","backgroundColor","handleMouseDown","className","pageX","handleHighlightDrag","mouse","left","right","abs","handleMouseUp","handlePointerMove","marginLeft","width","map","clip","start","start_time","end","end_time","rel_start","rel_end","height","top","position","zIndex"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nfunction Highlights(props) {\n\n    const [ audio_clips, setAudioClips ] = useState(null)\n    const [ colors, setColors ] = useState(null)\n\n    const [ selected_highlight, setSelectedHighlight ] = useState(null);\n    const [ is_dragging, setIsDragging] = useState(false);\n    const [ xInitial, setXInitial ] = useState(null)\n    const [ xPos, setXPos ] = useState(null);\n    const [ highlightXInitial, setHighlightXInitial ] = useState(null);\n    const [ dragging_left, setDraggingLeft ] = useState(null)\n    const [ highlightWidthInitial, setHighlightWidthInitial ] = useState(null)\n\n\n    useEffect(() => {\n        setSelectedHighlight(null)\n        updateAudioClips()\n    }, [props.audio_file, props.update_var])\n\n\n    useEffect(()=> {\n        //send selected highlight to parent function\n        if (props.onSelect) {\n            let form = {\n                html_selected: selected_highlight,\n                object_id: selected_highlight? selected_highlight.getAttribute('highlight_id'): null\n            }\n            props.onSelect(form)\n        }\n    }, [selected_highlight])\n\n\n    function updateAudioClips() {\n        //get noiseclips associated with audioFile from database\n        const form = (new FormData)\n        form.append('model', 'AudioClip')\n        form.append('return', 'filtered_list')\n        form.append('id', props.audio_file.id)\n\n        axios({\n            method: 'post',\n            url: 'get-model/',\n            data: form\n        }).then(function(response) {\n            setAudioClips(response.data)\n\n            form = new FormData\n            form.append('model', 'AudioClip')\n            form.append('return', 'filtered_list')\n            form.append('id', props.audio_file.id)\n\n            axios({\n                method: 'post',\n                url: 'get-model/',\n                data: form\n            }).then(function(response) {\n                console.log('colors!')\n                console.log(response.data)\n            })\n        })\n    }\n\n\n    function updateHighlight() {\n        // edit highlight's stored times in the database based on the user's edits\n        let hl = selected_highlight\n\n        const duration = parseFloat(props.audio_file.duration)\n\n        let new_start = Math.round(100*duration *  hl.offsetLeft / hl.offsetParent.offsetWidth) / 100\n        let new_end = Math.round(100*duration * (hl.offsetWidth + hl.offsetLeft) / hl.offsetParent.offsetWidth) / 100\n\n        let formdata = new FormData\n        formdata.append('id', selected_highlight.getAttribute('highlight_id'))\n        formdata.append('start', new_start)\n        formdata.append('end', new_end)\n\n        axios({\n            method: 'post',\n            url: 'update-highlight/',\n            data: formdata\n        }).then((response) => {\n            console.log(response)\n        })\n    }\n\n\n    function handleHighlightSelect(e) {\n\n        function changeAlpha(color, newAlpha) {\n            //takes rgba(a,b,c,d) color and alters alpha value\n\n            let split = color.split(',')\n            return(split[0]+','+split[1]+','+split[2]+','+String(newAlpha)+')')\n        }\n\n        //deselect other clips\n        let hls = document.getElementsByClassName('highlight')\n        for (let hl of hls) {\n            if (!(hl == e.target)) {\n                hl.style.backgroundColor = changeAlpha(hl.style.backgroundColor, 0.3)\n            }\n        }\n\n        //deselect or change selected highlight clip\n        let hl = e.target\n        if (!(hl == selected_highlight)) {\n            hl.style.backgroundColor = changeAlpha(hl.style.backgroundColor, 0.8)\n            setSelectedHighlight(hl)\n        } else {\n            hl.style.backgroundColor = changeAlpha(hl.style.backgroundColor, 0.3)\n            setSelectedHighlight(null)\n        }\n    }\n\n\n    function handleMouseDown(e) {\n\n        if ((e.target.className == 'highlight') && selected_highlight) {\n            //initial x position for dragging\n            if (xInitial == null) {\n                setXInitial(e.pageX)\n                setHighlightXInitial(selected_highlight.offsetLeft)\n                setHighlightWidthInitial(selected_highlight.offsetWidth)\n            }\n            handleHighlightDrag(e)\n        }\n    }\n\n\n    function handleHighlightDrag(e) {\n        \n        setIsDragging(true)\n\n        let mouse = e.pageX - selected_highlight.offsetParent.offsetLeft\n        let left = selected_highlight.offsetLeft\n        let right = selected_highlight.offsetLeft + selected_highlight.offsetWidth\n\n        //drag either left or right side of highlight, depending on which side is closer\n        if (Math.abs(mouse - left) > Math.abs(right - mouse)) {\n            setDraggingLeft(false)\n        } else setDraggingLeft(true)\n    }\n\n\n    function handleMouseUp(e) {\n        if (!(xInitial) || (xInitial==e.pageX)) {// if mouse did not move between mousedown & mouseup\n            \n            if (e.target.className == 'highlight') {\n                handleHighlightSelect(e)\n            }\n            setIsDragging(false)\n\n        } else if (is_dragging) { // if mouse was dragging\n\n            setIsDragging(false)\n            setXPos(null)\n            setDraggingLeft(null)\n\n            updateHighlight()\n        }\n        setXInitial(null)\n        setHighlightXInitial(null)\n        setHighlightWidthInitial(null)\n\n    }\n\n\n    function handlePointerMove(e) {\n        if (is_dragging && xInitial) {\n\n            setXPos(e.pageX - xInitial)\n            if (dragging_left == true) {\n                selected_highlight.style.marginLeft = String(highlightXInitial + xPos) + 'px'\n                selected_highlight.style.width = String(highlightWidthInitial - xPos) + 'px'\n            } else if (dragging_left == false) {\n                selected_highlight.style.width = String(highlightWidthInitial + xPos) + 'px'\n            }\n        }\n    }\n\n\n    return (\n        <div>\n            {audio_clips ? audio_clips.map(function(clip) {\n                const duration = parseFloat(props.audio_file.duration)\n                \n                console.log(clip)\n                let color = 'rgba(255,0,0,0.3)'\n\n                let start = parseFloat(clip.start_time)\n                let end = parseFloat(clip.end_time)\n\n                let rel_start = Math.round(100*start/duration)\n                let rel_end = Math.round(100*end/duration)\n\n                return (\n                    <div \n                        key={clip.id}\n                        className='highlight' \n                        highlight_id={clip.id}\n                        style={{\n                            width: String(rel_end-rel_start) + \"%\",\n                            height:'100px',\n                            backgroundColor: color,\n                            marginLeft: String(rel_start) + \"%\",\n                            top: '0px',\n                            position: 'absolute',\n                            zIndex: 10,\n                        }}\n                        onMouseDown={handleMouseDown} \n                        onMouseUp={handleMouseUp} \n                        onPointerMove={handlePointerMove} \n                    />\n                )\n            }) : null}\n        </div>\n        )\n    }\n\n\nexport default Highlights"]},"metadata":{},"sourceType":"module"}