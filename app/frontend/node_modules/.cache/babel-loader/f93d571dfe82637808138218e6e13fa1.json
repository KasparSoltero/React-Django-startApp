{"ast":null,"code":"var _jsxFileName = \"/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/MultipleObjectDataPanel.js\",\n    _s = $RefreshSig$();\n\nimport './MultipleObjectDataPanel.css';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport getCSRF from './getCSRF.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.headers.common[\"X-CSRFTOKEN\"] = getCSRF();\n\nfunction MultipleObjectDataPanel(props) {\n  _s();\n\n  //temporary fix to display animal colors\n  const [field_types, setFieldTypes] = useState(null);\n  const [list, setList] = useState(null);\n  useEffect(() => {\n    //get types of fields\n    let form = new FormData();\n    form.append('model', 'animal');\n    axios({\n      method: 'post',\n      url: 'get-field-types/',\n      data: form\n    }).then(function (response) {\n      setFieldTypes(response.data);\n    });\n    let form2 = new FormData();\n    form2.append('return', 'list');\n    form2.append('model', 'animal');\n    axios({\n      method: 'post',\n      url: 'get-model/',\n      data: form2\n    }).then(function (response) {\n      setList(response.data);\n    });\n  }, [props]);\n\n  function rgbToHex(color) {\n    function componentToHex(c) {\n      var hex = c.toString(16);\n      return hex.length === 1 ? '0' + hex : hex;\n    }\n\n    var split = color.split('(')[1].split(')')[0].split(',');\n    var r = parseInt(split[0]);\n    var g = parseInt(split[1]);\n    var b = parseInt(split[2]);\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n  }\n\n  function hexToRgba(h, alpha) {\n    let r = 0,\n        g = 0,\n        b = 0; // 3 digits\n\n    if (h.length == 4) {\n      r = \"0x\" + h[1] + h[1];\n      g = \"0x\" + h[2] + h[2];\n      b = \"0x\" + h[3] + h[3]; // 6 digits\n    } else if (h.length == 7) {\n      r = \"0x\" + h[1] + h[2];\n      g = \"0x\" + h[3] + h[4];\n      b = \"0x\" + h[5] + h[6];\n    }\n\n    return \"rgba(\" + +r + \",\" + +g + \",\" + +b + \",\" + +alpha + \")\";\n  }\n\n  function onColorChange(e) {\n    var hex = e.target.value;\n    var new_color = hexToRgba(hex, 0.3);\n    var animal_id = e.target.parentElement.getAttribute('animal_key');\n    let form = new FormData();\n    form.append('model', 'animal');\n    form.append('id', animal_id);\n    form.append('field_key', 'color');\n    form.append('new_value', new_color);\n    axios({\n      method: 'post',\n      url: 'update-object/',\n      data: form\n    }).then(function (response) {\n      console.log(response.data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"temp-object-data-panel\",\n    style: props.style_options ? { ...props.style_options\n    } : null,\n    children: list ? list.map(function (list_object) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        animal_key: list_object.id,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temp-data-panel-key\",\n          children: String(list_object.title) + ': '\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), Object.keys(list_object).map(function (key) {\n          if (!props.keys || props.keys.includes(key)) {\n            return /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"temp-data-panel-value\",\n              type: \"color\",\n              defaultValue: rgbToHex(list_object.color),\n              onInput: e => onColorChange(e)\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 37\n            }, this);\n          }\n        })]\n      }, list_object.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 18\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MultipleObjectDataPanel, \"LOO0e5O5b/BzIvpGHKgzMRc1vlw=\");\n\n_c = MultipleObjectDataPanel;\nexport default MultipleObjectDataPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleObjectDataPanel\");","map":{"version":3,"sources":["/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/MultipleObjectDataPanel.js"],"names":["useEffect","useState","axios","getCSRF","defaults","headers","common","MultipleObjectDataPanel","props","field_types","setFieldTypes","list","setList","form","FormData","append","method","url","data","then","response","form2","rgbToHex","color","componentToHex","c","hex","toString","length","split","r","parseInt","g","b","hexToRgba","h","alpha","onColorChange","e","target","value","new_color","animal_id","parentElement","getAttribute","console","log","style_options","map","list_object","id","String","title","Object","keys","key","includes"],"mappings":"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","sourcesContent":["import './MultipleObjectDataPanel.css'\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nimport getCSRF from './getCSRF.js'\naxios.defaults.headers.common[\"X-CSRFTOKEN\"] = getCSRF();\n\nfunction MultipleObjectDataPanel(props) {\n    //temporary fix to display animal colors\n\n    const [ field_types, setFieldTypes ] = useState(null)\n    const [ list, setList ] = useState(null)\n\n    useEffect(() => {\n        //get types of fields\n        let form = new FormData\n        form.append('model', 'animal')\n        axios({\n            method: 'post',\n            url: 'get-field-types/',\n            data: form\n        }).then(function(response) {\n            setFieldTypes(response.data)\n        })\n\n        let form2 = new FormData\n        form2.append('return', 'list')\n        form2.append('model', 'animal')\n\n        axios({\n            method: 'post',\n            url: 'get-model/',\n            data: form2\n        }).then(function(response) {\n            setList(response.data)\n        })\n    }, [props])\n\n\n    function rgbToHex(color) {\n\n        function componentToHex(c) {\n            var hex = c.toString(16);\n            return hex.length === 1? '0'+hex : hex;\n        }\n\n        var split = color.split('(')[1].split(')')[0].split(',')\n        var r = parseInt(split[0])\n        var g = parseInt(split[1])\n        var b = parseInt(split[2])\n\n        return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n    }\n\n\n    function hexToRgba(h, alpha) {\n        let r = 0, g = 0, b = 0;\n\n        // 3 digits\n        if (h.length == 4) {\n            r = \"0x\" + h[1] + h[1];\n            g = \"0x\" + h[2] + h[2];\n            b = \"0x\" + h[3] + h[3];\n\n        // 6 digits\n        } else if (h.length == 7) {\n            r = \"0x\" + h[1] + h[2];\n            g = \"0x\" + h[3] + h[4];\n            b = \"0x\" + h[5] + h[6];\n        }\n        \n        return \"rgba(\"+ +r + \",\" + +g + \",\" + +b + \",\" + +alpha + \")\";\n    }\n\n    function onColorChange(e) {\n        var hex = e.target.value\n        var new_color = hexToRgba(hex, 0.3)\n        var animal_id = e.target.parentElement.getAttribute('animal_key')\n        \n        let form = new FormData\n        form.append('model', 'animal')\n        form.append('id', animal_id)\n        form.append('field_key', 'color')\n        form.append('new_value', new_color)\n\n        axios({\n            method: 'post',\n            url: 'update-object/',\n            data: form\n        }).then(function(response) {\n            console.log(response.data)\n        })\n    }\n\n\n    return (\n        <div className='temp-object-data-panel'style={props.style_options? {...props.style_options} : null}>\n\n            {list ? list.map(function(list_object) {\n\n                return (\n                    <div key={list_object.id} animal_key={list_object.id}>\n                        <div className='temp-data-panel-key'>\n                            {String(list_object.title) + ': '}\n                        </div>\n                        {Object.keys(list_object).map(function(key) {\n    \n                            if (!props.keys || props.keys.includes(key)) {\n                                return (\n                                    <input \n                                        className='temp-data-panel-value'\n                                        key={key}\n                                        type='color' \n                                        defaultValue={rgbToHex(list_object.color)}\n                                        onInput={(e)=>onColorChange(e)}\n                                    />\n                                )\n                            }\n                        })}\n                    </div>\n                    \n                )\n\n            }) : <div/>}\n\n        </div>\n    )\n}\n\nexport default MultipleObjectDataPanel"]},"metadata":{},"sourceType":"module"}