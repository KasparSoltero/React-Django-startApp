{"ast":null,"code":"var _jsxFileName = \"/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/SelectionList.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport './SelectionList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.headers.common[\"X-CSRFTOKEN\"] = 'gPvOPnEwl4K7jFnYGucAwkW06M5RrJFRvEtwPMUNbylfnVsG0BOm5niJPd3COr9r';\n\nfunction SelectionList(props) {\n  _s();\n\n  //general selection list\n  //props:\n  //list-type: backend-data\n  //object - the name of the object in backend to list\n  //select - are list items selectable?\n  const [list, setList] = useState(null);\n  useEffect(() => {\n    if (props.list_type == 'backend-data') {\n      let form = new FormData();\n      form.append('object', props.object);\n      form.append('return', 'list');\n      axios({\n        method: 'post',\n        url: 'get-model',\n        data: form\n      }).then(response => {\n        console.log(response.data);\n        setList(response.data);\n      });\n    }\n  }, [props]);\n\n  function handleItemClick(e) {\n    //send selected item to parent component\n    let pk = e.currentTarget.getAttribute('pk');\n    console.log(list);\n    console.log(typeof list);\n    let selected_db_object = list.find(obj => String(obj.pk) == pk);\n    props.updateSelected([e.currentTarget, selected_db_object]);\n    console.log(selected_db_object); //update visuals to show selected component\n\n    for (let el of document.getElementsByClassName('list-element')) {\n      el == e.currentTarget ? el.className = 'list-element selected' : el.className = 'list-element selectable';\n    }\n  }\n\n  function displayElement(el) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selection-list-element-container\",\n      children: [props.display_title ? /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"selection-list-title\",\n        children: String(el.title)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 39\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"invisible\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 26\n      }, this), props.display_audio ? /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        src: el.filedata,\n        class: \"selection-list-audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 39\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"invisible\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"list-container\",\n    children: list ? list.map(function (list_element) {\n      const element_props = {\n        className: 'list-element',\n        pk: list_element.id\n      };\n\n      if (props.selectable) {\n        element_props['onClick'] = e => handleItemClick(e);\n\n        element_props['className'] = 'list-element selectable';\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", { ...element_props,\n        children: displayElement(list_element)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this);\n    }) : 'retrieving list...'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SelectionList, \"In5dBTVvVL43jMBuc/LfNA51fjY=\");\n\n_c = SelectionList;\nexport default SelectionList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectionList\");","map":{"version":3,"sources":["/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/SelectionList.js"],"names":["axios","useState","useEffect","defaults","headers","common","SelectionList","props","list","setList","list_type","form","FormData","append","object","method","url","data","then","response","console","log","handleItemClick","e","pk","currentTarget","getAttribute","selected_db_object","find","obj","String","updateSelected","el","document","getElementsByClassName","className","displayElement","display_title","title","display_audio","filedata","map","list_element","element_props","id","selectable"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { useState, useEffect } from 'react'\nimport './SelectionList.css'\n\naxios.defaults.headers.common[\"X-CSRFTOKEN\"] = 'gPvOPnEwl4K7jFnYGucAwkW06M5RrJFRvEtwPMUNbylfnVsG0BOm5niJPd3COr9r';\n\nfunction SelectionList(props) {\n    //general selection list\n\n    //props:\n    //list-type: backend-data\n        //object - the name of the object in backend to list\n        //select - are list items selectable?\n\n    const [ list, setList ] = useState(null)\n\n    useEffect(() => {\n        if (props.list_type=='backend-data') {\n        \n            let form = new FormData\n            form.append('object', props.object)\n            form.append('return', 'list')\n    \n            axios({\n                method: 'post',\n                url: 'get-model',\n                data: form\n            }).then((response) => {\n                console.log(response.data)\n                setList(response.data)\n            }\n            )\n        }\n    }, [props])\n\n    function handleItemClick(e) {\n\n        //send selected item to parent component\n        let pk = e.currentTarget.getAttribute('pk')\n        console.log(list)\n        console.log(typeof(list))\n        let selected_db_object = list.find((obj)=>String(obj.pk)==pk)\n\n        props.updateSelected([e.currentTarget, selected_db_object])\n\n        console.log(selected_db_object)\n\n        //update visuals to show selected component\n        for (let el of document.getElementsByClassName('list-element')) {\n            el==e.currentTarget? el.className = 'list-element selected' : el.className = 'list-element selectable'\n        }\n    }\n\n\n    function displayElement(el) {\n\n        return (\n            <div className='selection-list-element-container'>\n\n                {props.display_title? <div class='selection-list-title'>\n                    {String(el.title)}\n                </div> : <div class='invisible'/>}\n\n                {props.display_audio? <audio \n                    controls\n                    src={el.filedata}\n                    class='selection-list-audio'>\n                </audio> : <div class='invisible'/>}\n\n            </div>\n        )\n    }\n    \n    return (\n        <div id='list-container'>\n            {list? list.map(function(list_element) {\n\n                const element_props = {\n                    className: 'list-element',\n                    pk: list_element.id\n                }\n\n                if (props.selectable) {\n                    element_props['onClick'] = (e)=>handleItemClick(e)\n                    element_props['className'] = 'list-element selectable'\n                }\n\n                return (\n                    <div {...element_props}>\n                        {displayElement(list_element)}\n                    </div>\n                )\n            }) : 'retrieving list...'}\n        </div>\n    )\n}\n\nexport default SelectionList"]},"metadata":{},"sourceType":"module"}