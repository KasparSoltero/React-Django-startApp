{"ast":null,"code":"var _jsxFileName = \"/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/MultipleObjectDataPanel.js\",\n    _s = $RefreshSig$();\n\nimport './MultipleObjectDataPanel.css';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MultipleObjectDataPanel(props) {\n  _s();\n\n  //display mutable and/or immutable data about an object\n  //model - objects to display data for\n  const [field_types, setFieldTypes] = useState(null);\n  const [list, setList] = useState(null);\n  useEffect(() => {\n    console.log('useeffect'); //get types of *mutable* fields\n\n    let form = new FormData();\n    form.append('model', 'animal');\n    axios({\n      method: 'post',\n      url: 'get-field-types/',\n      data: form\n    }).then(function (response) {\n      setFieldTypes(response.data);\n    });\n    let form2 = new FormData();\n    form2.append('return', 'list');\n    form2.append('model', 'animal');\n    axios({\n      method: 'post',\n      url: 'get-model/',\n      data: form2\n    }).then(function (response) {\n      setList(response.data);\n    });\n  }, [props]);\n\n  function onButtonPress(e) {\n    let field_key = e.target.id.split('-')[0];\n    let input_element = document.getElementById(field_key);\n    let new_value = input_element.value;\n    updateDB(field_key, new_value);\n  }\n\n  function onCheckedBox(e) {\n    let new_value = String(e.target.checked);\n    let field_key = e.target.id;\n    updateDB(field_key, new_value);\n  } // function onForeignKeyChange(form) {\n  //     let field_key = form.html_selected.parentElement.parentElement.parentElement.parentElement.getAttribute('ref_key')\n  //     let new_value = form.object.id\n  //     updateDB(field_key, new_value)\n  // }\n\n\n  function updateDB(field_key, new_value) {\n    let form = new FormData();\n    form.append('model', 'audioclip');\n    form.append('id', props.object.id);\n    form.append('field_key', field_key);\n    form.append('new_value', new_value);\n    axios({\n      method: 'post',\n      url: 'update-object/',\n      data: form\n    }).then(function (response) {\n      console.log(response.data);\n    });\n\n    if (props.onDataUpdate) {\n      props.onDataUpdate();\n    }\n  }\n\n  function displayParameter(key) {\n    if (field_types) {\n      let field_type = field_types[props.keys.indexOf(key)];\n\n      if (field_type === 'CharField') {\n        console.log(key);\n\n        if (false) {\n          console.log('aass');\n        } else return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-panel-value\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"data-panel-input\",\n            id: key,\n            type: \"text\",\n            defaultValue: String(props.object[key])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: key + '-button',\n            className: \"data-panel-update-button\",\n            type: \"button\",\n            onClick: onButtonPress,\n            children: \"update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this);\n      } else if (field_type === 'DecimalField') {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-panel-value\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"data-panel-input\",\n            id: key,\n            type: \"number\",\n            step: 0.01,\n            defaultValue: parseFloat(props.object[key])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: key + '-button',\n            className: \"data-panel-update-button\",\n            type: \"button\",\n            onClick: onButtonPress,\n            children: \"update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this);\n      } else if (field_type === 'BooleanField') {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-panel-value\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"data-panel-checkbox\",\n            id: key,\n            type: \"checkbox\",\n            defaultChecked: props.object[key],\n            onClick: onCheckedBox\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this); // } else if (field_type==='ForeignKey') {\n        //     return (\n        //         <div className='data-panel-value-list'>\n        //             <SelectionList\n        //                 list_type='backend-data'\n        //                 object={['animal']}\n        //                 selectable={true}\n        //                 onSelect={onForeignKeyChange}\n        //                 default_selected={props.object.animal}\n        //                 style_options={{\n        //                     height: 'max-content',\n        //                     width: '100%',\n        //                 }}\n        //             />\n        //         </div>\n        //     )\n      } else return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"unknown field type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 27\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-panel-value\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: key,\n          type: \"text\",\n          defaultValue: String(props.object[key])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: key + '-button',\n          className: \"data-panel-update-button\",\n          type: \"button\",\n          onClick: onButtonPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  function rgbToHex(color) {\n    function componentToHex(c) {\n      var hex = c.toString(16);\n      return hex.length === 1 ? '0' + hex : hex;\n    }\n\n    var split = color.split('(')[1].split(')')[0].split(',');\n    var r = parseInt(split[0]);\n    var g = parseInt(split[1]);\n    var b = parseInt(split[2]);\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"temp-object-data-panel\",\n    style: props.style_options ? { ...props.style_options\n    } : null,\n    children: list ? list.map(function (list_object) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temp-data-panel-key\",\n          children: String(list_object.title) + ': '\n        }, list_object.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this), Object.keys(list_object).map(function (key) {\n          if (!props.keys || props.keys.includes(key)) {\n            return /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              defaultValue: rgbToHex(list_object.color),\n              onInput: console.log('input change'),\n              onChange: console.log('on change')\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 37\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 18\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MultipleObjectDataPanel, \"LOO0e5O5b/BzIvpGHKgzMRc1vlw=\");\n\n_c = MultipleObjectDataPanel;\nexport default MultipleObjectDataPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleObjectDataPanel\");","map":{"version":3,"sources":["/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/MultipleObjectDataPanel.js"],"names":["useEffect","useState","axios","MultipleObjectDataPanel","props","field_types","setFieldTypes","list","setList","console","log","form","FormData","append","method","url","data","then","response","form2","onButtonPress","e","field_key","target","id","split","input_element","document","getElementById","new_value","value","updateDB","onCheckedBox","String","checked","object","onDataUpdate","displayParameter","key","field_type","keys","indexOf","parseFloat","rgbToHex","color","componentToHex","c","hex","toString","length","r","parseInt","g","b","style_options","map","list_object","title","Object","includes"],"mappings":"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","sourcesContent":["import './MultipleObjectDataPanel.css'\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction MultipleObjectDataPanel(props) {\n    //display mutable and/or immutable data about an object\n\n    //model - objects to display data for\n\n    const [ field_types, setFieldTypes ] = useState(null)\n    const [ list, setList ] = useState(null)\n\n    useEffect(() => {\n        console.log('useeffect')\n        //get types of *mutable* fields\n        let form = new FormData\n        form.append('model', 'animal')\n        axios({\n            method: 'post',\n            url: 'get-field-types/',\n            data: form\n        }).then(function(response) {\n            setFieldTypes(response.data)\n        })\n\n        let form2 = new FormData\n        form2.append('return', 'list')\n        form2.append('model', 'animal')\n\n        axios({\n            method: 'post',\n            url: 'get-model/',\n            data: form2\n        }).then(function(response) {\n            setList(response.data)\n        })\n    }, [props])\n\n\n    function onButtonPress(e) {\n        let field_key = e.target.id.split('-')[0]\n        let input_element = document.getElementById(field_key)\n\n        let new_value = input_element.value\n\n        updateDB(field_key, new_value)\n    }\n\n    function onCheckedBox(e) {\n        let new_value = String(e.target.checked)\n        let field_key = e.target.id\n\n        updateDB(field_key, new_value)\n    }\n\n    // function onForeignKeyChange(form) {\n    //     let field_key = form.html_selected.parentElement.parentElement.parentElement.parentElement.getAttribute('ref_key')\n    //     let new_value = form.object.id\n\n    //     updateDB(field_key, new_value)\n    // }\n\n    function updateDB(field_key, new_value) {\n\n        let form = new FormData\n        form.append('model', 'audioclip')\n        form.append('id', props.object.id)\n        form.append('field_key', field_key)\n        form.append('new_value', new_value)\n\n        axios({\n            method: 'post',\n            url: 'update-object/',\n            data: form\n        }).then(function(response) {\n            console.log(response.data)\n        })\n\n        if (props.onDataUpdate) {props.onDataUpdate()}\n    }\n\n\n    function displayParameter(key) {\n\n        if (field_types) {\n\n            let field_type = field_types[props.keys.indexOf(key)]\n            if (field_type==='CharField') {\n                console.log(key)\n                if (false) {\n                    console.log('aass')\n                } else return (\n                    <div className='data-panel-value'>\n                        <input \n                            className='data-panel-input'\n                            id={key}\n                            type='text'\n                            defaultValue={String(props.object[key])}\n                        />\n                        <button id={key+'-button'} className='data-panel-update-button' type='button' onClick={onButtonPress}>update</button>\n                    </div>\n                )\n            } else if (field_type==='DecimalField') {\n                return (\n                    <div className='data-panel-value'>\n                        <input\n                            className='data-panel-input'\n                            id={key}\n                            type='number'\n                            step={0.01}\n                            defaultValue={parseFloat(props.object[key])}\n                        />\n                     <button id={key+'-button'} className='data-panel-update-button' type='button' onClick={onButtonPress}>update</button>\n                    </div>\n                )\n            } else if (field_type==='BooleanField') {\n                return (\n                    <div className='data-panel-value'>\n                        <input\n                            className='data-panel-checkbox'\n                            id={key}\n                            type='checkbox'\n                            defaultChecked={props.object[key]}\n                            onClick={onCheckedBox}\n                        />\n                    </div>\n                )\n            // } else if (field_type==='ForeignKey') {\n            //     return (\n            //         <div className='data-panel-value-list'>\n            //             <SelectionList\n            //                 list_type='backend-data'\n            //                 object={['animal']}\n            //                 selectable={true}\n            //                 onSelect={onForeignKeyChange}\n            //                 default_selected={props.object.animal}\n            //                 style_options={{\n            //                     height: 'max-content',\n            //                     width: '100%',\n            //                 }}\n            //             />\n            //         </div>\n            //     )\n            } else return <div>unknown field type</div>\n\n        } else {\n\n            return (\n                <div className='data-panel-value'>\n                    <input \n                        id={key}\n                        type='text'\n                        defaultValue={String(props.object[key])}\n                    />\n                    <button id={key+'-button'} className='data-panel-update-button' type='button' onClick={onButtonPress}/>\n                </div>\n            )\n        }\n    }\n\n    function rgbToHex(color) {\n\n        function componentToHex(c) {\n            var hex = c.toString(16);\n            return hex.length === 1? '0'+hex : hex;\n        }\n\n        var split = color.split('(')[1].split(')')[0].split(',')\n        var r = parseInt(split[0])\n        var g = parseInt(split[1])\n        var b = parseInt(split[2])\n\n        return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n    }\n\n\n    return (\n        <div className='temp-object-data-panel'style={props.style_options? {...props.style_options} : null}>\n\n            {list ? list.map(function(list_object) {\n\n                return (\n                    <div>\n                        <div className='temp-data-panel-key' key={list_object.id}>\n                            {String(list_object.title) + ': '}\n                        </div>\n                        {Object.keys(list_object).map(function(key) {\n    \n                            if (!props.keys || props.keys.includes(key)) {\n                                return (\n                                    <input \n                                        key={key}\n                                        type='color' \n                                        defaultValue={rgbToHex(list_object.color)}\n                                        onInput={console.log('input change')}\n                                        onChange={console.log('on change')}\n                                    />\n                                )\n                            }\n                        })}\n                    </div>\n                    \n                )\n\n            }) : <div/>}\n\n        </div>\n    )\n}\n\nexport default MultipleObjectDataPanel"]},"metadata":{},"sourceType":"module"}