{"ast":null,"code":"/**\r\n * Web-Audio-API decoder fn style\r\n *\r\n * @module  audio-decode\r\n */\n'use strict';\n\nconst getContext = require('audio-context');\n\nconst toAB = require('to-array-buffer');\n\nmodule.exports = decode;\n\nfunction decode(buffer, opts, cb) {\n  if (opts instanceof Function) {\n    cb = opts;\n    opts = {};\n  }\n\n  if (!opts) opts = {};\n  let ctx = opts.context || getContext(); //blob/file cases\n\n  if (buffer instanceof Blob) buffer = new File([buffer], 'decode');\n\n  if (buffer instanceof File) {\n    return new Promise((resolve, reject) => {\n      try {\n        let reader = new FileReader();\n        reader.readAsArrayBuffer(buffer);\n\n        reader.onload = () => {\n          return resolve(decode(reader.result, opts, cb));\n        };\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  if (!(buffer instanceof ArrayBuffer)) {\n    buffer = toAB(buffer);\n  } // decodeAudioData spoils the initial buffer, so we have to copy that\n\n\n  return ctx.decodeAudioData(buffer.slice(), buf => {\n    cb && cb(null, buf);\n  }, err => {\n    cb && cb(err);\n  });\n}","map":{"version":3,"sources":["/Users/kaspar/Documents/GitHub/React-Django-startApp/node_modules/audio-decode/browser.js"],"names":["getContext","require","toAB","module","exports","decode","buffer","opts","cb","Function","ctx","context","Blob","File","Promise","resolve","reject","reader","FileReader","readAsArrayBuffer","onload","result","e","ArrayBuffer","decodeAudioData","slice","buf","err"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,iBAAD,CAApB;;AAEAE,MAAM,CAACC,OAAP,GAAiBC,MAAjB;;AAEA,SAASA,MAAT,CAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,EAA/B,EAAmC;AAClC,MAAID,IAAI,YAAYE,QAApB,EAA8B;AAC7BD,IAAAA,EAAE,GAAGD,IAAL;AACAA,IAAAA,IAAI,GAAG,EAAP;AACA;;AAED,MAAI,CAACA,IAAL,EAAWA,IAAI,GAAG,EAAP;AAEX,MAAIG,GAAG,GAAGH,IAAI,CAACI,OAAL,IAAgBX,UAAU,EAApC,CARkC,CAUlC;;AACA,MAAIM,MAAM,YAAYM,IAAtB,EAA4BN,MAAM,GAAG,IAAIO,IAAJ,CAAS,CAACP,MAAD,CAAT,EAAmB,QAAnB,CAAT;;AAC5B,MAAIA,MAAM,YAAYO,IAAtB,EAA4B;AAC3B,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACvC,UAAI;AACH,YAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,QAAAA,MAAM,CAACE,iBAAP,CAAyBb,MAAzB;;AACAW,QAAAA,MAAM,CAACG,MAAP,GAAgB,MAAM;AACrB,iBAAOL,OAAO,CAACV,MAAM,CAACY,MAAM,CAACI,MAAR,EAAgBd,IAAhB,EAAsBC,EAAtB,CAAP,CAAd;AACA,SAFD;AAGA,OAND,CAME,OAAOc,CAAP,EAAU;AACXN,QAAAA,MAAM,CAACM,CAAD,CAAN;AACA;AACD,KAVM,CAAP;AAWA;;AAED,MAAI,EAAEhB,MAAM,YAAYiB,WAApB,CAAJ,EAAsC;AACrCjB,IAAAA,MAAM,GAAGJ,IAAI,CAACI,MAAD,CAAb;AACA,GA5BiC,CA8BlC;;;AACA,SAAOI,GAAG,CAACc,eAAJ,CAAoBlB,MAAM,CAACmB,KAAP,EAApB,EAAqCC,GAAD,IAAS;AACnDlB,IAAAA,EAAE,IAAIA,EAAE,CAAC,IAAD,EAAOkB,GAAP,CAAR;AACA,GAFM,EAEHC,GAAD,IAAS;AACXnB,IAAAA,EAAE,IAAIA,EAAE,CAACmB,GAAD,CAAR;AACA,GAJM,CAAP;AAKA","sourcesContent":["/**\r\n * Web-Audio-API decoder fn style\r\n *\r\n * @module  audio-decode\r\n */\r\n'use strict';\r\n\r\nconst getContext = require('audio-context')\r\nconst toAB = require('to-array-buffer')\r\n\r\nmodule.exports = decode;\r\n\r\nfunction decode (buffer, opts, cb) {\r\n\tif (opts instanceof Function) {\r\n\t\tcb = opts;\r\n\t\topts = {};\r\n\t}\r\n\r\n\tif (!opts) opts = {};\r\n\r\n\tlet ctx = opts.context || getContext();\r\n\r\n\t//blob/file cases\r\n\tif (buffer instanceof Blob) buffer = new File([buffer], 'decode')\r\n\tif (buffer instanceof File) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet reader = new FileReader()\r\n\t\t\t\treader.readAsArrayBuffer(buffer)\r\n\t\t\t\treader.onload = () => {\r\n\t\t\t\t\treturn resolve(decode(reader.result, opts, cb))\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\treject(e)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tif (!(buffer instanceof ArrayBuffer)) {\r\n\t\tbuffer = toAB(buffer)\r\n\t}\r\n\r\n\t// decodeAudioData spoils the initial buffer, so we have to copy that\r\n\treturn ctx.decodeAudioData(buffer.slice(), (buf) => {\r\n\t\tcb && cb(null, buf);\r\n\t}, (err) => {\r\n\t\tcb && cb(err);\r\n\t});\r\n}\r\n"]},"metadata":{},"sourceType":"script"}