{"ast":null,"code":"var _jsxFileName = \"/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/Upload_Audio.js\";\nimport { React, useState } from 'react';\nimport axios from \"axios\";\nimport './Upload_Audio.css'; // import Waveform from 'waveform-react';\n\nimport Waveform from 'react-audio-waveform';\nimport Wavesurfer from 'wavesurfer.js';\nimport SelectionList from './SelectionList.js';\nimport getCSRF from './getCSRF.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.headers.common[\"X-CSRFTOKEN\"] = getCSRF();\n\nfunction Upload_Audio() {\n  function denoiseNewAudios() {\n    //Denoise unprocessed audio files\n    var denoise_button = document.getElementById('denoise');\n    denoise_button.innerHTML = 'denoising...';\n    denoise_button.className = 'process-audios-button denoising';\n    const form = new FormData();\n    form.append('id', 'tomato');\n    axios({\n      method: 'post',\n      url: 'denoise-new/',\n      data: form\n    }).then(response => {\n      console.log(response);\n      denoise_button.innerHTML = 'Denoise New';\n      denoise_button.className = 'process-audios-button';\n    });\n  }\n\n  function convolveNewAudios() {\n    //Convolve unprocessed audio files\n    //get all audio files\n    let form = new FormData();\n    form.append('model', 'AudioFile');\n    form.append('return', 'list');\n    form.append('add_related_models', 'audioclip');\n    axios({\n      method: 'post',\n      url: 'get-model/',\n      data: form\n    }).then(response => {\n      let audio_files = response.data[0];\n      let related_audioclips = response.data[1]; //check if each one has been convolved\n\n      for (let i = 0; i < audio_files.length; i++) {\n        if (related_audioclips[i] === '<QuerySet []>') {\n          //convolve if not\n          const form = new FormData();\n          form.append('id', audio_files[i].id);\n          axios({\n            method: 'post',\n            url: '/convolve-audio/',\n            data: form\n          }).then(response => {\n            console.log(response);\n          });\n        }\n      }\n    });\n  }\n\n  function uploadFilesToDB() {\n    //Send group of files to backend, which then uploads them one by one\n    var uploadData = document.getElementById('file-input').files;\n    var numFiles = uploadData['length'];\n\n    for (let i = 0; i < numFiles; i++) {\n      const form = new FormData();\n      form.append('title', uploadData[i].name);\n      form.append('file', uploadData[i]);\n      axios({\n        method: 'post',\n        url: 'upload-files/',\n        data: form\n      }).then(response => console.log(response));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-audio-container-two\",\n        style: {\n          backgroundColor: 'var(--pastel-yellow)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"file-input\",\n          type: \"file\",\n          id: \"file-input\",\n          multiple: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"upload-button\",\n          onClick: () => uploadFilesToDB(),\n          children: \"Upload files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-data-container\",\n      children: /*#__PURE__*/_jsxDEV(SelectionList, {\n        list_type: \"backend-data\",\n        object: ['AudioFile', 'AudioClip'] // selectable={false}\n        // updateSelected={}\n        // display_audio={true}\n        ,\n        display_title: true,\n        style_options: {\n          width: '100%',\n          display: 'inline-block',\n          right: '0',\n          top: '40px',\n          bottom: '0px'\n        },\n        deletable: true,\n        display_data: {\n          bool: [{\n            data: 'denoised_filedata',\n            title: 'denoised'\n          }, {\n            data: 'use_as_ref',\n            title: 'ref' // colors: ['rgb(100,0,200)','rgb(0,200,100)']\n\n          }]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"process-audios-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-audio-container-two\",\n        style: {\n          backgroundColor: 'var(--pastel-magenta)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"process-audios-button\",\n          onClick: () => denoiseNewAudios(),\n          id: \"denoise\",\n          children: \"Denoise New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"process-audios-button\",\n          onClick: () => convolveNewAudios(),\n          id: \"convolve\",\n          children: \"Convolve New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Upload_Audio;\nexport default Upload_Audio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload_Audio\");","map":{"version":3,"sources":["/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/Upload_Audio.js"],"names":["React","useState","axios","Waveform","Wavesurfer","SelectionList","getCSRF","defaults","headers","common","Upload_Audio","denoiseNewAudios","denoise_button","document","getElementById","innerHTML","className","form","FormData","append","method","url","data","then","response","console","log","convolveNewAudios","audio_files","related_audioclips","i","length","id","uploadFilesToDB","uploadData","files","numFiles","name","backgroundColor","width","display","right","top","bottom","bool","title"],"mappings":"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","sourcesContent":["import { React, useState } from 'react';\nimport axios from \"axios\";\nimport './Upload_Audio.css'\n\n// import Waveform from 'waveform-react';\nimport Waveform from 'react-audio-waveform';\nimport Wavesurfer from 'wavesurfer.js'\n\nimport SelectionList from './SelectionList.js'\n\nimport getCSRF from './getCSRF.js'\naxios.defaults.headers.common[\"X-CSRFTOKEN\"] = getCSRF();\n\n\nfunction Upload_Audio() {\n\n    function denoiseNewAudios() {\n        //Denoise unprocessed audio files\n\n        var denoise_button = document.getElementById('denoise')\n        denoise_button.innerHTML = 'denoising...'\n        denoise_button.className='process-audios-button denoising'\n\n        const form =  new FormData();\n        form.append('id', 'tomato')\n\n        axios({\n            method: 'post',\n            url: 'denoise-new/',\n            data: form\n        }).then((response) => {\n            console.log(response)\n            denoise_button.innerHTML = 'Denoise New'\n            denoise_button.className = 'process-audios-button'\n        })\n    }\n\n    \n    function convolveNewAudios() {\n        //Convolve unprocessed audio files\n\n        //get all audio files\n        let form = (new FormData)\n        form.append('model', 'AudioFile')\n        form.append('return', 'list')\n        form.append('add_related_models', 'audioclip')\n\n        axios({\n            method: 'post',\n            url: 'get-model/',\n            data: form\n        }).then((response) => {\n            let audio_files = response.data[0]\n            let related_audioclips = response.data[1]\n            //check if each one has been convolved\n            for (let i=0; i<audio_files.length; i++) {\n                if (related_audioclips[i] === '<QuerySet []>') {\n                    //convolve if not\n                    const form =  new FormData;\n                    form.append('id', audio_files[i].id)\n\n                    axios({\n                        method: 'post',\n                        url: '/convolve-audio/',\n                        data: form\n                    }).then((response) => {\n                        console.log(response)\n                    })\n                }\n            }\n        })\n    }\n\n\n    function uploadFilesToDB() {\n        //Send group of files to backend, which then uploads them one by one\n\n        var uploadData = document.getElementById('file-input').files\n        var numFiles = uploadData['length'];\n\n        for (let i = 0; i<numFiles; i++) {\n            const form = new FormData();\n            form.append('title', uploadData[i].name)\n            form.append('file', uploadData[i]);\n            axios({\n                method: 'post',\n                url: 'upload-files/',\n                data: form,\n            }).then(\n                (response) => console.log(response))\n        }\n    }\n\n\n    return (\n        <div className='main-box'>\n\n            <div className='upload-button-container'>\n                <div className='upload-audio-container-two' style={{backgroundColor:'var(--pastel-yellow)'}}>\n                    <input name='file-input' type='file' id='file-input' multiple/>\n                    <button id='upload-button' onClick={() => uploadFilesToDB()}>\n                        Upload files\n                    </button>\n                </div>\n            </div>\n            <div className='upload-data-container'>\n                <SelectionList \n                    list_type='backend-data' \n                    object={['AudioFile', 'AudioClip']}\n                    // selectable={false}\n                    // updateSelected={}\n                    // display_audio={true}\n                    display_title={true}\n                    style_options={{\n                        width: '100%',\n                        display: 'inline-block',\n                        right: '0',\n                        top: '40px',\n                        bottom: '0px',\n                    }}\n                    deletable={true}\n                    display_data={{\n                        bool: [{\n                            data: 'denoised_filedata',\n                            title: 'denoised',\n                        }, {\n                            data: 'use_as_ref',\n                            title: 'ref',\n                            // colors: ['rgb(100,0,200)','rgb(0,200,100)']\n                        }],\n                    }}\n                />\n            </div>\n\n            <div className='process-audios-container'>\n                <div className='upload-audio-container-two' style={{backgroundColor:'var(--pastel-magenta)'}}>\n                    <button className='process-audios-button' onClick={()=>denoiseNewAudios()} id='denoise'>Denoise New</button>\n                    <button className='process-audios-button' onClick={()=>convolveNewAudios()} id='convolve'>Convolve New</button>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Upload_Audio;"]},"metadata":{},"sourceType":"module"}