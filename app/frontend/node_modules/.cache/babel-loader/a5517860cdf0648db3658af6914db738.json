{"ast":null,"code":"var _jsxFileName = \"/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/Analysis.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport './Analysis.css';\nimport Sound from 'react-sound';\nimport { Spectrogram } from 'react-spectrogram';\nimport axios from 'axios';\nimport ReactAudioPlayer from 'react-audio-player';\nimport Wavesurfer from 'wavesurfer.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar wavSpectro = require('wav-spectrogram');\n\nconst decode = require('audio-decode');\n\nconst buffer = require('audio-lena/wav'); // Required to allow axios to make post requests to django\n\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n\nfunction Analysis() {\n  _s();\n\n  const [audioFile, setAudioFile] = useState(null);\n  const [audioList, setAudioList] = useState(0);\n  useEffect(() => {\n    axios.get(\"/api/unprocessedaudios/\").then(res => setAudioList(res)).catch(err => console.log(err));\n  });\n\n  function handleInputChange(e) {\n    setAudioFile(e.target.value);\n  }\n\n  function displayAudioSelect() {\n    if (audioList) {\n      return /*#__PURE__*/_jsxDEV(\"select\", {\n        value: audioFile,\n        onChange: handleInputChange,\n        children: audioList.data.map(file => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: file.filedata,\n          children: file.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"fetching audio list...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n  const Spectrogram = 0;\n  var arrayBuffer = 0;\n\n  function updateWaveForms() {\n    if (document.getElementById('original-waveform')) {\n      console.log('creating wavesurfers');\n      var wavesurfer = Wavesurfer.create({\n        container: '#original-waveform'\n      });\n      var wavesurfer2 = Wavesurfer.create({\n        container: '#denoised-waveform'\n      });\n    } else {\n      console.log('you select an audio file first');\n    }\n\n    if (wavesurfer) {\n      console.log('adding file to wavesurfer');\n      wavesurfer.load(audioFile);\n    }\n  }\n\n  function displaySpectrogram() {\n    if (audioFile) {\n      // reader.readAsArrayBuffer(audioFile)\n      return (\n        /*#__PURE__*/\n        // <audio src={audioFile} controls></audio>\n        _jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)\n      );\n    } else return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"fetching audio list...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 23\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-box\",\n    children: [\"Testing audio / Spectrogram display...\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-audio-container\",\n      children: [\"Select audio file.\", displayAudioSelect()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"uploadbutton\",\n      onClick: () => updateWaveForms(),\n      children: \"log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n      src: \"https://unpkg.com/wavesurfer.js\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"audio-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"original-waveform\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"denoised-waveform\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Analysis, \"y7D1JgYNwlS0SXChakuucRl5C1U=\");\n\n_c = Analysis;\nexport default Analysis;\n\nvar _c;\n\n$RefreshReg$(_c, \"Analysis\");","map":{"version":3,"sources":["/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/Analysis.js"],"names":["React","useEffect","useState","Sound","Spectrogram","axios","ReactAudioPlayer","Wavesurfer","wavSpectro","require","decode","buffer","defaults","xsrfCookieName","xsrfHeaderName","Analysis","audioFile","setAudioFile","audioList","setAudioList","get","then","res","catch","err","console","log","handleInputChange","e","target","value","displayAudioSelect","data","map","file","filedata","title","arrayBuffer","updateWaveForms","document","getElementById","wavesurfer","create","container","wavesurfer2","load","displaySpectrogram"],"mappings":"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","sourcesContent":["import { React, useEffect, useState } from 'react';\nimport './Analysis.css';\nimport Sound from 'react-sound';\nimport { Spectrogram } from 'react-spectrogram';\nimport axios from 'axios';\nimport ReactAudioPlayer from 'react-audio-player'\nimport Wavesurfer from 'wavesurfer.js';\n\nvar wavSpectro = require('wav-spectrogram');\n\nconst decode = require('audio-decode');\nconst buffer = require('audio-lena/wav');\n\n// Required to allow axios to make post requests to django\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\"\n\nfunction Analysis() {\n\n    const [ audioFile, setAudioFile ] = useState(null);\n    const [audioList, setAudioList] = useState(0);\n\n    useEffect(() => {\n        axios\n        .get(\"/api/unprocessedaudios/\")\n        .then((res) => setAudioList(res))\n        .catch((err) => console.log(err));\n    })\n    \n    function handleInputChange(e) {\n        setAudioFile(e.target.value)\n    }\n\n    function displayAudioSelect() {\n        if (audioList) {\n            return (\n                <select value={audioFile} onChange={handleInputChange}>\n                    {audioList.data.map((file)=>(\n                        <option value={file.filedata}>{file.title}</option>\n                    ))}\n                </select>\n            )\n        } else return (\n            <div>fetching audio list...</div>\n        )\n    }\n\n    const Spectrogram = 0;\n\n    var arrayBuffer = 0;\n\n    function updateWaveForms() {\n        if (document.getElementById('original-waveform')) {\n            console.log('creating wavesurfers')\n            var wavesurfer = Wavesurfer.create({\n                container: '#original-waveform'\n            })\n            var wavesurfer2 = Wavesurfer.create({\n                container: '#denoised-waveform'\n            })\n        } else {\n            console.log('you select an audio file first')\n        }\n\n        if (wavesurfer) {\n            console.log('adding file to wavesurfer')\n            wavesurfer.load(audioFile)\n        }\n    }\n\n    function displaySpectrogram() {\n\n        if (audioFile) {\n\n            // reader.readAsArrayBuffer(audioFile)\n            return (\n                // <audio src={audioFile} controls></audio>\n                <div/>\n            )\n        } else return <div>fetching audio list...</div>\n    }\n\n    return (\n        <div className='main-box'>\n            Testing audio / Spectrogram display...\n            \n            <div className='select-audio-container'>\n                Select audio file.\n                {displayAudioSelect()}\n                {/* <canvas id='spectrogram-canvas' width='200' height='100'></canvas>\n                {displaySpectrogram()} */}\n            </div>            \n\n            <button className='uploadbutton' onClick={()=>updateWaveForms()}>log</button>\n\n            <script src = 'https://unpkg.com/wavesurfer.js'></script>\n\n            <div className='audio-display'>\n                <div id = \"original-waveform\"></div>\n                <div id = \"denoised-waveform\"></div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Analysis;"]},"metadata":{},"sourceType":"module"}