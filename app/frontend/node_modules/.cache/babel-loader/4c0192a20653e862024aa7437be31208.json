{"ast":null,"code":"var _jsxFileName = \"/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/Analysis.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport './Analysis.css';\nimport Sound from 'react-sound';\nimport { Spectrogram } from 'react-spectrogram';\nimport axios from 'axios';\nimport ReactAudioPlayer from 'react-audio-player';\nimport Wavesurfer from 'wavesurfer.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar wavSpectro = require('wav-spectrogram');\n\nconst decode = require('audio-decode');\n\nconst buffer = require('audio-lena/wav'); // Sometimes required to allow axios to make post requests to django\n\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\"; //initialise\n\nvar original_wavesurfer = null;\nvar processed_wavesurfer = null;\nconst waveform_height = 200;\n\nfunction Analysis() {\n  _s();\n\n  const [audioFile, setAudioFile] = useState(null);\n  const [audioList, setAudioList] = useState(0);\n\n  function updateAudioList() {\n    axios.get(\"/api/unprocessedaudios/\").then(res => setAudioList(res)).catch(err => console.log(err));\n  }\n\n  function handleAudioSelect(e) {\n    let id = e.target.id;\n    let audio = audioList.data.filter(audio => audio.id == id)[0]; // console.log(id)\n    // console.log(audio)\n    // console.log('setting audio File:')\n    // console.log(audio)\n\n    setAudioFile(audio); // console.log('actual audio file:')\n    // console.log(audioFile)\n\n    audioList.data.map(function (audio) {\n      let htmlEl = document.getElementById(audio.id);\n\n      if (audio.id == id) {\n        // console.log('selecting:')\n        // console.log(htmlEl)\n        htmlEl.setAttribute('class', 'audio-select-file-selected');\n      } else {\n        htmlEl.setAttribute('class', 'audio-select-file');\n      }\n    });\n  }\n\n  function displayAudioSelect() {\n    if (audioList) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio-select\",\n        children: audioList.data.map(function (audio) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            id: audio.id,\n            class: \"audio-select-file\",\n            onClick: e => handleAudioSelect(e),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"test\",\n              className: \"select-audio-title\",\n              children: audio.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"fetching audio list...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n\n  function playPauseButtons() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"uploadbutton\",\n        onClick: function () {\n          if (original_wavesurfer != undefined) {\n            original_wavesurfer.playPause();\n          }\n        },\n        children: \"Play/Pause original\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"uploadbutton\",\n        onClick: function () {\n          if (processed_wavesurfer != undefined) {\n            processed_wavesurfer.playPause();\n          }\n        },\n        children: \"Play/Pause denoised\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n  function updateWaveforms() {\n    if (document.getElementById('original-waveform')) {\n      var element = document.getElementById('original-waveform');\n      element.remove();\n    }\n\n    if (document.getElementById('processed-waveform')) {\n      var element = document.getElementById('processed-waveform');\n      element.remove();\n    }\n\n    var originalWaveform = document.createElement(\"div\");\n    originalWaveform.setAttribute('id', 'original-waveform');\n    var processedWaveform = document.createElement(\"div\");\n    processedWaveform.setAttribute('id', 'processed-waveform');\n    var domE2 = document.getElementById(\"waveform-container\");\n    domE2.appendChild(originalWaveform);\n    domE2.appendChild(processedWaveform);\n    original_wavesurfer = new Wavesurfer.create({\n      container: '#original-waveform',\n      height: waveform_height,\n      waveColor: 'black'\n    });\n\n    if (audioFile) {\n      if (original_wavesurfer) {\n        original_wavesurfer.load(audioFile.filedata);\n      }\n    } else {\n      console.log('no audio file selected');\n    }\n\n    processed_wavesurfer = new Wavesurfer.create({\n      container: '#processed-waveform',\n      height: 200,\n      waveColor: 'blue'\n    });\n\n    if (audioFile.denoisedFile) {\n      if (processed_wavesurfer) {\n        processed_wavesurfer.load(audioFile.denoisedFile);\n      }\n    }\n  }\n\n  function addSections() {\n    if (document.getElementById('processed-waveform')) {\n      //         for (let i = 0; i<(array.length); i++) {\n      //             console.log(i)\n      //             console.log(array[i])\n      //             var clip = array[i]\n      //             var highlight = document.createElement(\"div\");\n      //             \n      //             var wave = document.getElementById('processed-waveform')\n      //             wave.appendChild(highlight)\n      //         }\n      //     })\n      if (!document.getElementById('highlight')) {\n        const formdata = new FormData();\n        formdata.append('id', audioFile.id);\n        axios({\n          method: 'post',\n          url: '/get-related-noiseclips/',\n          data: formdata\n        }).then(function (response) {\n          const start = [];\n          const end = [];\n          const duration = parseFloat(audioFile.duration);\n\n          for (let i = 0; i < response.data.length; i++) {\n            start.push(parseFloat(response.data[i]['startTime']));\n            end.push(parseFloat(response.data[i]['endTime']));\n          }\n\n          for (let i = 0; i < start.length; i++) {\n            var highlight = document.createElement(\"div\");\n            highlight.id = 'highlight';\n            var wave = document.getElementById('processed-waveform');\n            wave.appendChild(highlight);\n            let relStart = Math.round(100 * start[i] / duration);\n            let relEnd = Math.round(100 * end[i] / duration);\n            highlight.style.width = String(relEnd - relStart) + \"%\";\n            highlight.style.height = '100px';\n            highlight.style.backgroundColor = 'rgba(0,0,0, 0.4)';\n            highlight.style.marginLeft = String(relStart) + \"%\"; // highlight.style.marginTop = '-100px';\n            // highlight.style.display = 'inline-block';\n\n            highlight.style.marginTop = String(-(waveform_height + highlight.style.height) / 2) + 'px';\n            console.log(String(-waveform_height / 2) + 'px');\n          }\n        });\n      }\n    } // return(\n    //     <div>hello?</div>\n    // )\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-audio-container\",\n      children: [\"Select audio file.\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateAudioList(),\n        children: \". Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), displayAudioSelect()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"uploadbutton\",\n      onClick: () => updateWaveforms(),\n      children: \"update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this), playPauseButtons(), /*#__PURE__*/_jsxDEV(\"script\", {\n      src: \"https://unpkg.com/wavesurfer.js\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"waveform-container\",\n      className: \"audio-display\",\n      children: addSections()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Analysis, \"5hbk16WNceFE/CVhLhtQfzR1CYM=\");\n\n_c = Analysis;\nexport default Analysis;\n\nvar _c;\n\n$RefreshReg$(_c, \"Analysis\");","map":{"version":3,"sources":["/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/Analysis.js"],"names":["React","useEffect","useState","Sound","Spectrogram","axios","ReactAudioPlayer","Wavesurfer","wavSpectro","require","decode","buffer","defaults","xsrfCookieName","xsrfHeaderName","original_wavesurfer","processed_wavesurfer","waveform_height","Analysis","audioFile","setAudioFile","audioList","setAudioList","updateAudioList","get","then","res","catch","err","console","log","handleAudioSelect","e","id","target","audio","data","filter","map","htmlEl","document","getElementById","setAttribute","displayAudioSelect","title","playPauseButtons","undefined","playPause","updateWaveforms","element","remove","originalWaveform","createElement","processedWaveform","domE2","appendChild","create","container","height","waveColor","load","filedata","denoisedFile","addSections","formdata","FormData","append","method","url","response","start","end","duration","parseFloat","i","length","push","highlight","wave","relStart","Math","round","relEnd","style","width","String","backgroundColor","marginLeft","marginTop"],"mappings":"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","sourcesContent":["import { React, useEffect, useState } from 'react';\nimport './Analysis.css';\nimport Sound from 'react-sound';\nimport { Spectrogram } from 'react-spectrogram';\nimport axios from 'axios';\nimport ReactAudioPlayer from 'react-audio-player'\nimport Wavesurfer from 'wavesurfer.js';\n\nvar wavSpectro = require('wav-spectrogram');\n\nconst decode = require('audio-decode');\nconst buffer = require('audio-lena/wav');\n\n// Sometimes required to allow axios to make post requests to django\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\"\n\n//initialise\nvar original_wavesurfer = null;\nvar processed_wavesurfer = null;\n\nconst waveform_height = 200;\n\nfunction Analysis() {\n\n    const [ audioFile, setAudioFile ] = useState(null);\n    const [ audioList, setAudioList ] = useState(0);\n\n    function updateAudioList() {\n        axios\n        .get(\"/api/unprocessedaudios/\")\n        .then((res) => setAudioList(res))\n        .catch((err) => console.log(err));\n    }\n\n    function handleAudioSelect(e) {\n        let id = e.target.id;\n        let audio = audioList.data.filter(audio=>audio.id==id)[0];\n        // console.log(id)\n        // console.log(audio)\n        // console.log('setting audio File:')\n        // console.log(audio)\n        setAudioFile(audio);\n        // console.log('actual audio file:')\n        // console.log(audioFile)\n\n        audioList.data.map(function(audio) {\n            let htmlEl = document.getElementById(audio.id)\n            if (audio.id == id) {\n                // console.log('selecting:')\n                // console.log(htmlEl)\n                htmlEl.setAttribute('class', 'audio-select-file-selected')\n            } else {\n                htmlEl.setAttribute('class', 'audio-select-file')\n            }\n        })\n    }\n\n    function displayAudioSelect() {\n        if (audioList) {\n            return (\n                <div className='audio-select'>\n                    {audioList.data.map(function(audio) {\n                        return (\n                            <li id={audio.id}\n                                class='audio-select-file'\n                                onClick={(e)=>handleAudioSelect(e)}>\n                                <div id='test' className='select-audio-title'>\n                                    {audio.title}\n                                </div>\n                            </li>\n                        )\n                    })}\n                </div>\n            )\n        } else return (\n            <div>fetching audio list...</div>\n        )\n    }\n\n    function playPauseButtons() {\n\n        return (\n            <div>\n                <br/>\n                <button className='uploadbutton' onClick={function() {\n                    if (original_wavesurfer != undefined) {\n                        original_wavesurfer.playPause()\n                    }\n                }}>Play/Pause original</button>\n                <button className='uploadbutton' onClick={function() {\n                    if (processed_wavesurfer != undefined) {\n                        processed_wavesurfer.playPause()\n                    }\n                }}>Play/Pause denoised</button>\n            </div>\n        )\n    }\n\n    function updateWaveforms() {\n\n        if (document.getElementById('original-waveform')) {\n            var element = document.getElementById('original-waveform')\n            element.remove()}\n        if (document.getElementById('processed-waveform')) {\n            var element = document.getElementById('processed-waveform')\n            element.remove()\n        }\n\n        var originalWaveform = document.createElement(\"div\");\n        originalWaveform.setAttribute('id', 'original-waveform')\n\n        var processedWaveform = document.createElement(\"div\");\n        processedWaveform.setAttribute('id', 'processed-waveform')\n\n\n        var domE2 = document.getElementById(\"waveform-container\")\n        domE2.appendChild(originalWaveform)\n        domE2.appendChild(processedWaveform)\n\n        original_wavesurfer = new Wavesurfer.create({\n            container: '#original-waveform',\n            height: waveform_height,\n            waveColor: 'black'\n        });\n\n        if (audioFile) {\n            if (original_wavesurfer) {\n                original_wavesurfer.load(audioFile.filedata)\n            }\n        } else {\n            console.log('no audio file selected')\n        }\n\n        processed_wavesurfer = new Wavesurfer.create({\n            container: '#processed-waveform',\n            height: 200,\n            waveColor: 'blue'\n        })\n\n        if (audioFile.denoisedFile) {\n            if (processed_wavesurfer) {\n                processed_wavesurfer.load(audioFile.denoisedFile)\n            }\n        }\n    }\n\n\n    function addSections() {\n        if(document.getElementById('processed-waveform')) {\n\n            //         for (let i = 0; i<(array.length); i++) {\n            //             console.log(i)\n            //             console.log(array[i])\n            //             var clip = array[i]\n\n            //             var highlight = document.createElement(\"div\");\n            //             \n\n            //             var wave = document.getElementById('processed-waveform')\n            //             wave.appendChild(highlight)\n            //         }\n            //     })\n\n            if (!document.getElementById('highlight')) {\n\n                const formdata = new FormData()\n                formdata.append('id', audioFile.id)\n\n                axios({\n                    method: 'post',\n                    url: '/get-related-noiseclips/',\n                    data: formdata\n                }).then(function(response) {\n\n                    const start = []\n                    const end = []\n                    const duration = parseFloat(audioFile.duration)\n\n                    for(let i=0;i<response.data.length;i++) {\n                        start.push(parseFloat(response.data[i]['startTime']))\n                        end.push(parseFloat(response.data[i]['endTime']))\n                    }\n                    for (let i=0;i<start.length;i++) {\n                        var highlight = document.createElement(\"div\")\n                        highlight.id = 'highlight'\n            \n                        var wave = document.getElementById('processed-waveform')\n                        wave.appendChild(highlight)\n\n                        let relStart = Math.round(100*start[i] / duration)\n                        let relEnd = Math.round(100*end[i]/duration)\n\n                        highlight.style.width = String(relEnd-relStart) + \"%\";\n                        highlight.style.height = '100px';\n                        highlight.style.backgroundColor = 'rgba(0,0,0, 0.4)';\n                        highlight.style.marginLeft = String(relStart) + \"%\";\n                        // highlight.style.marginTop = '-100px';\n                        // highlight.style.display = 'inline-block';\n                        highlight.style.marginTop = String(-(waveform_height+highlight.style.height)/2)+'px';\n                        console.log(String(-(waveform_height)/2)+'px')\n                    }\n                })\n            }\n        }\n\n        // return(\n        //     <div>hello?</div>\n        // )\n    }\n\n\n    return (\n        <div className='main-box'>\n            \n            <div className='select-audio-container'>\n                Select audio file.\n                <button onClick={()=>updateAudioList()}>. Refresh</button>\n                {displayAudioSelect()}\n            </div>            \n\n            <button className='uploadbutton' onClick={()=>updateWaveforms()}>update</button>\n\n            {playPauseButtons()}\n\n            <script src = 'https://unpkg.com/wavesurfer.js'></script>\n\n            <div id='waveform-container' className='audio-display'>\n                {addSections()}\n            </div>\n\n        </div>\n    )\n}\n\nexport default Analysis;"]},"metadata":{},"sourceType":"module"}