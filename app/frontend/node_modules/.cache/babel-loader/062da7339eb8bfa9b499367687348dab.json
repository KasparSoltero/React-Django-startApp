{"ast":null,"code":"/*!\n * wavesurfer.js spectrogram plugin 5.2.0 (2021-08-16)\n * https://wavesurfer-js.org\n * @license BSD-3-Clause\n */\n!function (e, t) {\n  \"object\" == typeof exports && \"object\" == typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define(\"WaveSurfer\", [], t) : \"object\" == typeof exports ? exports.WaveSurfer = t() : (e.WaveSurfer = e.WaveSurfer || {}, e.WaveSurfer.spectrogram = t());\n}(self, function () {\n  return (() => {\n    \"use strict\";\n\n    var e = {\n      325: (e, t) => {\n        Object.defineProperty(t, \"__esModule\", {\n          value: !0\n        }), t.default = function (e, t, a, r) {\n          switch (this.bufferSize = e, this.sampleRate = t, this.bandwidth = 2 / e * (t / 2), this.sinTable = new Float32Array(e), this.cosTable = new Float32Array(e), this.windowValues = new Float32Array(e), this.reverseTable = new Uint32Array(e), this.peakBand = 0, this.peak = 0, a) {\n            case \"bartlett\":\n              for (i = 0; i < e; i++) this.windowValues[i] = 2 / (e - 1) * ((e - 1) / 2 - Math.abs(i - (e - 1) / 2));\n\n              break;\n\n            case \"bartlettHann\":\n              for (i = 0; i < e; i++) this.windowValues[i] = .62 - .48 * Math.abs(i / (e - 1) - .5) - .38 * Math.cos(2 * Math.PI * i / (e - 1));\n\n              break;\n\n            case \"blackman\":\n              for (r = r || .16, i = 0; i < e; i++) this.windowValues[i] = (1 - r) / 2 - .5 * Math.cos(2 * Math.PI * i / (e - 1)) + r / 2 * Math.cos(4 * Math.PI * i / (e - 1));\n\n              break;\n\n            case \"cosine\":\n              for (i = 0; i < e; i++) this.windowValues[i] = Math.cos(Math.PI * i / (e - 1) - Math.PI / 2);\n\n              break;\n\n            case \"gauss\":\n              for (r = r || .25, i = 0; i < e; i++) this.windowValues[i] = Math.pow(Math.E, -.5 * Math.pow((i - (e - 1) / 2) / (r * (e - 1) / 2), 2));\n\n              break;\n\n            case \"hamming\":\n              for (i = 0; i < e; i++) this.windowValues[i] = .54 - .46 * Math.cos(2 * Math.PI * i / (e - 1));\n\n              break;\n\n            case \"hann\":\n            case void 0:\n              for (i = 0; i < e; i++) this.windowValues[i] = .5 * (1 - Math.cos(2 * Math.PI * i / (e - 1)));\n\n              break;\n\n            case \"lanczoz\":\n              for (i = 0; i < e; i++) this.windowValues[i] = Math.sin(Math.PI * (2 * i / (e - 1) - 1)) / (Math.PI * (2 * i / (e - 1) - 1));\n\n              break;\n\n            case \"rectangular\":\n              for (i = 0; i < e; i++) this.windowValues[i] = 1;\n\n              break;\n\n            case \"triangular\":\n              for (i = 0; i < e; i++) this.windowValues[i] = 2 / e * (e / 2 - Math.abs(i - (e - 1) / 2));\n\n              break;\n\n            default:\n              throw Error(\"No such window function '\" + a + \"'\");\n          }\n\n          var i,\n              s = 1,\n              n = e >> 1;\n\n          for (; s < e;) {\n            for (i = 0; i < s; i++) this.reverseTable[i + s] = this.reverseTable[i] + n;\n\n            s <<= 1, n >>= 1;\n          }\n\n          for (i = 0; i < e; i++) this.sinTable[i] = Math.sin(-Math.PI / i), this.cosTable[i] = Math.cos(-Math.PI / i);\n\n          this.calculateSpectrum = function (e) {\n            var t,\n                a,\n                r,\n                i = this.bufferSize,\n                s = this.cosTable,\n                n = this.sinTable,\n                o = this.reverseTable,\n                l = new Float32Array(i),\n                h = new Float32Array(i),\n                f = 2 / this.bufferSize,\n                c = Math.sqrt,\n                u = new Float32Array(i / 2),\n                p = Math.floor(Math.log(i) / Math.LN2);\n            if (Math.pow(2, p) !== i) throw \"Invalid buffer size, must be a power of 2.\";\n            if (i !== e.length) throw \"Supplied buffer is not the same size as defined FFT. FFT Size: \" + i + \" Buffer Size: \" + e.length;\n\n            for (var d, v, w, b, m, y, M, g, k = 1, x = 0; x < i; x++) l[x] = e[o[x]] * this.windowValues[o[x]], h[x] = 0;\n\n            for (; k < i;) {\n              d = s[k], v = n[k], w = 1, b = 0;\n\n              for (var S = 0; S < k; S++) {\n                for (x = S; x < i;) y = w * l[m = x + k] - b * h[m], M = w * h[m] + b * l[m], l[m] = l[x] - y, h[m] = h[x] - M, l[x] += y, h[x] += M, x += k << 1;\n\n                w = (g = w) * d - b * v, b = g * v + b * d;\n              }\n\n              k <<= 1;\n            }\n\n            x = 0;\n\n            for (var C = i / 2; x < C; x++) (r = f * c((t = l[x]) * t + (a = h[x]) * a)) > this.peak && (this.peakBand = x, this.peak = r), u[x] = r;\n\n            return u;\n          };\n        }, e.exports = t.default;\n      },\n      943: (e, t, a) => {\n        Object.defineProperty(t, \"__esModule\", {\n          value: !0\n        }), t.default = void 0;\n        var r,\n            i = (r = a(325)) && r.__esModule ? r : {\n          default: r\n        };\n\n        function s(e, t) {\n          for (var a = 0; a < t.length; a++) {\n            var r = t[a];\n            r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n          }\n        }\n\n        var n = function () {\n          function e(t, a) {\n            var r = this;\n            !function (e, t) {\n              if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n            }(this, e), this.params = t, this.wavesurfer = a, this.util = a.util, this.frequenciesDataUrl = t.frequenciesDataUrl, this._onScroll = function (e) {\n              r.updateScroll(e);\n            }, this._onRender = function () {\n              r.render();\n            }, this._onWrapperClick = function (e) {\n              r._wrapperClickHandler(e);\n            }, this._onReady = function () {\n              var e = r.drawer = a.drawer;\n              if (r.container = \"string\" == typeof t.container ? document.querySelector(t.container) : t.container, !r.container) throw Error(\"No container for WaveSurfer spectrogram\");\n\n              if (t.colorMap) {\n                if (t.colorMap.length < 256) throw new Error(\"Colormap must contain 256 elements\");\n\n                for (var i = 0; i < t.colorMap.length; i++) {\n                  if (4 !== t.colorMap[i].length) throw new Error(\"ColorMap entries must contain 4 values\");\n                }\n\n                r.colorMap = t.colorMap;\n              } else {\n                r.colorMap = [];\n\n                for (var s = 0; s < 256; s++) {\n                  var n = (255 - s) / 256;\n                  r.colorMap.push([n, n, n, 1]);\n                }\n              }\n\n              r.width = e.width, r.pixelRatio = r.params.pixelRatio || a.params.pixelRatio, r.fftSamples = r.params.fftSamples || a.params.fftSamples || 512, r.height = r.fftSamples / 2, r.noverlap = t.noverlap, r.windowFunc = t.windowFunc, r.alpha = t.alpha, r.createWrapper(), r.createCanvas(), r.render(), e.wrapper.addEventListener(\"scroll\", r._onScroll), a.on(\"redraw\", r._onRender);\n            };\n          }\n\n          var t, a, r;\n          return t = e, r = [{\n            key: \"create\",\n            value: function (t) {\n              return {\n                name: \"spectrogram\",\n                deferInit: !(!t || !t.deferInit) && t.deferInit,\n                params: t,\n                staticProps: {\n                  FFT: i.default\n                },\n                instance: e\n              };\n            }\n          }], (a = [{\n            key: \"init\",\n            value: function () {\n              this.wavesurfer.isReady ? this._onReady() : this.wavesurfer.once(\"ready\", this._onReady);\n            }\n          }, {\n            key: \"destroy\",\n            value: function () {\n              this.unAll(), this.wavesurfer.un(\"ready\", this._onReady), this.wavesurfer.un(\"redraw\", this._onRender), this.drawer && this.drawer.wrapper.removeEventListener(\"scroll\", this._onScroll), this.wavesurfer = null, this.util = null, this.params = null, this.wrapper && (this.wrapper.removeEventListener(\"click\", this._onWrapperClick), this.wrapper.parentNode.removeChild(this.wrapper), this.wrapper = null);\n            }\n          }, {\n            key: \"createWrapper\",\n            value: function () {\n              var e = this.container.querySelector(\"spectrogram\");\n              e && this.container.removeChild(e);\n              var t = this.wavesurfer.params;\n\n              if (this.wrapper = document.createElement(\"spectrogram\"), this.params.labels) {\n                var a = this.labelsEl = document.createElement(\"canvas\");\n                a.classList.add(\"spec-labels\"), this.drawer.style(a, {\n                  left: 0,\n                  position: \"absolute\",\n                  zIndex: 9,\n                  height: \"\".concat(this.height / this.pixelRatio, \"px\"),\n                  width: \"\".concat(55 / this.pixelRatio, \"px\")\n                }), this.wrapper.appendChild(a), this.loadLabels(\"rgba(68,68,68,0.5)\", \"12px\", \"10px\", \"\", \"#fff\", \"#f7f7f7\", \"center\", \"#specLabels\");\n              }\n\n              this.drawer.style(this.wrapper, {\n                display: \"block\",\n                position: \"relative\",\n                userSelect: \"none\",\n                webkitUserSelect: \"none\",\n                height: \"\".concat(this.height / this.pixelRatio, \"px\")\n              }), (t.fillParent || t.scrollParent) && this.drawer.style(this.wrapper, {\n                width: \"100%\",\n                overflowX: \"hidden\",\n                overflowY: \"hidden\"\n              }), this.container.appendChild(this.wrapper), this.wrapper.addEventListener(\"click\", this._onWrapperClick);\n            }\n          }, {\n            key: \"_wrapperClickHandler\",\n            value: function (e) {\n              e.preventDefault();\n              var t = \"offsetX\" in e ? e.offsetX : e.layerX;\n              this.fireEvent(\"click\", t / this.width || 0);\n            }\n          }, {\n            key: \"createCanvas\",\n            value: function () {\n              var e = this.canvas = this.wrapper.appendChild(document.createElement(\"canvas\"));\n              this.spectrCc = e.getContext(\"2d\"), this.util.style(e, {\n                position: \"absolute\",\n                zIndex: 4\n              });\n            }\n          }, {\n            key: \"render\",\n            value: function () {\n              this.updateCanvasStyle(), this.frequenciesDataUrl ? this.loadFrequenciesData(this.frequenciesDataUrl) : this.getFrequencies(this.drawSpectrogram);\n            }\n          }, {\n            key: \"updateCanvasStyle\",\n            value: function () {\n              var e = Math.round(this.width / this.pixelRatio) + \"px\";\n              this.canvas.width = this.width, this.canvas.height = this.height, this.canvas.style.width = e;\n            }\n          }, {\n            key: \"drawSpectrogram\",\n            value: function (e, t) {\n              var a = t.spectrCc,\n                  r = t.height,\n                  i = t.width,\n                  s = t.resample(e),\n                  n = t.buffer ? 2 / t.buffer.numberOfChannels : 1;\n\n              if (a) {\n                var o,\n                    l,\n                    h,\n                    f = a.createImageData(i, r);\n\n                for (o = 0; o < s.length; o++) for (l = 0; l < s[o].length; l++) {\n                  var c = t.colorMap[s[o][l]];\n\n                  for (h = 0; h < n; h++) {\n                    var u = r - l * n;\n                    2 === n && 1 === h && u--;\n                    var p = u * (4 * i) + 4 * o;\n                    f.data[p] = 255 * c[0], f.data[p + 1] = 255 * c[1], f.data[p + 2] = 255 * c[2], f.data[p + 3] = 255 * c[3];\n                  }\n                }\n\n                a.putImageData(f, 0, 0);\n              }\n            }\n          }, {\n            key: \"getFrequencies\",\n            value: function (e) {\n              var t = this.fftSamples,\n                  a = this.buffer = this.wavesurfer.backend.buffer,\n                  r = a.getChannelData(0),\n                  s = a.length,\n                  n = a.sampleRate,\n                  o = [];\n\n              if (a) {\n                var l = this.noverlap;\n\n                if (!l) {\n                  var h = a.length / this.canvas.width;\n                  l = Math.max(0, Math.round(t - h));\n                }\n\n                for (var f = new i.default(t, n, this.windowFunc, this.alpha), c = (Math.floor(s / (t - l)), 0); c + t < r.length;) {\n                  var u = r.slice(c, c + t),\n                      p = f.calculateSpectrum(u),\n                      d = new Uint8Array(t / 2),\n                      v = void 0;\n\n                  for (v = 0; v < t / 2; v++) d[v] = Math.max(-255, 45 * Math.log10(p[v]));\n\n                  o.push(d), c += t - l;\n                }\n\n                e(o, this);\n              } else this.fireEvent(\"error\", \"Web Audio buffer is not available\");\n            }\n          }, {\n            key: \"loadFrequenciesData\",\n            value: function (e) {\n              var t = this,\n                  a = this.util.fetchFile({\n                url: e\n              });\n              return a.on(\"success\", function (e) {\n                return t.drawSpectrogram(JSON.parse(e), t);\n              }), a.on(\"error\", function (e) {\n                return t.fireEvent(\"error\", e);\n              }), a;\n            }\n          }, {\n            key: \"freqType\",\n            value: function (e) {\n              return e >= 1e3 ? (e / 1e3).toFixed(1) : Math.round(e);\n            }\n          }, {\n            key: \"unitType\",\n            value: function (e) {\n              return e >= 1e3 ? \"KHz\" : \"Hz\";\n            }\n          }, {\n            key: \"loadLabels\",\n            value: function (e, t, a, r, i, s, n, o) {\n              e = e || \"rgba(68,68,68,0)\", t = t || \"12px\", a = a || \"10px\", r = r || \"Helvetica\", i = i || \"#fff\", s = s || \"#fff\", n = n || \"center\", o = o || \"#specLabels\";\n              var l,\n                  h = this.height || 512,\n                  f = h / 256 * 5,\n                  c = (this.wavesurfer.backend.ac.sampleRate / 2 - 0) / f,\n                  u = this.labelsEl.getContext(\"2d\");\n              if (this.labelsEl.height = this.height, this.labelsEl.width = 55, u) for (u.fillStyle = e, u.fillRect(0, 0, 55, h), u.fill(), l = 0; l <= f; l++) {\n                u.textAlign = n, u.textBaseline = \"middle\";\n                var p = 0 + c * l,\n                    d = (Math.round(p / (this.sampleRate / 2) * this.fftSamples), this.freqType(p)),\n                    v = this.unitType(p),\n                    w = void 0;\n                0 == l ? (w = h + l - 10, u.fillStyle = s, u.font = a + \" \" + r, u.fillText(v, 40, w), u.fillStyle = i, u.font = t + \" \" + r, u.fillText(d, 16, w)) : (w = h - 50 * l + 2, u.fillStyle = s, u.font = a + \" \" + r, u.fillText(v, 40, w), u.fillStyle = i, u.font = t + \" \" + r, u.fillText(d, 16, w));\n              }\n            }\n          }, {\n            key: \"updateScroll\",\n            value: function (e) {\n              this.wrapper && (this.wrapper.scrollLeft = e.target.scrollLeft);\n            }\n          }, {\n            key: \"resample\",\n            value: function (e) {\n              var t,\n                  a = this.width,\n                  r = [],\n                  i = 1 / e.length,\n                  s = 1 / a;\n\n              for (t = 0; t < a; t++) {\n                var n = new Array(e[0].length),\n                    o = void 0;\n\n                for (o = 0; o < e.length; o++) {\n                  var l = o * i,\n                      h = l + i,\n                      f = t * s,\n                      c = f + s,\n                      u = h <= f || c <= l ? 0 : Math.min(Math.max(h, f), Math.max(c, l)) - Math.max(Math.min(h, f), Math.min(c, l)),\n                      p = void 0;\n                  if (u > 0) for (p = 0; p < e[0].length; p++) null == n[p] && (n[p] = 0), n[p] += u / s * e[o][p];\n                }\n\n                var d = new Uint8Array(e[0].length),\n                    v = void 0;\n\n                for (v = 0; v < e[0].length; v++) d[v] = n[v];\n\n                r.push(d);\n              }\n\n              return r;\n            }\n          }]) && s(t.prototype, a), r && s(t, r), e;\n        }();\n\n        t.default = n, e.exports = t.default;\n      }\n    },\n        t = {};\n    return function a(r) {\n      var i = t[r];\n      if (void 0 !== i) return i.exports;\n      var s = t[r] = {\n        exports: {}\n      };\n      return e[r](s, s.exports, a), s.exports;\n    }(943);\n  })();\n});","map":{"version":3,"sources":["webpack://WaveSurfer.[name]/webpack/universalModuleDefinition","webpack://WaveSurfer.[name]/src/plugin/spectrogram/fft.js","webpack://WaveSurfer.[name]/src/plugin/spectrogram/index.js","webpack://WaveSurfer.[name]/webpack/bootstrap","webpack://WaveSurfer.[name]/webpack/startup"],"names":["root","factory","exports","module","define","amd","self","bufferSize","sampleRate","windowFunc","alpha","this","bandwidth","sinTable","Float32Array","cosTable","windowValues","reverseTable","Uint32Array","peakBand","peak","i","Math","abs","cos","PI","pow","E","undefined","sin","Error","limit","bit","calculateSpectrum","buffer","real","imag","bSi","sqrt","rval","ival","mag","spectrum","k","floor","log","LN2","length","halfSize","phaseShiftStepReal","phaseShiftStepImag","currentPhaseShiftReal","currentPhaseShiftImag","off","tr","ti","tmpReal","fftStep","N","SpectrogramPlugin","params","name","deferInit","staticProps","FFT","instance","ws","wavesurfer","util","frequenciesDataUrl","_onScroll","updateScroll","e","_onRender","render","_onWrapperClick","_wrapperClickHandler","_onReady","drawer","container","document","querySelector","colorMap","val","push","width","pixelRatio","fftSamples","height","noverlap","createWrapper","createCanvas","wrapper","addEventListener","on","isReady","once","unAll","un","removeEventListener","parentNode","removeChild","prevSpectrogram","wsParams","createElement","labels","labelsEl","classList","add","style","left","position","zIndex","appendChild","loadLabels","display","userSelect","webkitUserSelect","fillParent","scrollParent","overflowX","overflowY","event","preventDefault","relX","offsetX","layerX","fireEvent","canvas","spectrCc","getContext","updateCanvasStyle","loadFrequenciesData","getFrequencies","drawSpectrogram","round","frequenciesData","my","pixels","resample","heightFactor","numberOfChannels","imageData","createImageData","j","y","redIndex","data","putImageData","callback","backend","channelOne","getChannelData","bufferLength","frequencies","uniqueSamplesPerPx","max","fft","currentOffset","segment","slice","array","Uint8Array","log10","url","request","fetchFile","JSON","parse","freq","toFixed","bgFill","fontSizeFreq","fontSizeUnit","fontType","textColorFreq","textColorUnit","textAlign","getMaxY","labelIndex","step","ac","ctx","fillStyle","fillRect","fill","textBaseline","label","freqType","units","unitType","font","fillText","x","scrollLeft","target","oldMatrix","columnsNumber","newMatrix","oldPiece","newPiece","column","Array","oldStart","oldEnd","newStart","newEnd","overlap","min","intColumn","m","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"spectrogram\"] = factory();\n})(self, function() {\nreturn ","/* eslint-disable complexity, no-redeclare, no-var, one-var */\n\n/**\n * Calculate FFT - Based on https://github.com/corbanbrook/dsp.js\n *\n * @param {Number} bufferSize Buffer size\n * @param {Number} sampleRate Sample rate\n * @param {Function} windowFunc Window function\n * @param {Number} alpha Alpha channel\n */\nexport default function FFT(bufferSize, sampleRate, windowFunc, alpha) {\n    this.bufferSize = bufferSize;\n    this.sampleRate = sampleRate;\n    this.bandwidth = (2 / bufferSize) * (sampleRate / 2);\n\n    this.sinTable = new Float32Array(bufferSize);\n    this.cosTable = new Float32Array(bufferSize);\n    this.windowValues = new Float32Array(bufferSize);\n    this.reverseTable = new Uint32Array(bufferSize);\n\n    this.peakBand = 0;\n    this.peak = 0;\n\n    var i;\n    switch (windowFunc) {\n        case 'bartlett':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (2 / (bufferSize - 1)) *\n                    ((bufferSize - 1) / 2 - Math.abs(i - (bufferSize - 1) / 2));\n            }\n            break;\n        case 'bartlettHann':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    0.62 -\n                    0.48 * Math.abs(i / (bufferSize - 1) - 0.5) -\n                    0.38 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1));\n            }\n            break;\n        case 'blackman':\n            alpha = alpha || 0.16;\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (1 - alpha) / 2 -\n                    0.5 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1)) +\n                    (alpha / 2) *\n                        Math.cos((4 * Math.PI * i) / (bufferSize - 1));\n            }\n            break;\n        case 'cosine':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = Math.cos(\n                    (Math.PI * i) / (bufferSize - 1) - Math.PI / 2\n                );\n            }\n            break;\n        case 'gauss':\n            alpha = alpha || 0.25;\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = Math.pow(\n                    Math.E,\n                    -0.5 *\n                        Math.pow(\n                            (i - (bufferSize - 1) / 2) /\n                                ((alpha * (bufferSize - 1)) / 2),\n                            2\n                        )\n                );\n            }\n            break;\n        case 'hamming':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    0.54 -\n                    0.46 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1));\n            }\n            break;\n        case 'hann':\n        case undefined:\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    0.5 * (1 - Math.cos((Math.PI * 2 * i) / (bufferSize - 1)));\n            }\n            break;\n        case 'lanczoz':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    Math.sin(Math.PI * ((2 * i) / (bufferSize - 1) - 1)) /\n                    (Math.PI * ((2 * i) / (bufferSize - 1) - 1));\n            }\n            break;\n        case 'rectangular':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = 1;\n            }\n            break;\n        case 'triangular':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (2 / bufferSize) *\n                    (bufferSize / 2 - Math.abs(i - (bufferSize - 1) / 2));\n            }\n            break;\n        default:\n            throw Error(\"No such window function '\" + windowFunc + \"'\");\n    }\n\n    var limit = 1;\n    var bit = bufferSize >> 1;\n    var i;\n\n    while (limit < bufferSize) {\n        for (i = 0; i < limit; i++) {\n            this.reverseTable[i + limit] = this.reverseTable[i] + bit;\n        }\n\n        limit = limit << 1;\n        bit = bit >> 1;\n    }\n\n    for (i = 0; i < bufferSize; i++) {\n        this.sinTable[i] = Math.sin(-Math.PI / i);\n        this.cosTable[i] = Math.cos(-Math.PI / i);\n    }\n\n    this.calculateSpectrum = function(buffer) {\n        // Locally scope variables for speed up\n        var bufferSize = this.bufferSize,\n            cosTable = this.cosTable,\n            sinTable = this.sinTable,\n            reverseTable = this.reverseTable,\n            real = new Float32Array(bufferSize),\n            imag = new Float32Array(bufferSize),\n            bSi = 2 / this.bufferSize,\n            sqrt = Math.sqrt,\n            rval,\n            ival,\n            mag,\n            spectrum = new Float32Array(bufferSize / 2);\n\n        var k = Math.floor(Math.log(bufferSize) / Math.LN2);\n\n        if (Math.pow(2, k) !== bufferSize) {\n            throw 'Invalid buffer size, must be a power of 2.';\n        }\n        if (bufferSize !== buffer.length) {\n            throw 'Supplied buffer is not the same size as defined FFT. FFT Size: ' +\n                bufferSize +\n                ' Buffer Size: ' +\n                buffer.length;\n        }\n\n        var halfSize = 1,\n            phaseShiftStepReal,\n            phaseShiftStepImag,\n            currentPhaseShiftReal,\n            currentPhaseShiftImag,\n            off,\n            tr,\n            ti,\n            tmpReal;\n\n        for (var i = 0; i < bufferSize; i++) {\n            real[i] =\n                buffer[reverseTable[i]] * this.windowValues[reverseTable[i]];\n            imag[i] = 0;\n        }\n\n        while (halfSize < bufferSize) {\n            phaseShiftStepReal = cosTable[halfSize];\n            phaseShiftStepImag = sinTable[halfSize];\n\n            currentPhaseShiftReal = 1;\n            currentPhaseShiftImag = 0;\n\n            for (var fftStep = 0; fftStep < halfSize; fftStep++) {\n                var i = fftStep;\n\n                while (i < bufferSize) {\n                    off = i + halfSize;\n                    tr =\n                        currentPhaseShiftReal * real[off] -\n                        currentPhaseShiftImag * imag[off];\n                    ti =\n                        currentPhaseShiftReal * imag[off] +\n                        currentPhaseShiftImag * real[off];\n\n                    real[off] = real[i] - tr;\n                    imag[off] = imag[i] - ti;\n                    real[i] += tr;\n                    imag[i] += ti;\n\n                    i += halfSize << 1;\n                }\n\n                tmpReal = currentPhaseShiftReal;\n                currentPhaseShiftReal =\n                    tmpReal * phaseShiftStepReal -\n                    currentPhaseShiftImag * phaseShiftStepImag;\n                currentPhaseShiftImag =\n                    tmpReal * phaseShiftStepImag +\n                    currentPhaseShiftImag * phaseShiftStepReal;\n            }\n\n            halfSize = halfSize << 1;\n        }\n\n        for (var i = 0, N = bufferSize / 2; i < N; i++) {\n            rval = real[i];\n            ival = imag[i];\n            mag = bSi * sqrt(rval * rval + ival * ival);\n\n            if (mag > this.peak) {\n                this.peakBand = i;\n                this.peak = mag;\n            }\n            spectrum[i] = mag;\n        }\n        return spectrum;\n    };\n}\n","/* eslint-enable complexity, no-redeclare, no-var, one-var */\n\nimport FFT from './fft';\n\n/**\n * @typedef {Object} SpectrogramPluginParams\n * @property {string|HTMLElement} container Selector of element or element in\n * which to render\n * @property {number} fftSamples=512 Number of samples to fetch to FFT. Must be\n * a power of 2.\n * @property {boolean} labels Set to true to display frequency labels.\n * @property {number} noverlap Size of the overlapping window. Must be <\n * fftSamples. Auto deduced from canvas size by default.\n * @property {string} windowFunc='hann' The window function to be used. One of\n * these: `'bartlett'`, `'bartlettHann'`, `'blackman'`, `'cosine'`, `'gauss'`,\n * `'hamming'`, `'hann'`, `'lanczoz'`, `'rectangular'`, `'triangular'`\n * @property {?number} alpha Some window functions have this extra value.\n * (Between 0 and 1)\n * @property {number} pixelRatio=wavesurfer.params.pixelRatio to control the\n * size of the spectrogram in relation with its canvas. 1 = Draw on the whole\n * canvas. 2 = Draw on a quarter (1/2 the length and 1/2 the width)\n * @property {?boolean} deferInit Set to true to manually call\n * `initPlugin('spectrogram')`\n * @property {?number[][]} colorMap A 256 long array of 4-element arrays.\n * Each entry should contain a float between 0 and 1 and specify\n * r, g, b, and alpha.\n */\n\n/**\n * Render a spectrogram visualisation of the audio.\n *\n * @implements {PluginClass}\n * @extends {Observer}\n * @example\n * // es6\n * import SpectrogramPlugin from 'wavesurfer.spectrogram.js';\n *\n * // commonjs\n * var SpectrogramPlugin = require('wavesurfer.spectrogram.js');\n *\n * // if you are using <script> tags\n * var SpectrogramPlugin = window.WaveSurfer.spectrogram;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     SpectrogramPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class SpectrogramPlugin {\n    /**\n     * Spectrogram plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param  {SpectrogramPluginParams} params Parameters used to initialise the plugin\n     * @return {PluginDefinition} An object representing the plugin.\n     */\n    static create(params) {\n        return {\n            name: 'spectrogram',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            staticProps: {\n                FFT: FFT\n            },\n            instance: SpectrogramPlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n        this.util = ws.util;\n\n        this.frequenciesDataUrl = params.frequenciesDataUrl;\n        this._onScroll = e => {\n            this.updateScroll(e);\n        };\n        this._onRender = () => {\n            this.render();\n        };\n        this._onWrapperClick = e => {\n            this._wrapperClickHandler(e);\n        };\n        this._onReady = () => {\n            const drawer = (this.drawer = ws.drawer);\n\n            this.container =\n                'string' == typeof params.container\n                    ? document.querySelector(params.container)\n                    : params.container;\n\n            if (!this.container) {\n                throw Error('No container for WaveSurfer spectrogram');\n            }\n            if (params.colorMap) {\n                if (params.colorMap.length < 256) {\n                    throw new Error('Colormap must contain 256 elements');\n                }\n                for (let i = 0; i < params.colorMap.length; i++) {\n                    const cmEntry = params.colorMap[i];\n                    if (cmEntry.length !== 4) {\n                        throw new Error(\n                            'ColorMap entries must contain 4 values'\n                        );\n                    }\n                }\n                this.colorMap = params.colorMap;\n            } else {\n                this.colorMap = [];\n                for (let i = 0; i < 256; i++) {\n                    const val = (255 - i) / 256;\n                    this.colorMap.push([val, val, val, 1]);\n                }\n            }\n            this.width = drawer.width;\n            this.pixelRatio = this.params.pixelRatio || ws.params.pixelRatio;\n            this.fftSamples =\n                this.params.fftSamples || ws.params.fftSamples || 512;\n            this.height = this.fftSamples / 2;\n            this.noverlap = params.noverlap;\n            this.windowFunc = params.windowFunc;\n            this.alpha = params.alpha;\n\n            this.createWrapper();\n            this.createCanvas();\n            this.render();\n\n            drawer.wrapper.addEventListener('scroll', this._onScroll);\n            ws.on('redraw', this._onRender);\n        };\n    }\n\n    init() {\n        // Check if wavesurfer is ready\n        if (this.wavesurfer.isReady) {\n            this._onReady();\n        } else {\n            this.wavesurfer.once('ready', this._onReady);\n        }\n    }\n\n    destroy() {\n        this.unAll();\n        this.wavesurfer.un('ready', this._onReady);\n        this.wavesurfer.un('redraw', this._onRender);\n        this.drawer && this.drawer.wrapper.removeEventListener('scroll', this._onScroll);\n        this.wavesurfer = null;\n        this.util = null;\n        this.params = null;\n        if (this.wrapper) {\n            this.wrapper.removeEventListener('click', this._onWrapperClick);\n            this.wrapper.parentNode.removeChild(this.wrapper);\n            this.wrapper = null;\n        }\n    }\n\n    createWrapper() {\n        const prevSpectrogram = this.container.querySelector('spectrogram');\n        if (prevSpectrogram) {\n            this.container.removeChild(prevSpectrogram);\n        }\n        const wsParams = this.wavesurfer.params;\n        this.wrapper = document.createElement('spectrogram');\n        // if labels are active\n        if (this.params.labels) {\n            const labelsEl = (this.labelsEl = document.createElement('canvas'));\n            labelsEl.classList.add('spec-labels');\n            this.drawer.style(labelsEl, {\n                left: 0,\n                position: 'absolute',\n                zIndex: 9,\n                height: `${this.height / this.pixelRatio}px`,\n                width: `${55 / this.pixelRatio}px`\n            });\n            this.wrapper.appendChild(labelsEl);\n            this.loadLabels(\n                'rgba(68,68,68,0.5)',\n                '12px',\n                '10px',\n                '',\n                '#fff',\n                '#f7f7f7',\n                'center',\n                '#specLabels'\n            );\n        }\n\n        this.drawer.style(this.wrapper, {\n            display: 'block',\n            position: 'relative',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: `${this.height / this.pixelRatio}px`\n        });\n\n        if (wsParams.fillParent || wsParams.scrollParent) {\n            this.drawer.style(this.wrapper, {\n                width: '100%',\n                overflowX: 'hidden',\n                overflowY: 'hidden'\n            });\n        }\n        this.container.appendChild(this.wrapper);\n\n        this.wrapper.addEventListener('click', this._onWrapperClick);\n    }\n\n    _wrapperClickHandler(event) {\n        event.preventDefault();\n        const relX = 'offsetX' in event ? event.offsetX : event.layerX;\n        this.fireEvent('click', relX / this.width || 0);\n    }\n\n    createCanvas() {\n        const canvas = (this.canvas = this.wrapper.appendChild(\n            document.createElement('canvas')\n        ));\n\n        this.spectrCc = canvas.getContext('2d');\n\n        this.util.style(canvas, {\n            position: 'absolute',\n            zIndex: 4\n        });\n    }\n\n    render() {\n        this.updateCanvasStyle();\n\n        if (this.frequenciesDataUrl) {\n            this.loadFrequenciesData(this.frequenciesDataUrl);\n        } else {\n            this.getFrequencies(this.drawSpectrogram);\n        }\n    }\n\n    updateCanvasStyle() {\n        const width = Math.round(this.width / this.pixelRatio) + 'px';\n        this.canvas.width = this.width;\n        this.canvas.height = this.height;\n        this.canvas.style.width = width;\n    }\n\n    drawSpectrogram(frequenciesData, my) {\n        const spectrCc = my.spectrCc;\n        const height = my.height;\n        const width = my.width;\n        const pixels = my.resample(frequenciesData);\n        const heightFactor = my.buffer ? 2 / my.buffer.numberOfChannels : 1;\n        if (spectrCc) {\n            const imageData = spectrCc.createImageData(width, height);\n            let i;\n            let j;\n            let k;\n\n            for (i = 0; i < pixels.length; i++) {\n                for (j = 0; j < pixels[i].length; j++) {\n                    const colorMap = my.colorMap[pixels[i][j]];\n                    /* eslint-disable max-depth */\n                    for (k = 0; k < heightFactor; k++) {\n                        let y = height - j * heightFactor;\n                        if (heightFactor === 2 && k === 1) {\n                            y--;\n                        }\n                        const redIndex = y * (width * 4) + i * 4;\n                        imageData.data[redIndex] = colorMap[0] * 255;\n                        imageData.data[redIndex + 1] = colorMap[1] * 255;\n                        imageData.data[redIndex + 2] = colorMap[2] * 255;\n                        imageData.data[redIndex + 3] = colorMap[3] * 255;\n                    }\n                    /* eslint-enable max-depth */\n                }\n            }\n            spectrCc.putImageData(imageData, 0, 0);\n        }\n    }\n\n    getFrequencies(callback) {\n        const fftSamples = this.fftSamples;\n        const buffer = (this.buffer = this.wavesurfer.backend.buffer);\n        const channelOne = buffer.getChannelData(0);\n        const bufferLength = buffer.length;\n        const sampleRate = buffer.sampleRate;\n        const frequencies = [];\n\n        if (!buffer) {\n            this.fireEvent('error', 'Web Audio buffer is not available');\n            return;\n        }\n\n        let noverlap = this.noverlap;\n        if (!noverlap) {\n            const uniqueSamplesPerPx = buffer.length / this.canvas.width;\n            noverlap = Math.max(0, Math.round(fftSamples - uniqueSamplesPerPx));\n        }\n\n        const fft = new FFT(\n            fftSamples,\n            sampleRate,\n            this.windowFunc,\n            this.alpha\n        );\n        const maxSlicesCount = Math.floor(\n            bufferLength / (fftSamples - noverlap)\n        );\n        let currentOffset = 0;\n\n        while (currentOffset + fftSamples < channelOne.length) {\n            const segment = channelOne.slice(\n                currentOffset,\n                currentOffset + fftSamples\n            );\n            const spectrum = fft.calculateSpectrum(segment);\n            const array = new Uint8Array(fftSamples / 2);\n            let j;\n            for (j = 0; j < fftSamples / 2; j++) {\n                array[j] = Math.max(-255, Math.log10(spectrum[j]) * 45);\n            }\n            frequencies.push(array);\n            currentOffset += fftSamples - noverlap;\n        }\n        callback(frequencies, this);\n    }\n\n    loadFrequenciesData(url) {\n        const request = this.util.fetchFile({ url: url });\n\n        request.on('success', data =>\n            this.drawSpectrogram(JSON.parse(data), this)\n        );\n        request.on('error', e => this.fireEvent('error', e));\n\n        return request;\n    }\n\n    freqType(freq) {\n        return freq >= 1000 ? (freq / 1000).toFixed(1) : Math.round(freq);\n    }\n\n    unitType(freq) {\n        return freq >= 1000 ? 'KHz' : 'Hz';\n    }\n\n    loadLabels(\n        bgFill,\n        fontSizeFreq,\n        fontSizeUnit,\n        fontType,\n        textColorFreq,\n        textColorUnit,\n        textAlign,\n        container\n    ) {\n        const frequenciesHeight = this.height;\n        bgFill = bgFill || 'rgba(68,68,68,0)';\n        fontSizeFreq = fontSizeFreq || '12px';\n        fontSizeUnit = fontSizeUnit || '10px';\n        fontType = fontType || 'Helvetica';\n        textColorFreq = textColorFreq || '#fff';\n        textColorUnit = textColorUnit || '#fff';\n        textAlign = textAlign || 'center';\n        container = container || '#specLabels';\n        const bgWidth = 55;\n        const getMaxY = frequenciesHeight || 512;\n        const labelIndex = 5 * (getMaxY / 256);\n        const freqStart = 0;\n        const step =\n            (this.wavesurfer.backend.ac.sampleRate / 2 - freqStart) /\n            labelIndex;\n\n        // prepare canvas element for labels\n        const ctx = this.labelsEl.getContext('2d');\n        this.labelsEl.height = this.height;\n        this.labelsEl.width = bgWidth;\n\n        if (ctx) {\n            // fill background\n            ctx.fillStyle = bgFill;\n            ctx.fillRect(0, 0, bgWidth, getMaxY);\n            ctx.fill();\n            let i;\n\n            // render labels\n            for (i = 0; i <= labelIndex; i++) {\n                ctx.textAlign = textAlign;\n                ctx.textBaseline = 'middle';\n\n                const freq = freqStart + step * i;\n                const index = Math.round(\n                    (freq / (this.sampleRate / 2)) * this.fftSamples\n                );\n                const label = this.freqType(freq);\n                const units = this.unitType(freq);\n                const yLabelOffset = 2;\n                const x = 16;\n                let y;\n\n                if (i == 0) {\n                    y = getMaxY + i - 10;\n                    // unit label\n                    ctx.fillStyle = textColorUnit;\n                    ctx.font = fontSizeUnit + ' ' + fontType;\n                    ctx.fillText(units, x + 24, y);\n                    // freq label\n                    ctx.fillStyle = textColorFreq;\n                    ctx.font = fontSizeFreq + ' ' + fontType;\n                    ctx.fillText(label, x, y);\n                } else {\n                    y = getMaxY - i * 50 + yLabelOffset;\n                    // unit label\n                    ctx.fillStyle = textColorUnit;\n                    ctx.font = fontSizeUnit + ' ' + fontType;\n                    ctx.fillText(units, x + 24, y);\n                    // freq label\n                    ctx.fillStyle = textColorFreq;\n                    ctx.font = fontSizeFreq + ' ' + fontType;\n                    ctx.fillText(label, x, y);\n                }\n            }\n        }\n    }\n\n    updateScroll(e) {\n        if (this.wrapper) {\n            this.wrapper.scrollLeft = e.target.scrollLeft;\n        }\n    }\n\n    resample(oldMatrix) {\n        const columnsNumber = this.width;\n        const newMatrix = [];\n\n        const oldPiece = 1 / oldMatrix.length;\n        const newPiece = 1 / columnsNumber;\n        let i;\n\n        for (i = 0; i < columnsNumber; i++) {\n            const column = new Array(oldMatrix[0].length);\n            let j;\n\n            for (j = 0; j < oldMatrix.length; j++) {\n                const oldStart = j * oldPiece;\n                const oldEnd = oldStart + oldPiece;\n                const newStart = i * newPiece;\n                const newEnd = newStart + newPiece;\n\n                const overlap =\n                    oldEnd <= newStart || newEnd <= oldStart\n                        ? 0\n                        : Math.min(\n                            Math.max(oldEnd, newStart),\n                            Math.max(newEnd, oldStart)\n                        ) -\n                        Math.max(\n                            Math.min(oldEnd, newStart),\n                            Math.min(newEnd, oldStart)\n                        );\n                let k;\n                /* eslint-disable max-depth */\n                if (overlap > 0) {\n                    for (k = 0; k < oldMatrix[0].length; k++) {\n                        if (column[k] == null) {\n                            column[k] = 0;\n                        }\n                        column[k] += (overlap / newPiece) * oldMatrix[j][k];\n                    }\n                }\n                /* eslint-enable max-depth */\n            }\n\n            const intColumn = new Uint8Array(oldMatrix[0].length);\n            let m;\n\n            for (m = 0; m < oldMatrix[0].length; m++) {\n                intColumn[m] = column[m];\n            }\n\n            newMatrix.push(intColumn);\n        }\n\n        return newMatrix;\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(943);\n"]},"metadata":{},"sourceType":"script"}