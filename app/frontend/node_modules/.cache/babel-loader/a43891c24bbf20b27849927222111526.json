{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require(\"react-dom\");\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _lodash = require(\"lodash\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar WaveCanvas = function (_React$Component) {\n  _inherits(WaveCanvas, _React$Component);\n\n  function WaveCanvas(props) {\n    _classCallCheck(this, WaveCanvas);\n\n    var _this = _possibleConstructorReturn(this, (WaveCanvas.__proto__ || Object.getPrototypeOf(WaveCanvas)).call(this, props));\n\n    _this.componentDidUpdate = function (prevProps) {\n      if (prevProps.width != _this.props.width || prevProps.height != _this.props.height || prevProps.color != _this.props.color || !(0, _lodash.isEqual)(prevProps.peaks, _this.props.peaks)) {\n        _this.updateSize(_this.props.width, _this.props.height, _this.props.peaks);\n      }\n    };\n\n    _this.shouldComponentUpdate = function (nextProps, nextState) {\n      return nextProps.width != _this.props.width || nextProps.height != _this.props.height || nextProps.color != _this.props.color || !(0, _lodash.isEqual)(nextProps.peaks, _this.props.peaks);\n    };\n\n    _this.clearWave = function (waveCanvasCtx, width, height) {\n      waveCanvasCtx.clearRect(0, 0, width, height);\n    };\n\n    _this.drawBars = function (waveCanvasCtx, width, peaks) {\n      var params = {\n        fillParent: true,\n        height: _this.props.height,\n        normalize: true,\n        pixelRatio: _this.props.pixelRatio,\n        barWidth: _this.props.barWidth,\n        color: _this.props.color,\n        gradientColors: _this.props.gradientColors // Bar wave draws the bottom only as a reflection of the top,\n        // so we don't need negative values\n\n      };\n      var hasMinVals = [].some.call(peaks, function (val) {\n        return val < 0;\n      });\n\n      if (hasMinVals) {\n        // If the first value is negative, add 1 to the filtered indices\n        var indexOffset = 0;\n\n        if (peaks[0] < 0) {\n          indexOffset = 1;\n        }\n\n        peaks = [].filter.call(peaks, function (_, index) {\n          return (index + indexOffset) % 2 == 0;\n        });\n      } // A half-pixel offset makes lines crisp\n\n\n      var $ = 0.5 / params.pixelRatio;\n      var height = params.height * params.pixelRatio;\n      var offsetY = 0;\n      var halfH = params.height / 2; // Don't use height because this is after canvas height has been set\n\n      var length = peaks.length;\n      var bar = params.barWidth * params.pixelRatio;\n      var gap = Math.max(params.pixelRatio, 2);\n      var step = bar + gap;\n      var absmax = 1;\n\n      if (params.normalize) {\n        absmax = _this.absMax(peaks);\n      }\n\n      var scale = length / width;\n\n      if (params.gradientColors) {\n        var gradient = waveCanvasCtx.createLinearGradient(0, 0, width, 0);\n        params.gradientColors.forEach(function (color) {\n          // The first position of each array is the stop position between 0 and 1\n          // The second position is the color\n          gradient.addColorStop(color[0], color[1]);\n        });\n        waveCanvasCtx.fillStyle = gradient;\n      } else {\n        waveCanvasCtx.fillStyle = params.color;\n      }\n\n      if (!waveCanvasCtx) {\n        return;\n      }\n\n      for (var i = 0; i < width; i += step) {\n        var h = Math.round(peaks[Math.floor(i * scale)] / absmax * halfH);\n\n        if (h === 0) {\n          h = 1;\n        }\n\n        waveCanvasCtx.fillRect(i + $, halfH - h + offsetY, bar + $, h * 2);\n      }\n    };\n\n    _this.drawWaves = function (waveCanvasCtx, width, peaks) {\n      var params = {\n        fillParent: true,\n        height: _this.props.height,\n        normalize: true,\n        pixelRatio: _this.props.pixelRatio,\n        color: _this.props.color,\n        gradientColors: _this.props.gradientColors // Support arrays without negative peaks\n\n      };\n      var hasMinValues = [].some.call(peaks, function (val) {\n        return val < 0;\n      });\n\n      if (!hasMinValues) {\n        var reflectedPeaks = [];\n\n        for (var i = 0, len = peaks.length; i < len; i++) {\n          reflectedPeaks[2 * i] = peaks[i];\n          reflectedPeaks[2 * i + 1] = -peaks[i];\n        }\n\n        peaks = reflectedPeaks;\n      } // A half-pixel offset makes lines crisp\n\n\n      var $ = 0.5 / params.pixelRatio;\n      var height = params.height * params.pixelRatio;\n      var offsetY = 0;\n      var halfH = params.height / 2;\n      var length = ~~(peaks.length / 2);\n      var scale = 1;\n\n      if (params.fillParent && width != length) {\n        scale = width / length;\n      }\n\n      var absmax = 1;\n\n      if (params.normalize) {\n        var max = _this.max(peaks);\n\n        var min = _this.min(peaks);\n\n        absmax = -min > max ? -min : max;\n      }\n\n      if (params.gradientColors) {\n        var gradient = waveCanvasCtx.createLinearGradient(0, 0, width, 0);\n        params.gradientColors.forEach(function (color) {\n          // The first position of each array is the stop position between 0 and 1\n          // The second position is the color\n          gradient.addColorStop(color[0], color[1]);\n        });\n        waveCanvasCtx.fillStyle = gradient;\n      } else {\n        waveCanvasCtx.fillStyle = params.color;\n      }\n\n      if (!waveCanvasCtx) {\n        return;\n      }\n\n      waveCanvasCtx.beginPath();\n      waveCanvasCtx.moveTo($, halfH + offsetY);\n\n      for (var i = 0; i < length; i++) {\n        var h = Math.round(peaks[2 * i] / absmax * halfH);\n        waveCanvasCtx.lineTo(i * scale + $, halfH - h + offsetY);\n      } // Draw the bottom edge going backwards, to make a single\n      // closed hull to fill.\n\n\n      for (var i = length - 1; i >= 0; i--) {\n        var h = Math.round(peaks[2 * i + 1] / absmax * halfH);\n        waveCanvasCtx.lineTo(i * scale + $, halfH - h + offsetY);\n      } // waveCanvasCtx.closePath()\n\n\n      waveCanvasCtx.fill(); // Always draw a median line\n\n      waveCanvasCtx.fillRect(0, halfH + offsetY - $, width, $);\n    };\n\n    _this.absMax = function (values) {\n      var max = -Infinity;\n\n      for (var i in values) {\n        var num = Math.abs(values[i]);\n\n        if (num > max) {\n          max = num;\n        }\n      }\n\n      return max;\n    };\n\n    _this.max = function (values) {\n      var max = -Infinity;\n\n      for (var i in values) {\n        if (values[i] > max) {\n          max = values[i];\n        }\n      }\n\n      return max;\n    };\n\n    _this.min = function (values) {\n      var min = +Infinity;\n\n      for (var i in values) {\n        if (values[i] < min) {\n          min = values[i];\n        }\n      }\n\n      return min;\n    };\n\n    _this.updateSize = function (width, height, peaks) {\n      if (peaks) {\n        var waveCanvasCtx = _reactDom2.default.findDOMNode(_this.wave).getContext(\"2d\");\n\n        var displayWidth = Math.round(width / _this.props.pixelRatio);\n        var displayHeight = Math.round(height / _this.props.pixelRatio);\n        waveCanvasCtx.canvas.width = width;\n        waveCanvasCtx.canvas.height = height;\n        waveCanvasCtx.canvas.style.width = displayWidth + \"px\";\n        waveCanvasCtx.canvas.style.height = displayHeight + \"px\";\n\n        _this.clearWave(waveCanvasCtx, width, height);\n\n        if (_this.props.barWidth) {\n          _this.drawBars(waveCanvasCtx, width, peaks);\n        } else {\n          _this.drawWaves(waveCanvasCtx, width, peaks);\n        }\n      }\n    };\n\n    return _this;\n  } // static propTypes = {\n  //   barWidth: PropTypes.number,\n  //   width: PropTypes.number.isRequired,\n  //   height: PropTypes.number.isRequired,\n  //   peaks: PropTypes.arrayOf(PropTypes.number.isRequired),\n  //   pixelRatio: PropTypes.number.isRequired,\n  //   color: PropTypes.string,\n  //   gradientColors: PropTypes.arrayOf(\n  //     PropTypes.arrayOf(\n  //       PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\n  //     ).isRequired\n  //   ),\n  // }\n\n\n  _createClass(WaveCanvas, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return this.props.peaks ? _react2.default.createElement(\"canvas\", {\n        ref: function ref(instance) {\n          _this2.wave = instance;\n        }\n      }) : null;\n    }\n  }]);\n\n  return WaveCanvas;\n}(_react2.default.Component);\n\nWaveCanvas.defaultProps = {\n  color: \"ccc\",\n  width: 0,\n  pixelRatio: window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI\n};\nexports.default = WaveCanvas;","map":{"version":3,"sources":["/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/node_modules/react-audio-waveform/dist/WaveCanvas.js"],"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react","require","_react2","_interopRequireDefault","_reactDom","_reactDom2","_lodash","obj","__esModule","default","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","WaveCanvas","_React$Component","_this","getPrototypeOf","componentDidUpdate","prevProps","width","height","color","isEqual","peaks","updateSize","shouldComponentUpdate","nextProps","nextState","clearWave","waveCanvasCtx","clearRect","drawBars","params","fillParent","normalize","pixelRatio","barWidth","gradientColors","hasMinVals","some","val","indexOffset","filter","_","index","$","offsetY","halfH","bar","gap","Math","max","step","absmax","absMax","scale","gradient","createLinearGradient","forEach","addColorStop","fillStyle","h","round","floor","fillRect","drawWaves","hasMinValues","reflectedPeaks","len","min","beginPath","moveTo","lineTo","fill","values","Infinity","num","abs","findDOMNode","wave","getContext","displayWidth","displayHeight","canvas","style","render","_this2","createElement","ref","Component","defaultProps","window","devicePixelRatio","screen","deviceXDPI","logicalXDPI"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require(\"react-dom\");\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _lodash = require(\"lodash\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WaveCanvas = function (_React$Component) {\n  _inherits(WaveCanvas, _React$Component);\n\n  function WaveCanvas(props) {\n    _classCallCheck(this, WaveCanvas);\n\n    var _this = _possibleConstructorReturn(this, (WaveCanvas.__proto__ || Object.getPrototypeOf(WaveCanvas)).call(this, props));\n\n    _this.componentDidUpdate = function (prevProps) {\n      if (prevProps.width != _this.props.width || prevProps.height != _this.props.height || prevProps.color != _this.props.color || !(0, _lodash.isEqual)(prevProps.peaks, _this.props.peaks)) {\n        _this.updateSize(_this.props.width, _this.props.height, _this.props.peaks);\n      }\n    };\n\n    _this.shouldComponentUpdate = function (nextProps, nextState) {\n      return nextProps.width != _this.props.width || nextProps.height != _this.props.height || nextProps.color != _this.props.color || !(0, _lodash.isEqual)(nextProps.peaks, _this.props.peaks);\n    };\n\n    _this.clearWave = function (waveCanvasCtx, width, height) {\n      waveCanvasCtx.clearRect(0, 0, width, height);\n    };\n\n    _this.drawBars = function (waveCanvasCtx, width, peaks) {\n      var params = {\n        fillParent: true,\n        height: _this.props.height,\n        normalize: true,\n        pixelRatio: _this.props.pixelRatio,\n        barWidth: _this.props.barWidth,\n        color: _this.props.color,\n        gradientColors: _this.props.gradientColors\n\n        // Bar wave draws the bottom only as a reflection of the top,\n        // so we don't need negative values\n      };var hasMinVals = [].some.call(peaks, function (val) {\n        return val < 0;\n      });\n      if (hasMinVals) {\n        // If the first value is negative, add 1 to the filtered indices\n        var indexOffset = 0;\n        if (peaks[0] < 0) {\n          indexOffset = 1;\n        }\n        peaks = [].filter.call(peaks, function (_, index) {\n          return (index + indexOffset) % 2 == 0;\n        });\n      }\n\n      // A half-pixel offset makes lines crisp\n      var $ = 0.5 / params.pixelRatio;\n      var height = params.height * params.pixelRatio;\n      var offsetY = 0;\n      var halfH = params.height / 2; // Don't use height because this is after canvas height has been set\n      var length = peaks.length;\n      var bar = params.barWidth * params.pixelRatio;\n      var gap = Math.max(params.pixelRatio, 2);\n      var step = bar + gap;\n\n      var absmax = 1;\n      if (params.normalize) {\n        absmax = _this.absMax(peaks);\n      }\n\n      var scale = length / width;\n\n      if (params.gradientColors) {\n        var gradient = waveCanvasCtx.createLinearGradient(0, 0, width, 0);\n        params.gradientColors.forEach(function (color) {\n          // The first position of each array is the stop position between 0 and 1\n          // The second position is the color\n          gradient.addColorStop(color[0], color[1]);\n        });\n        waveCanvasCtx.fillStyle = gradient;\n      } else {\n        waveCanvasCtx.fillStyle = params.color;\n      }\n\n      if (!waveCanvasCtx) {\n        return;\n      }\n\n      for (var i = 0; i < width; i += step) {\n        var h = Math.round(peaks[Math.floor(i * scale)] / absmax * halfH);\n        if (h === 0) {\n          h = 1;\n        }\n        waveCanvasCtx.fillRect(i + $, halfH - h + offsetY, bar + $, h * 2);\n      }\n    };\n\n    _this.drawWaves = function (waveCanvasCtx, width, peaks) {\n      var params = {\n        fillParent: true,\n        height: _this.props.height,\n        normalize: true,\n        pixelRatio: _this.props.pixelRatio,\n        color: _this.props.color,\n        gradientColors: _this.props.gradientColors\n\n        // Support arrays without negative peaks\n      };var hasMinValues = [].some.call(peaks, function (val) {\n        return val < 0;\n      });\n      if (!hasMinValues) {\n        var reflectedPeaks = [];\n        for (var i = 0, len = peaks.length; i < len; i++) {\n          reflectedPeaks[2 * i] = peaks[i];\n          reflectedPeaks[2 * i + 1] = -peaks[i];\n        }\n        peaks = reflectedPeaks;\n      }\n\n      // A half-pixel offset makes lines crisp\n      var $ = 0.5 / params.pixelRatio;\n      var height = params.height * params.pixelRatio;\n      var offsetY = 0;\n      var halfH = params.height / 2;\n      var length = ~~(peaks.length / 2);\n\n      var scale = 1;\n      if (params.fillParent && width != length) {\n        scale = width / length;\n      }\n\n      var absmax = 1;\n      if (params.normalize) {\n        var max = _this.max(peaks);\n        var min = _this.min(peaks);\n        absmax = -min > max ? -min : max;\n      }\n\n      if (params.gradientColors) {\n        var gradient = waveCanvasCtx.createLinearGradient(0, 0, width, 0);\n        params.gradientColors.forEach(function (color) {\n          // The first position of each array is the stop position between 0 and 1\n          // The second position is the color\n          gradient.addColorStop(color[0], color[1]);\n        });\n        waveCanvasCtx.fillStyle = gradient;\n      } else {\n        waveCanvasCtx.fillStyle = params.color;\n      }\n\n      if (!waveCanvasCtx) {\n        return;\n      }\n\n      waveCanvasCtx.beginPath();\n      waveCanvasCtx.moveTo($, halfH + offsetY);\n\n      for (var i = 0; i < length; i++) {\n        var h = Math.round(peaks[2 * i] / absmax * halfH);\n        waveCanvasCtx.lineTo(i * scale + $, halfH - h + offsetY);\n      }\n\n      // Draw the bottom edge going backwards, to make a single\n      // closed hull to fill.\n      for (var i = length - 1; i >= 0; i--) {\n        var h = Math.round(peaks[2 * i + 1] / absmax * halfH);\n        waveCanvasCtx.lineTo(i * scale + $, halfH - h + offsetY);\n      }\n\n      // waveCanvasCtx.closePath()\n      waveCanvasCtx.fill();\n\n      // Always draw a median line\n      waveCanvasCtx.fillRect(0, halfH + offsetY - $, width, $);\n    };\n\n    _this.absMax = function (values) {\n      var max = -Infinity;\n      for (var i in values) {\n        var num = Math.abs(values[i]);\n        if (num > max) {\n          max = num;\n        }\n      }\n\n      return max;\n    };\n\n    _this.max = function (values) {\n      var max = -Infinity;\n      for (var i in values) {\n        if (values[i] > max) {\n          max = values[i];\n        }\n      }\n\n      return max;\n    };\n\n    _this.min = function (values) {\n      var min = +Infinity;\n      for (var i in values) {\n        if (values[i] < min) {\n          min = values[i];\n        }\n      }\n\n      return min;\n    };\n\n    _this.updateSize = function (width, height, peaks) {\n      if (peaks) {\n        var waveCanvasCtx = _reactDom2.default.findDOMNode(_this.wave).getContext(\"2d\");\n\n        var displayWidth = Math.round(width / _this.props.pixelRatio);\n        var displayHeight = Math.round(height / _this.props.pixelRatio);\n        waveCanvasCtx.canvas.width = width;\n        waveCanvasCtx.canvas.height = height;\n        waveCanvasCtx.canvas.style.width = displayWidth + \"px\";\n        waveCanvasCtx.canvas.style.height = displayHeight + \"px\";\n\n        _this.clearWave(waveCanvasCtx, width, height);\n        if (_this.props.barWidth) {\n          _this.drawBars(waveCanvasCtx, width, peaks);\n        } else {\n          _this.drawWaves(waveCanvasCtx, width, peaks);\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  // static propTypes = {\n  //   barWidth: PropTypes.number,\n  //   width: PropTypes.number.isRequired,\n  //   height: PropTypes.number.isRequired,\n  //   peaks: PropTypes.arrayOf(PropTypes.number.isRequired),\n  //   pixelRatio: PropTypes.number.isRequired,\n  //   color: PropTypes.string,\n  //   gradientColors: PropTypes.arrayOf(\n  //     PropTypes.arrayOf(\n  //       PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\n  //     ).isRequired\n  //   ),\n  // }\n\n  _createClass(WaveCanvas, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return this.props.peaks ? _react2.default.createElement(\"canvas\", {\n        ref: function ref(instance) {\n          _this2.wave = instance;\n        }\n      }) : null;\n    }\n  }]);\n\n  return WaveCanvas;\n}(_react2.default.Component);\n\nWaveCanvas.defaultProps = {\n  color: \"ccc\",\n  width: 0,\n  pixelRatio: window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI };\nexports.default = WaveCanvas;"]},"metadata":{},"sourceType":"script"}