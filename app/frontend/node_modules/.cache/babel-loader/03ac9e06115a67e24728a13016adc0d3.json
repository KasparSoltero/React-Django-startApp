{"ast":null,"code":"var _jsxFileName = \"/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/SelectionList.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport './SelectionList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.headers.common[\"X-CSRFTOKEN\"] = 'gPvOPnEwl4K7jFnYGucAwkW06M5RrJFRvEtwPMUNbylfnVsG0BOm5niJPd3COr9r';\n\nfunction SelectionList(props) {\n  _s();\n\n  //general selection list\n  //props:\n  //list-type: backend-data\n  //object - the name of the object in backend to list\n  //select - are list items selectable?\n  const [list, setList] = useState(null);\n  useEffect(() => {\n    if (props.list_type == 'backend-data') {\n      let form = new FormData();\n      form.append('object', props.object);\n      form.append('return', 'list');\n      axios({\n        method: 'post',\n        url: 'get-model',\n        data: form\n      }).then(response => {\n        console.log(response.data);\n        setList(response.data);\n      });\n    }\n  }, [props]);\n\n  function handleItemClick(e) {\n    //send selected item to parent component\n    let pk = e.target.getAttribute('pk');\n    let selected_db_object = list.find(obj => String(obj.pk) == pk);\n    props.updateSelected([e.target, selected_db_object]); //update visuals to show selected component\n\n    for (let el of document.getElementsByClassName('list-element')) {\n      el == e.target ? el.className = 'list-element selected' : el.className = 'list-element selectable';\n    }\n  }\n\n  function displayElement(el) {\n    let temp = 0;\n    axios.get(\"/api/unprocessedaudios/\").then(function (res) {\n      temp = res;\n      console.log('class returns:');\n      console.log(temp.data);\n      console.log(typeof temp.data);\n      console.log(temp.data[0]);\n      console.log(typeof temp.data[0]);\n    }).catch(err => console.log(err));\n    console.log('function returns: ');\n    console.log(list);\n    console.log(typeof list);\n    console.log(list[0]);\n    console.log(typeof list[0]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [props.display_title ? String(el.fields.title) : /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"invisible\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 65\n      }, this), props.display_audio ? /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        src: \"../../audio/assets/cat_clip_0.wav\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 39\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"invisible\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"list-container\",\n    children: list ? list.map(function (list_element) {// const element_props = {\n      //     className: 'list-element',\n      //     pk: list_element.pk\n      // }\n      // if (props.selectable) {\n      //     element_props['onClick'] = (e)=>handleItemClick(e)\n      //     element_props['className'] = 'list-element selectable'\n      // }\n      // return (\n      //     <div {...element_props}>\n      //         {displayElement(list_element)}\n      //     </div>\n      // )\n    }) : 'retrieving list...'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SelectionList, \"In5dBTVvVL43jMBuc/LfNA51fjY=\");\n\n_c = SelectionList;\nexport default SelectionList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectionList\");","map":{"version":3,"sources":["/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/SelectionList.js"],"names":["axios","useState","useEffect","defaults","headers","common","SelectionList","props","list","setList","list_type","form","FormData","append","object","method","url","data","then","response","console","log","handleItemClick","e","pk","target","getAttribute","selected_db_object","find","obj","String","updateSelected","el","document","getElementsByClassName","className","displayElement","temp","get","res","catch","err","display_title","fields","title","display_audio","map","list_element"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { useState, useEffect } from 'react'\nimport './SelectionList.css'\n\naxios.defaults.headers.common[\"X-CSRFTOKEN\"] = 'gPvOPnEwl4K7jFnYGucAwkW06M5RrJFRvEtwPMUNbylfnVsG0BOm5niJPd3COr9r';\n\nfunction SelectionList(props) {\n    //general selection list\n\n    //props:\n    //list-type: backend-data\n        //object - the name of the object in backend to list\n        //select - are list items selectable?\n\n    const [ list, setList ] = useState(null)\n\n    useEffect(() => {\n        if (props.list_type=='backend-data') {\n        \n            let form = new FormData\n            form.append('object', props.object)\n            form.append('return', 'list')\n    \n            axios({\n                method: 'post',\n                url: 'get-model',\n                data: form\n            }).then((response) => {\n                console.log(response.data)\n                setList(response.data)\n            }\n            )\n        }\n    }, [props])\n\n    function handleItemClick(e) {\n        //send selected item to parent component\n        let pk = e.target.getAttribute('pk')\n        let selected_db_object = list.find((obj)=>String(obj.pk)==pk)\n\n        props.updateSelected([e.target, selected_db_object])\n\n        //update visuals to show selected component\n        for (let el of document.getElementsByClassName('list-element')) {\n            el==e.target? el.className = 'list-element selected' : el.className = 'list-element selectable'\n        }\n    }\n\n\n    function displayElement(el) {\n\n        let temp = 0\n\n        axios\n        .get(\"/api/unprocessedaudios/\")\n        .then(function(res) {\n            temp = res\n            console.log('class returns:')\n            console.log(temp.data)\n            console.log(typeof(temp.data))\n            console.log(temp.data[0])\n            console.log(typeof(temp.data[0]))\n        })\n        .catch((err) => console.log(err))\n\n        console.log('function returns: ')\n        console.log(list)\n        console.log(typeof(list))\n        console.log(list[0])\n        console.log(typeof(list[0]))\n\n        return (\n            <div>\n                {props.display_title? String(el.fields.title) : <div class='invisible'/>}\n                {props.display_audio? <audio \n                    controls\n                    src=\"../../audio/assets/cat_clip_0.wav\">\n                </audio> : <div class='invisible'/>}\n            </div>\n        )\n    }\n    \n    return (\n        <div id='list-container'>\n            {list? list.map(function(list_element) {\n\n                // const element_props = {\n                //     className: 'list-element',\n                //     pk: list_element.pk\n                // }\n\n                // if (props.selectable) {\n                //     element_props['onClick'] = (e)=>handleItemClick(e)\n                //     element_props['className'] = 'list-element selectable'\n                // }\n\n                // return (\n                //     <div {...element_props}>\n                //         {displayElement(list_element)}\n                //     </div>\n                // )\n            }) : 'retrieving list...'}\n        </div>\n    )\n}\n\nexport default SelectionList"]},"metadata":{},"sourceType":"module"}