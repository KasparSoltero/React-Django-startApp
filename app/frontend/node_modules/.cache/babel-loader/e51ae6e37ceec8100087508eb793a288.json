{"ast":null,"code":"var _jsxFileName = \"/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/Analysis.js\",\n    _s = $RefreshSig$();\n\nimport './Analysis.css';\nimport { React, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Wavesurfer from 'wavesurfer.js';\nimport SelectionList from './SelectionList.js';\nimport Waveform from './Waveform.js'; // import isChrome from 'react-device-detect'\n\nimport { isChrome } from 'react-device-detect'; //// currently unused packages:\n// import ReactAudioPlayer from 'react-audio-player'\n// var wavSpectro = require('wav-spectrogram');\n// import Sound from 'react-sound';\n// import { Spectrogram } from 'react-spectrogram';\n//initialise\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar original_wavesurfer = null;\nvar processed_wavesurfer = null;\nconst waveform_height = 200;\n\nfunction Analysis() {\n  _s();\n\n  const [audioFile, setAudioFile] = useState(null);\n  const [audioList, setAudioList] = useState(0); //things for highlight selection / editing, should move to different script\n\n  const [selectedHighlight, setSelectedHighlight] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [xInitial, setXInitial] = useState(null);\n  const [xPos, setXPos] = useState(null);\n  const [highlightXInitial, setHighlightXInitial] = useState(null);\n  const [draggingLeft, setDraggingLeft] = useState(null);\n  const [highlightWidthInitial, setHighlightWidthInitial] = useState(null);\n\n  function updateAudioList() {\n    axios.get(\"/api/unprocessedaudios/\").then(res => setAudioList(res)).catch(err => console.log(err));\n  }\n\n  function handleAudioSelection(selection) {\n    setAudioFile(selection.object);\n  }\n\n  function playPauseButtons() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"playpausebutton\",\n        onClick: function () {\n          if (original_wavesurfer != undefined) {\n            original_wavesurfer.playPause();\n          }\n        },\n        children: \"Play/Pause original\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"playpausebutton\",\n        onClick: function () {\n          if (processed_wavesurfer != undefined) {\n            processed_wavesurfer.playPause();\n          }\n        },\n        children: \"Play/Pause denoised\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n  function updateWaveforms() {\n    if (audioFile && audioFile.denoisedFile && audioFile.id) {\n      var sameid = false;\n\n      if (document.getElementById('original-waveform')) {\n        var element = document.getElementById('original-waveform');\n\n        if (element.audio_id == audioFile.id) {\n          sameid = true;\n        }\n      }\n\n      if (!sameid) {\n        setSelectedHighlight(null);\n\n        if (document.getElementById('original-waveform')) {\n          var element = document.getElementById('original-waveform');\n\n          if (element.audio_id == audioFile.id) {\n            console.log('same');\n          }\n\n          element.remove();\n        }\n\n        if (document.getElementById('processed-waveform')) {\n          var element = document.getElementById('processed-waveform');\n          element.remove();\n        }\n\n        var originalWaveform = document.createElement(\"div\");\n        originalWaveform.setAttribute('id', 'original-waveform');\n        originalWaveform.audio_id = audioFile.id;\n        var processedWaveform = document.createElement(\"div\"); //, { onClick: (e) => handleHighlightDrag(e)});\n\n        processedWaveform.setAttribute('id', 'processed-waveform');\n        var domE2 = document.getElementById(\"waveform-container\");\n        domE2.appendChild(originalWaveform);\n        domE2.appendChild(processedWaveform);\n        original_wavesurfer = new Wavesurfer.create({\n          container: '#original-waveform',\n          height: waveform_height,\n          waveColor: 'black'\n        });\n\n        if (original_wavesurfer) {\n          original_wavesurfer.load(audioFile.filedata);\n        }\n\n        processed_wavesurfer = new Wavesurfer.create({\n          container: '#processed-waveform',\n          height: 200,\n          waveColor: 'blue'\n        });\n\n        if (audioFile.denoisedFile) {\n          if (processed_wavesurfer) {\n            processed_wavesurfer.load(audioFile.denoisedFile);\n          }\n        }\n      }\n    } else {\n      console.log('no audio file selected');\n    }\n  }\n\n  function addSections() {\n    if (document.getElementById('processed-waveform') && audioFile) {\n      if (!document.getElementsByClassName('highlight')[0]) {\n        const formdata = new FormData();\n        formdata.append('id', audioFile.id);\n        axios({\n          method: 'post',\n          url: '/get-related-noiseclips',\n          data: formdata\n        }).then(function (response) {\n          const start = [];\n          const end = [];\n          const ids = [];\n          const duration = parseFloat(audioFile.duration);\n\n          for (let i = 0; i < response.data.length; i++) {\n            start.push(parseFloat(response.data[i]['startTime']));\n            end.push(parseFloat(response.data[i]['endTime']));\n            ids.push(response.data[i]['id']);\n          }\n\n          for (let i = 0; i < start.length; i++) {\n            var highlight = document.createElement(\"div\");\n            highlight.className = 'highlight';\n            let color = response.data[i]['color'];\n            console.log(color);\n            var wave = document.getElementById('processed-waveform');\n            wave.appendChild(highlight);\n            let relStart = Math.round(100 * start[i] / duration);\n            let relEnd = Math.round(100 * end[i] / duration);\n            highlight.style.width = String(relEnd - relStart) + \"%\";\n            highlight.style.height = '100px';\n            highlight.style.backgroundColor = color;\n            highlight.style.marginLeft = String(relStart) + \"%\";\n            highlight.style.marginTop = String(-(waveform_height + 100) / 2) + 'px'; //100 should be driven by marginTop\n\n            highlight.style.marginBottom = '50px'; //should be driven, diff between marginTop and height\n\n            highlight.style.position = 'relative'; //required to bring highlight to front of page\n\n            highlight.highlight_id = ids[i];\n            highlight.call = response.data[i]['referenceTitle'];\n            console.log('here');\n            console.log(response.data[i]['referenceTitle']);\n          }\n        });\n      }\n    }\n  }\n\n  function updateHighlight() {\n    // edit highlight's stored times in the database based on the user's edits\n    let hl = selectedHighlight;\n    const duration = parseFloat(audioFile.duration);\n    let newStart = Math.round(100 * duration * hl.offsetLeft / hl.offsetParent.offsetWidth) / 100;\n    let newEnd = Math.round(100 * duration * (hl.offsetWidth + hl.offsetLeft) / hl.offsetParent.offsetWidth) / 100;\n    let formdata = new FormData();\n    formdata.append('id', selectedHighlight.highlight_id);\n    formdata.append('start', newStart);\n    formdata.append('end', newEnd);\n    axios({\n      method: 'post',\n      url: '/update-highlight',\n      data: formdata\n    }).then(response => {\n      console.log(response);\n    });\n  }\n\n  function handleHighlightSelect(e) {\n    function changeAlpha(color, newAlpha) {\n      //takes rgba(a,b,c,d) color and alters alpha value\n      let split = color.split(',');\n      return split[0] + ',' + split[1] + ',' + split[2] + ',' + String(newAlpha) + ')';\n    } //deselect other clips\n\n\n    let hls = document.getElementsByClassName('highlight');\n\n    for (let hl of hls) {\n      if (!(hl == e.target)) {\n        hl.style.backgroundColor = changeAlpha(hl.style.backgroundColor, 0.5);\n      }\n    } //deselect or change selected highlight clip\n\n\n    let hl = e.target;\n\n    if (!(hl == selectedHighlight)) {\n      hl.style.backgroundColor = changeAlpha(hl.style.backgroundColor, 0.8);\n      setSelectedHighlight(hl);\n    } else {\n      hl.style.backgroundColor = changeAlpha(hl.style.backgroundColor, 0.5);\n      setSelectedHighlight(null);\n    }\n  }\n\n  function handleMouseDown(e) {\n    if (e.target.className == 'highlight' && selectedHighlight) {\n      //initial x position for dragging\n      if (xInitial == null) {\n        setXInitial(e.pageX);\n        setHighlightXInitial(selectedHighlight.offsetLeft);\n        setHighlightWidthInitial(selectedHighlight.offsetWidth);\n      }\n\n      handleHighlightDrag(e);\n    }\n  }\n\n  function handleHighlightDrag(e) {\n    setIsDragging(true);\n    let mouse = e.pageX - selectedHighlight.offsetParent.offsetLeft;\n    let left = selectedHighlight.offsetLeft;\n    let right = selectedHighlight.offsetLeft + selectedHighlight.offsetWidth; //drag either left or right side of highlight, depending on which side is closer\n\n    if (Math.abs(mouse - left) > Math.abs(right - mouse)) {\n      setDraggingLeft(false);\n    } else setDraggingLeft(true);\n  }\n\n  function handleMouseUp(e) {\n    if (!xInitial || xInitial == e.pageX) {\n      // if mouse did not move between mousedown & mouseup\n      if (e.target.className == 'highlight') {\n        handleHighlightSelect(e);\n      }\n\n      setIsDragging(false);\n    } else if (isDragging) {\n      // if mouse was dragging\n      setIsDragging(false);\n      setXPos(null);\n      setDraggingLeft(null);\n      updateHighlight();\n    }\n\n    setXInitial(null);\n    setHighlightXInitial(null);\n    setHighlightWidthInitial(null);\n  }\n\n  function handlePointerMove(e) {\n    if (isDragging && xInitial) {\n      setXPos(e.pageX - xInitial);\n\n      if (draggingLeft == true) {\n        selectedHighlight.style.marginLeft = String(highlightXInitial + xPos) + 'px';\n        selectedHighlight.style.width = String(highlightWidthInitial - xPos) + 'px';\n      } else if (draggingLeft == false) {\n        selectedHighlight.style.width = String(highlightWidthInitial + xPos) + 'px';\n      }\n\n      console.log(xPos);\n      console.log(selectedHighlight.style.width);\n    }\n  }\n\n  function waveforminfo() {\n    function highlightSelected() {\n      if (selectedHighlight) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"selected highlight:__\", String(selectedHighlight.call)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this);\n      } else return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"no highlight selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 27\n      }, this);\n    }\n\n    if (document.getElementsByClassName('highlight')[0]) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: highlightSelected()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  function refreshTemp() {\n    updateWaveforms();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-box\",\n    children: [/*#__PURE__*/_jsxDEV(SelectionList, {\n      list_type: \"backend-data\",\n      object: \"audiofile\",\n      selectable: true,\n      updateSelected: handleAudioSelection // display_audio={true}\n      ,\n      display_title: true,\n      style_options: {\n        width: '20%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analyse-audio-container\",\n      children: /*#__PURE__*/_jsxDEV(Waveform, {\n        spectrogram: true,\n        url: audioFile ? audioFile.denoisedFile ? isChrome ? audioFile.filedata : audioFile.denoisedFile : null : null,\n        wave_height: 150,\n        spec_height: '150px',\n        style_options: {// marginLeft: '10px',\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 338,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Analysis, \"cYauABVgw8JQoqMw9fxymBSvWJU=\");\n\n_c = Analysis;\nexport default Analysis;\n\nvar _c;\n\n$RefreshReg$(_c, \"Analysis\");","map":{"version":3,"sources":["/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/Analysis.js"],"names":["React","useEffect","useState","axios","Wavesurfer","SelectionList","Waveform","isChrome","original_wavesurfer","processed_wavesurfer","waveform_height","Analysis","audioFile","setAudioFile","audioList","setAudioList","selectedHighlight","setSelectedHighlight","isDragging","setIsDragging","xInitial","setXInitial","xPos","setXPos","highlightXInitial","setHighlightXInitial","draggingLeft","setDraggingLeft","highlightWidthInitial","setHighlightWidthInitial","updateAudioList","get","then","res","catch","err","console","log","handleAudioSelection","selection","object","playPauseButtons","undefined","playPause","updateWaveforms","denoisedFile","id","sameid","document","getElementById","element","audio_id","remove","originalWaveform","createElement","setAttribute","processedWaveform","domE2","appendChild","create","container","height","waveColor","load","filedata","addSections","getElementsByClassName","formdata","FormData","append","method","url","data","response","start","end","ids","duration","parseFloat","i","length","push","highlight","className","color","wave","relStart","Math","round","relEnd","style","width","String","backgroundColor","marginLeft","marginTop","marginBottom","position","highlight_id","call","updateHighlight","hl","newStart","offsetLeft","offsetParent","offsetWidth","newEnd","handleHighlightSelect","e","changeAlpha","newAlpha","split","hls","target","handleMouseDown","pageX","handleHighlightDrag","mouse","left","right","abs","handleMouseUp","handlePointerMove","waveforminfo","highlightSelected","refreshTemp"],"mappings":"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","sourcesContent":["import './Analysis.css';\n\nimport { React, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Wavesurfer from 'wavesurfer.js';\n\nimport SelectionList from './SelectionList.js'\nimport Waveform from './Waveform.js'\n\n// import isChrome from 'react-device-detect'\nimport { isChrome } from 'react-device-detect';\n\n//// currently unused packages:\n// import ReactAudioPlayer from 'react-audio-player'\n// var wavSpectro = require('wav-spectrogram');\n// import Sound from 'react-sound';\n// import { Spectrogram } from 'react-spectrogram';\n\n\n//initialise\nvar original_wavesurfer = null;\nvar processed_wavesurfer = null;\n\nconst waveform_height = 200;\n\nfunction Analysis() {\n\n    const [ audioFile, setAudioFile ] = useState(null);\n    const [ audioList, setAudioList ] = useState(0);\n\n    //things for highlight selection / editing, should move to different script\n    const [ selectedHighlight, setSelectedHighlight ] = useState(null);\n    const [ isDragging, setIsDragging] = useState(false);\n    const [ xInitial, setXInitial ] = useState(null)\n    const [ xPos, setXPos ] = useState(null);\n    const [ highlightXInitial, setHighlightXInitial ] = useState(null);\n    const [ draggingLeft, setDraggingLeft ] = useState(null)\n    const [ highlightWidthInitial, setHighlightWidthInitial ] = useState(null)\n\n    function updateAudioList() {\n        axios\n        .get(\"/api/unprocessedaudios/\")\n        .then((res) => setAudioList(res))\n        .catch((err) => console.log(err));\n    }\n\n\n    function handleAudioSelection(selection) {\n        setAudioFile(selection.object)\n    }\n\n\n    function playPauseButtons() {\n\n        return (\n            <div>\n                <button className='playpausebutton' onClick={function() {\n                    if (original_wavesurfer != undefined) {\n                        original_wavesurfer.playPause()\n                    }\n                }}>Play/Pause original</button>\n                <button className='playpausebutton' onClick={function() {\n                    if (processed_wavesurfer != undefined) {\n                        processed_wavesurfer.playPause()\n                    }\n                }}>Play/Pause denoised</button>\n            </div>\n        )\n    }\n\n\n    function updateWaveforms() {\n\n        if (audioFile && audioFile.denoisedFile && audioFile.id) {\n\n            var sameid = false\n            if (document.getElementById('original-waveform')) {\n                var element = document.getElementById('original-waveform')\n                if (element.audio_id == audioFile.id) {sameid = true}\n            }\n\n            if (!sameid) {\n                setSelectedHighlight(null)\n\n                if (document.getElementById('original-waveform')) {\n                    var element = document.getElementById('original-waveform')\n                    if (element.audio_id == audioFile.id) {console.log('same')}\n    \n                    element.remove()}\n                if (document.getElementById('processed-waveform')) {\n                    var element = document.getElementById('processed-waveform')\n                    element.remove()\n                }\n    \n                var originalWaveform = document.createElement(\"div\");\n                originalWaveform.setAttribute('id', 'original-waveform')\n                originalWaveform.audio_id = audioFile.id\n    \n                var processedWaveform = document.createElement(\"div\")//, { onClick: (e) => handleHighlightDrag(e)});\n                processedWaveform.setAttribute('id', 'processed-waveform')\n    \n    \n                var domE2 = document.getElementById(\"waveform-container\")\n                domE2.appendChild(originalWaveform)\n                domE2.appendChild(processedWaveform)\n    \n                original_wavesurfer = new Wavesurfer.create({\n                    container: '#original-waveform',\n                    height: waveform_height,\n                    waveColor: 'black'\n                });\n    \n                if (original_wavesurfer) {\n                    original_wavesurfer.load(audioFile.filedata)\n                }\n    \n                processed_wavesurfer = new Wavesurfer.create({\n                    container: '#processed-waveform',\n                    height: 200,\n                    waveColor: 'blue'\n                })\n        \n                if (audioFile.denoisedFile) {\n                    if (processed_wavesurfer) {\n                        processed_wavesurfer.load(audioFile.denoisedFile)\n                    }\n                }\n            }\n        } else {\n            console.log('no audio file selected')\n        }\n    }\n\n\n    function addSections() {\n        if(document.getElementById('processed-waveform') && audioFile) {\n\n            if (!document.getElementsByClassName('highlight')[0]) {\n\n                const formdata = new FormData()\n                formdata.append('id', audioFile.id)\n\n                axios({\n                    method: 'post',\n                    url: '/get-related-noiseclips',\n                    data: formdata\n                }).then(function(response) {\n\n                    const start = []\n                    const end = []\n                    const ids = []\n                    const duration = parseFloat(audioFile.duration)\n\n                    for(let i=0;i<response.data.length;i++) {\n                        start.push(parseFloat(response.data[i]['startTime']))\n                        end.push(parseFloat(response.data[i]['endTime']))\n                        ids.push(response.data[i]['id'])\n                    }\n                    for (let i=0;i<start.length;i++) {\n                        var highlight = document.createElement(\"div\")\n                        highlight.className = 'highlight'\n\n                        let color = response.data[i]['color']\n                        console.log(color)\n            \n                        var wave = document.getElementById('processed-waveform')\n                        wave.appendChild(highlight)\n\n                        let relStart = Math.round(100*start[i] / duration)\n                        let relEnd = Math.round(100*end[i]/duration)\n\n                        highlight.style.width = String(relEnd-relStart) + \"%\";\n                        highlight.style.height = '100px';\n                        highlight.style.backgroundColor = color;\n                        highlight.style.marginLeft = String(relStart) + \"%\";\n                        highlight.style.marginTop = String(-(waveform_height+100)/2)+'px'; //100 should be driven by marginTop\n                        highlight.style.marginBottom = '50px'; //should be driven, diff between marginTop and height\n                        highlight.style.position = 'relative'; //required to bring highlight to front of page\n                        highlight.highlight_id = ids[i]\n\n                        highlight.call = response.data[i]['referenceTitle']\n                        console.log('here')\n                        console.log(response.data[i]['referenceTitle'])\n                    }\n                })\n            }\n        }\n    }\n\n\n    function updateHighlight() {\n        // edit highlight's stored times in the database based on the user's edits\n\n        let hl = selectedHighlight\n\n        const duration = parseFloat(audioFile.duration)\n\n        let newStart = Math.round(100*duration *  hl.offsetLeft / hl.offsetParent.offsetWidth) / 100\n        let newEnd = Math.round(100*duration * (hl.offsetWidth + hl.offsetLeft) / hl.offsetParent.offsetWidth) / 100\n\n        let formdata = new FormData\n        formdata.append('id', selectedHighlight.highlight_id)\n        formdata.append('start', newStart)\n        formdata.append('end', newEnd)\n\n        axios({\n            method: 'post',\n            url: '/update-highlight',\n            data: formdata\n        }).then((response) => {\n            console.log(response)\n        })\n    }\n\n\n    function handleHighlightSelect(e) {\n\n        function changeAlpha(color, newAlpha) {\n            //takes rgba(a,b,c,d) color and alters alpha value\n\n            let split = color.split(',')\n            return(split[0]+','+split[1]+','+split[2]+','+String(newAlpha)+')')\n        }\n\n        //deselect other clips\n        let hls = document.getElementsByClassName('highlight')\n        for (let hl of hls) {\n            if (!(hl == e.target)) {\n                hl.style.backgroundColor = changeAlpha(hl.style.backgroundColor, 0.5)\n            }\n        }\n\n        //deselect or change selected highlight clip\n        let hl = e.target\n        if (!(hl == selectedHighlight)) {\n            hl.style.backgroundColor = changeAlpha(hl.style.backgroundColor, 0.8)\n            setSelectedHighlight(hl)\n        } else {\n            hl.style.backgroundColor = changeAlpha(hl.style.backgroundColor, 0.5)\n            setSelectedHighlight(null)\n        }\n    }\n\n\n    function handleMouseDown(e) {\n        if ((e.target.className == 'highlight') && selectedHighlight) {\n            //initial x position for dragging\n            if (xInitial == null) {\n                setXInitial(e.pageX)\n                setHighlightXInitial(selectedHighlight.offsetLeft)\n                setHighlightWidthInitial(selectedHighlight.offsetWidth)\n            }\n            handleHighlightDrag(e)\n        }\n    }\n\n\n    function handleHighlightDrag(e) {\n        \n        setIsDragging(true)\n\n        let mouse = e.pageX - selectedHighlight.offsetParent.offsetLeft\n        let left = selectedHighlight.offsetLeft\n        let right = selectedHighlight.offsetLeft + selectedHighlight.offsetWidth\n\n        //drag either left or right side of highlight, depending on which side is closer\n        if (Math.abs(mouse - left) > Math.abs(right - mouse)) {\n            setDraggingLeft(false)\n        } else setDraggingLeft(true)\n    }\n\n\n    function handleMouseUp(e) {\n        if (!(xInitial) || (xInitial==e.pageX)) {// if mouse did not move between mousedown & mouseup\n            \n            if (e.target.className == 'highlight') {\n                handleHighlightSelect(e)\n            }\n            setIsDragging(false)\n\n        } else if (isDragging) { // if mouse was dragging\n\n            setIsDragging(false)\n            setXPos(null)\n            setDraggingLeft(null)\n\n            updateHighlight()\n        }\n        setXInitial(null)\n        setHighlightXInitial(null)\n        setHighlightWidthInitial(null)\n\n    }\n\n\n    function handlePointerMove(e) {\n        if (isDragging && xInitial) {\n\n            setXPos(e.pageX - xInitial)\n            if (draggingLeft == true) {\n                selectedHighlight.style.marginLeft = String(highlightXInitial + xPos) + 'px'\n                selectedHighlight.style.width = String(highlightWidthInitial - xPos) + 'px'\n            } else if (draggingLeft == false) {\n                selectedHighlight.style.width = String(highlightWidthInitial + xPos) + 'px'\n            }\n            console.log(xPos)\n            console.log(selectedHighlight.style.width)\n        }\n    }\n\n\n    function waveforminfo() {\n\n        function highlightSelected() {\n            if (selectedHighlight) {\n                return (\n                    <div>\n                        selected highlight:__\n                        {String(selectedHighlight.call) }\n                    </div>\n                )\n            } else return <div>no highlight selected</div>\n        }\n\n        if (document.getElementsByClassName('highlight')[0]) {\n            return (\n                <div>{highlightSelected()}</div>\n            )\n        }\n    }\n\n\n    function refreshTemp() {\n        updateWaveforms()\n    }\n\n    return (\n        <div className='main-box'>\n            \n            <SelectionList \n                list_type='backend-data' \n                object='audiofile' \n                selectable={true}\n                updateSelected={handleAudioSelection}\n                // display_audio={true}\n                display_title={true}\n                style_options={{\n                    width: '20%',\n                }}\n            />\n\n            {/* {playPauseButtons()} */}\n            <div className='analyse-audio-container'>\n                <Waveform \n                    spectrogram={true}\n                    url={audioFile? (audioFile.denoisedFile? (isChrome? audioFile.filedata : audioFile.denoisedFile) : null) : null}\n                    wave_height={150}\n                    spec_height={'150px'}\n                    style_options={{\n                        // marginLeft: '10px',\n                    }}\n                />\n            </div>\n           \n            {/* <div id='waveform-container' className='audio-display' onMouseDown={handleMouseDown} onMouseUp={handleMouseUp} onPointerMove={handlePointerMove} onClick={()=>refreshTemp()}>\n                {addSections()}\n\n                <div id='waveform-info'>{waveforminfo()}</div>\n            </div> */}\n\n        </div>\n    )\n}\n\nexport default Analysis;"]},"metadata":{},"sourceType":"module"}