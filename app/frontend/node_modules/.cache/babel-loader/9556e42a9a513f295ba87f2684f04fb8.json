{"ast":null,"code":"var _jsxFileName = \"/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/ObjectDataPanel.js\";\nimport './ObjectDataPanel.css';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ObjectDataPanel(props) {\n  //display mutable and/or immutable data about an object\n  //object - object to display data for\n  //mutable: true/false - should object values be alterable?\n  //keys - which keys of object to display, if left blank all keys are displayed\n  //style_options - custom css styles passed to data panel\n  function onValueChange(e) {\n    console.log(e);\n    console.log(e.target);\n    console.log(e.target.id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"object-data-panel\",\n    style: props.style_options ? { ...props.style_options\n    } : null,\n    children: Object.keys(props.object).map(function (key) {\n      if (!props.keys || props.keys.includes(key)) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-panel-property\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-panel-key\",\n            children: key + ': '\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: key,\n            className: \"data-panel-value\",\n            type: \"text\",\n            defaultValue: String(props.object[key]),\n            onInput: onValueChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ObjectDataPanel;\nexport default ObjectDataPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"ObjectDataPanel\");","map":{"version":3,"sources":["/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/ObjectDataPanel.js"],"names":["useEffect","ObjectDataPanel","props","onValueChange","e","console","log","target","id","style_options","Object","keys","object","map","key","includes","String"],"mappings":";AAAA,OAAO,uBAAP;AACA,SAASA,SAAT,QAA0B,OAA1B;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B;AAEA;AACA;AACA;AACA;AAEA,WAASC,aAAT,CAAuBC,CAAvB,EAA0B;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAd;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,EAArB;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAkC,IAAA,KAAK,EAAEN,KAAK,CAACO,aAAN,GAAqB,EAAC,GAAGP,KAAK,CAACO;AAAV,KAArB,GAAgD,IAAzF;AAAA,cAEKC,MAAM,CAACC,IAAP,CAAYT,KAAK,CAACU,MAAlB,EAA0BC,GAA1B,CAA8B,UAASC,GAAT,EAAc;AAEzC,UAAI,CAACZ,KAAK,CAACS,IAAP,IAAeT,KAAK,CAACS,IAAN,CAAWI,QAAX,CAAoBD,GAApB,CAAnB,EAA6C;AACzC,4BACI;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,kCAEI;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,sBACKA,GAAG,GAAG;AADX;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAKI;AAAO,YAAA,EAAE,EAAEA,GAAX;AAAgB,YAAA,SAAS,EAAC,kBAA1B;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,YAAY,EAAEE,MAAM,CAACd,KAAK,CAACU,MAAN,CAAaE,GAAb,CAAD,CAFxB;AAGI,YAAA,OAAO,EAAEX;AAHb;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA,WAA0CW,GAA1C;AAAA;AAAA;AAAA;AAAA,gBADJ;AAcH;AACJ,KAlBA;AAFL;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;KAtCQb,e;AAwCT,eAAeA,eAAf","sourcesContent":["import './ObjectDataPanel.css'\nimport { useEffect } from 'react'\n\nfunction ObjectDataPanel(props) {\n    //display mutable and/or immutable data about an object\n\n    //object - object to display data for\n    //mutable: true/false - should object values be alterable?\n    //keys - which keys of object to display, if left blank all keys are displayed\n    //style_options - custom css styles passed to data panel\n\n    function onValueChange(e) {\n        console.log(e)\n        console.log(e.target)\n        console.log(e.target.id)\n    }\n\n    return (\n        <div className='object-data-panel'style={props.style_options? {...props.style_options} : null}>\n\n            {Object.keys(props.object).map(function(key) {\n\n                if (!props.keys || props.keys.includes(key)) {\n                    return (\n                        <div className='data-panel-property' key={key}>\n    \n                            <div className='data-panel-key'>\n                                {key + ': '}\n                            </div>\n                            <input id={key} className='data-panel-value'\n                                type='text'\n                                defaultValue={String(props.object[key])}\n                                onInput={onValueChange}\n                            />\n    \n                        </div>\n                    )\n                }\n            })}\n        </div>\n    )\n}\n\nexport default ObjectDataPanel"]},"metadata":{},"sourceType":"module"}