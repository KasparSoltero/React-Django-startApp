{"ast":null,"code":"var _jsxFileName = \"/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/Analysis.js\",\n    _s = $RefreshSig$();\n\nimport './Analysis.css';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport SelectionList from './SelectionList.js';\nimport Waveform from './Waveform.js';\nimport Highlights from './Highlights.js';\nimport ObjectDataPanel from './ObjectDataPanel.js';\nimport MultipleObjectDataPanel from './MultipleObjectDataPanel.js';\nimport { isChrome } from 'react-device-detect';\nimport getCSRF from './getCSRF.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.headers.common[\"X-CSRFTOKEN\"] = getCSRF(); //initialise\n\nvar original_wavesurfer = null;\nvar processed_wavesurfer = null;\nconst waveform_height = 200;\n\nfunction Analysis() {\n  _s();\n\n  const [audio_file, setAudioFile] = useState(null);\n  const [selected_audio_clip, setSelectedAudioClip] = useState(null);\n\n  function handleAudioSelection(selection) {\n    setAudioFile(selection.object);\n  }\n\n  function handleHighlightSelection(selection) {\n    if (selection.html_selected) {\n      const form = new FormData();\n      form.append('return', 'single');\n      form.append('model', 'AudioClip');\n      form.append('id', selection.object_id);\n      axios({\n        method: 'post',\n        url: 'get-model/',\n        data: form\n      }).then(response => {\n        setSelectedAudioClip(response.data[0]);\n      });\n    } else {\n      setSelectedAudioClip(null);\n    }\n  }\n\n  function playPauseButtons() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"playpausebutton\",\n        onClick: function () {\n          if (original_wavesurfer != undefined) {\n            original_wavesurfer.playPause();\n          }\n        },\n        children: \"Play/Pause original\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"playpausebutton\",\n        onClick: function () {\n          if (processed_wavesurfer != undefined) {\n            processed_wavesurfer.playPause();\n          }\n        },\n        children: \"Play/Pause denoised\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-box\",\n    children: [/*#__PURE__*/_jsxDEV(SelectionList, {\n      list_type: \"backend-data\",\n      object: ['audiofile'],\n      selectable: true,\n      onSelect: handleAudioSelection // display_audio={true}\n      ,\n      display_title: true,\n      style_options: {\n        width: '20%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analyse-audio-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wavesurfer-container\",\n        children: [/*#__PURE__*/_jsxDEV(Waveform, {\n          spectrogram: true //if chrome is used, visuals are generated from original audio, else from denoised audio\n          ,\n          filedata: audio_file ? audio_file.denoised_filedata ? isChrome ? audio_file.filedata : audio_file.denoised_filedata : null : null,\n          wave_height: 150,\n          spec_height: '150px',\n          style_options: {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), audio_file ? /*#__PURE__*/_jsxDEV(Highlights, {\n          audio_file: audio_file,\n          onSelect: handleHighlightSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), selected_audio_clip ? /*#__PURE__*/_jsxDEV(ObjectDataPanel, {\n        object: selected_audio_clip,\n        keys: ['title', 'start_time', 'end_time', 'use_as_ref', 'animal'],\n        mutable: true,\n        style_options: {// backgroundColor: 'rgb(0,255,0)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MultipleObjectDataPanel, {\n      model: \"animal\",\n      keys: ['color']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Analysis, \"yV8ujZdoYM83I4JowVjJhQctGwM=\");\n\n_c = Analysis;\nexport default Analysis;\n\nvar _c;\n\n$RefreshReg$(_c, \"Analysis\");","map":{"version":3,"sources":["/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/Analysis.js"],"names":["useEffect","useState","axios","SelectionList","Waveform","Highlights","ObjectDataPanel","MultipleObjectDataPanel","isChrome","getCSRF","defaults","headers","common","original_wavesurfer","processed_wavesurfer","waveform_height","Analysis","audio_file","setAudioFile","selected_audio_clip","setSelectedAudioClip","handleAudioSelection","selection","object","handleHighlightSelection","html_selected","form","FormData","append","object_id","method","url","data","then","response","playPauseButtons","undefined","playPause","width","height","denoised_filedata","filedata"],"mappings":"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","sourcesContent":["import './Analysis.css';\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nimport SelectionList from './SelectionList.js'\nimport Waveform from './Waveform.js'\nimport Highlights from './Highlights.js'\nimport ObjectDataPanel from './ObjectDataPanel.js'\nimport MultipleObjectDataPanel from './MultipleObjectDataPanel.js'\n\nimport { isChrome } from 'react-device-detect';\n\nimport getCSRF from './getCSRF.js'\naxios.defaults.headers.common[\"X-CSRFTOKEN\"] = getCSRF();\n\n//initialise\nvar original_wavesurfer = null;\nvar processed_wavesurfer = null;\n\nconst waveform_height = 200;\n\nfunction Analysis() {\n\n    const [ audio_file, setAudioFile ] = useState(null);\n\n    const [ selected_audio_clip, setSelectedAudioClip ] = useState(null)\n\n\n    function handleAudioSelection(selection) {\n        setAudioFile(selection.object)\n    }\n\n\n    function handleHighlightSelection(selection) {\n        if (selection.html_selected) {\n            const form = new FormData\n            form.append('return', 'single')\n            form.append('model', 'AudioClip')\n            form.append('id', selection.object_id)\n\n            axios({\n                method: 'post',\n                url: 'get-model/',\n                data: form,\n            }).then((response)=>{\n                setSelectedAudioClip(response.data[0])\n            })\n        } else {\n            setSelectedAudioClip(null)\n        }\n    }\n\n\n    function playPauseButtons() {\n\n        return (\n            <div>\n                <button className='playpausebutton' onClick={function() {\n                    if (original_wavesurfer != undefined) {\n                        original_wavesurfer.playPause()\n                    }\n                }}>Play/Pause original</button>\n                <button className='playpausebutton' onClick={function() {\n                    if (processed_wavesurfer != undefined) {\n                        processed_wavesurfer.playPause()\n                    }\n                }}>Play/Pause denoised</button>\n            </div>\n        )\n    }\n\n\n    return (\n        <div className='main-box'>\n\n            <SelectionList \n                list_type='backend-data' \n                object={['audiofile']}\n                selectable={true}\n                onSelect={handleAudioSelection}\n                // display_audio={true}\n                display_title={true}\n                style_options={{\n                    width: '20%',\n                    height: '100%',\n                }}\n            />\n\n            {/* {playPauseButtons()} */}\n\n            <div className='analyse-audio-container'>\n                <div className='wavesurfer-container'>\n                    <Waveform\n                        spectrogram={true}\n                        //if chrome is used, visuals are generated from original audio, else from denoised audio\n                        filedata={audio_file? (audio_file.denoised_filedata? (isChrome? audio_file.filedata : audio_file.denoised_filedata) : null) : null}\n                        wave_height={150}\n                        spec_height={'150px'}\n                        style_options={{\n                        }}\n                    />\n                    {audio_file ? \n                        <Highlights\n                            audio_file={audio_file}\n                            onSelect={handleHighlightSelection}\n                        /> : <div/>}\n                </div>\n                {selected_audio_clip ? \n                    <ObjectDataPanel\n                        object = {selected_audio_clip}\n                        keys = {['title', 'start_time', 'end_time', 'use_as_ref', 'animal']}\n                        mutable = {true}\n                        style_options={{\n                            // backgroundColor: 'rgb(0,255,0)'\n                        }}\n                    /> : <div/>}\n            </div>\n\n            <MultipleObjectDataPanel\n                model='animal'\n                keys={['color']}\n            />\n\n        </div>\n    )\n}\n\nexport default Analysis;"]},"metadata":{},"sourceType":"module"}