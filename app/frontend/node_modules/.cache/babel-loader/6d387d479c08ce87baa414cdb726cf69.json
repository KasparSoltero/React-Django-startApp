{"ast":null,"code":"var _jsxFileName = \"/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/Highlights.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Highlights(props) {\n  _s();\n\n  const [noiseclips, setNoiseclips] = useState(null); //things for highlight selection / editing, should move to different script\n\n  const [selectedHighlight, setSelectedHighlight] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [xInitial, setXInitial] = useState(null);\n  const [xPos, setXPos] = useState(null);\n  const [highlightXInitial, setHighlightXInitial] = useState(null);\n  const [draggingLeft, setDraggingLeft] = useState(null);\n  const [highlightWidthInitial, setHighlightWidthInitial] = useState(null);\n  useEffect(() => {\n    console.log('tolato');\n    updateNoiseclips();\n    setSelectedHighlight(null);\n  }, [props]);\n\n  function updateNoiseclips() {\n    //get noiseclips associated with audioFile from database\n    const form = new FormData();\n    form.append('object', 'Noiseclip');\n    form.append('return', 'filtered_list');\n    form.append('id', props.audioFile.id);\n    axios({\n      method: 'post',\n      url: 'get-model/',\n      data: form\n    }).then(function (response) {\n      setNoiseclips(response.data);\n    });\n  }\n\n  function updateHighlight() {\n    // edit highlight's stored times in the database based on the user's edits\n    let hl = selectedHighlight;\n    const duration = parseFloat(props.audioFile.duration);\n    let newStart = Math.round(100 * duration * hl.offsetLeft / hl.offsetParent.offsetWidth) / 100;\n    let newEnd = Math.round(100 * duration * (hl.offsetWidth + hl.offsetLeft) / hl.offsetParent.offsetWidth) / 100;\n    let formdata = new FormData();\n    formdata.append('id', selectedHighlight.getAttribute('highlight_id'));\n    formdata.append('start', newStart);\n    formdata.append('end', newEnd);\n    axios({\n      method: 'post',\n      url: 'update-highlight/',\n      data: formdata\n    }).then(response => {\n      console.log(response);\n    });\n  }\n\n  function handleHighlightSelect(e) {\n    function changeAlpha(color, newAlpha) {\n      //takes rgba(a,b,c,d) color and alters alpha value\n      let split = color.split(',');\n      return split[0] + ',' + split[1] + ',' + split[2] + ',' + String(newAlpha) + ')';\n    } //deselect other clips\n\n\n    let hls = document.getElementsByClassName('highlight');\n\n    for (let hl of hls) {\n      if (!(hl == e.target)) {\n        hl.style.backgroundColor = changeAlpha(hl.style.backgroundColor, 0.5);\n      }\n    } //deselect or change selected highlight clip\n\n\n    let hl = e.target;\n\n    if (!(hl == selectedHighlight)) {\n      hl.style.backgroundColor = changeAlpha(hl.style.backgroundColor, 0.8);\n      setSelectedHighlight(hl);\n    } else {\n      hl.style.backgroundColor = changeAlpha(hl.style.backgroundColor, 0.5);\n      setSelectedHighlight(null);\n    }\n  }\n\n  function handleMouseDown(e) {\n    if (e.target.className == 'highlight' && selectedHighlight) {\n      //initial x position for dragging\n      if (xInitial == null) {\n        setXInitial(e.pageX);\n        setHighlightXInitial(selectedHighlight.offsetLeft);\n        setHighlightWidthInitial(selectedHighlight.offsetWidth);\n      }\n\n      handleHighlightDrag(e);\n    }\n  }\n\n  function handleHighlightDrag(e) {\n    setIsDragging(true);\n    let mouse = e.pageX - selectedHighlight.offsetParent.offsetLeft;\n    let left = selectedHighlight.offsetLeft;\n    let right = selectedHighlight.offsetLeft + selectedHighlight.offsetWidth; //drag either left or right side of highlight, depending on which side is closer\n\n    if (Math.abs(mouse - left) > Math.abs(right - mouse)) {\n      setDraggingLeft(false);\n    } else setDraggingLeft(true);\n  }\n\n  function handleMouseUp(e) {\n    if (!xInitial || xInitial == e.pageX) {\n      // if mouse did not move between mousedown & mouseup\n      if (e.target.className == 'highlight') {\n        handleHighlightSelect(e);\n      }\n\n      setIsDragging(false);\n    } else if (isDragging) {\n      // if mouse was dragging\n      setIsDragging(false);\n      setXPos(null);\n      setDraggingLeft(null);\n      updateHighlight();\n    }\n\n    setXInitial(null);\n    setHighlightXInitial(null);\n    setHighlightWidthInitial(null);\n  }\n\n  function handlePointerMove(e) {\n    if (isDragging && xInitial) {\n      setXPos(e.pageX - xInitial);\n\n      if (draggingLeft == true) {\n        selectedHighlight.style.marginLeft = String(highlightXInitial + xPos) + 'px';\n        selectedHighlight.style.width = String(highlightWidthInitial - xPos) + 'px';\n      } else if (draggingLeft == false) {\n        selectedHighlight.style.width = String(highlightWidthInitial + xPos) + 'px';\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: noiseclips ? noiseclips.map(function (nc) {\n      const duration = parseFloat(props.audioFile.duration); // let color = response.data[i]['color']\n\n      let color = 'rgba(255,0,0,0.3)';\n      let start = parseFloat(nc.startTime);\n      let end = parseFloat(nc.endTime);\n      let relStart = Math.round(100 * start / duration);\n      let relEnd = Math.round(100 * end / duration);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"highlight\",\n        highlight_id: nc.id,\n        style: {\n          width: String(relEnd - relStart) + \"%\",\n          height: '100px',\n          backgroundColor: color,\n          marginLeft: String(relStart) + \"%\",\n          top: '0px',\n          position: 'absolute',\n          zIndex: 10\n        },\n        onMouseDown: handleMouseDown,\n        onMouseUp: handleMouseUp,\n        onPointerMove: handlePointerMove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }, this);\n    }) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Highlights, \"NVCCrsx7aLed1pwBJ/LwHKUYItc=\");\n\n_c = Highlights;\nexport default Highlights;\n\nvar _c;\n\n$RefreshReg$(_c, \"Highlights\");","map":{"version":3,"sources":["/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/Highlights.js"],"names":["useState","useEffect","axios","Highlights","props","noiseclips","setNoiseclips","selectedHighlight","setSelectedHighlight","isDragging","setIsDragging","xInitial","setXInitial","xPos","setXPos","highlightXInitial","setHighlightXInitial","draggingLeft","setDraggingLeft","highlightWidthInitial","setHighlightWidthInitial","console","log","updateNoiseclips","form","FormData","append","audioFile","id","method","url","data","then","response","updateHighlight","hl","duration","parseFloat","newStart","Math","round","offsetLeft","offsetParent","offsetWidth","newEnd","formdata","getAttribute","handleHighlightSelect","e","changeAlpha","color","newAlpha","split","String","hls","document","getElementsByClassName","target","style","backgroundColor","handleMouseDown","className","pageX","handleHighlightDrag","mouse","left","right","abs","handleMouseUp","handlePointerMove","marginLeft","width","map","nc","start","startTime","end","endTime","relStart","relEnd","height","top","position","zIndex"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nfunction Highlights(props) {\n\n    const [ noiseclips, setNoiseclips ] = useState(null)\n\n    //things for highlight selection / editing, should move to different script\n    const [ selectedHighlight, setSelectedHighlight ] = useState(null);\n    const [ isDragging, setIsDragging] = useState(false);\n    const [ xInitial, setXInitial ] = useState(null)\n    const [ xPos, setXPos ] = useState(null);\n    const [ highlightXInitial, setHighlightXInitial ] = useState(null);\n    const [ draggingLeft, setDraggingLeft ] = useState(null)\n    const [ highlightWidthInitial, setHighlightWidthInitial ] = useState(null)\n\n\n    useEffect(() => {\n        console.log('tolato')\n        updateNoiseclips()\n        setSelectedHighlight(null)\n    }, [props])\n\n    function updateNoiseclips() {\n        //get noiseclips associated with audioFile from database\n        const form = (new FormData)\n        form.append('object', 'Noiseclip')\n        form.append('return', 'filtered_list')\n        form.append('id', props.audioFile.id)\n\n        axios({\n            method: 'post',\n            url: 'get-model/',\n            data: form\n        }).then(function(response) {\n            setNoiseclips(response.data)\n        })\n    }\n\n\n    function updateHighlight() {\n        // edit highlight's stored times in the database based on the user's edits\n\n        let hl = selectedHighlight\n\n        const duration = parseFloat(props.audioFile.duration)\n\n        let newStart = Math.round(100*duration *  hl.offsetLeft / hl.offsetParent.offsetWidth) / 100\n        let newEnd = Math.round(100*duration * (hl.offsetWidth + hl.offsetLeft) / hl.offsetParent.offsetWidth) / 100\n\n        let formdata = new FormData\n        formdata.append('id', selectedHighlight.getAttribute('highlight_id'))\n        formdata.append('start', newStart)\n        formdata.append('end', newEnd)\n\n        axios({\n            method: 'post',\n            url: 'update-highlight/',\n            data: formdata\n        }).then((response) => {\n            console.log(response)\n        })\n    }\n\n\n    function handleHighlightSelect(e) {\n\n        function changeAlpha(color, newAlpha) {\n            //takes rgba(a,b,c,d) color and alters alpha value\n\n            let split = color.split(',')\n            return(split[0]+','+split[1]+','+split[2]+','+String(newAlpha)+')')\n        }\n\n        //deselect other clips\n        let hls = document.getElementsByClassName('highlight')\n        for (let hl of hls) {\n            if (!(hl == e.target)) {\n                hl.style.backgroundColor = changeAlpha(hl.style.backgroundColor, 0.5)\n            }\n        }\n\n        //deselect or change selected highlight clip\n        let hl = e.target\n        if (!(hl == selectedHighlight)) {\n            hl.style.backgroundColor = changeAlpha(hl.style.backgroundColor, 0.8)\n            setSelectedHighlight(hl)\n        } else {\n            hl.style.backgroundColor = changeAlpha(hl.style.backgroundColor, 0.5)\n            setSelectedHighlight(null)\n        }\n    }\n\n\n    function handleMouseDown(e) {\n        if ((e.target.className == 'highlight') && selectedHighlight) {\n            //initial x position for dragging\n            if (xInitial == null) {\n                setXInitial(e.pageX)\n                setHighlightXInitial(selectedHighlight.offsetLeft)\n                setHighlightWidthInitial(selectedHighlight.offsetWidth)\n            }\n            handleHighlightDrag(e)\n        }\n    }\n\n\n    function handleHighlightDrag(e) {\n        \n        setIsDragging(true)\n\n        let mouse = e.pageX - selectedHighlight.offsetParent.offsetLeft\n        let left = selectedHighlight.offsetLeft\n        let right = selectedHighlight.offsetLeft + selectedHighlight.offsetWidth\n\n        //drag either left or right side of highlight, depending on which side is closer\n        if (Math.abs(mouse - left) > Math.abs(right - mouse)) {\n            setDraggingLeft(false)\n        } else setDraggingLeft(true)\n    }\n\n\n    function handleMouseUp(e) {\n        if (!(xInitial) || (xInitial==e.pageX)) {// if mouse did not move between mousedown & mouseup\n            \n            if (e.target.className == 'highlight') {\n                handleHighlightSelect(e)\n            }\n            setIsDragging(false)\n\n        } else if (isDragging) { // if mouse was dragging\n\n            setIsDragging(false)\n            setXPos(null)\n            setDraggingLeft(null)\n\n            updateHighlight()\n        }\n        setXInitial(null)\n        setHighlightXInitial(null)\n        setHighlightWidthInitial(null)\n\n    }\n\n\n    function handlePointerMove(e) {\n        if (isDragging && xInitial) {\n\n            setXPos(e.pageX - xInitial)\n            if (draggingLeft == true) {\n                selectedHighlight.style.marginLeft = String(highlightXInitial + xPos) + 'px'\n                selectedHighlight.style.width = String(highlightWidthInitial - xPos) + 'px'\n            } else if (draggingLeft == false) {\n                selectedHighlight.style.width = String(highlightWidthInitial + xPos) + 'px'\n            }\n        }\n    }\n\n\n    return (\n        <div>\n            {noiseclips ? noiseclips.map(function(nc) {\n\n                const duration = parseFloat(props.audioFile.duration)\n                \n                // let color = response.data[i]['color']\n                let color = 'rgba(255,0,0,0.3)'\n\n                let start = parseFloat(nc.startTime)\n                let end = parseFloat(nc.endTime)\n\n                let relStart = Math.round(100*start/duration)\n                let relEnd = Math.round(100*end/duration)\n\n                return (\n                    <div \n                        className='highlight' \n                        highlight_id={nc.id}\n                        style={{\n                            width: String(relEnd-relStart) + \"%\",\n                            height:'100px',\n                            backgroundColor: color,\n                            marginLeft: String(relStart) + \"%\",\n                            top: '0px',\n                            position: 'absolute',\n                            zIndex: 10,\n                        }}\n                        onMouseDown={handleMouseDown} \n                        onMouseUp={handleMouseUp} \n                        onPointerMove={handlePointerMove} \n                    />\n                )\n            }) : null}\n        </div>\n        )\n    }\n\n\nexport default Highlights"]},"metadata":{},"sourceType":"module"}