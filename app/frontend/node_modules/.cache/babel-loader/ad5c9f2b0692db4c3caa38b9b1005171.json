{"ast":null,"code":"var _jsxFileName = \"/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/SelectionList.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport './SelectionList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.headers.common[\"X-CSRFTOKEN\"] = 'gPvOPnEwl4K7jFnYGucAwkW06M5RrJFRvEtwPMUNbylfnVsG0BOm5niJPd3COr9r';\n\nfunction SelectionList(props) {\n  _s();\n\n  //general selection list\n  //props:\n  //list_type: backend-data\n  //object - the name of the object in backend to list\n  //display_title\n  //display_audio\n  //selectable - are list items selectable?\n  //updateSelected - function to which selected item is passed\n  //style_options - passed to css style of the list container\n  const [list, setList] = useState(null);\n  const [is_table, setIsTable] = useState(null);\n  const [selected_header, setSelectedHeader] = useState(null);\n  useEffect(() => {\n    if (props.list_type === 'backend-data') {\n      let list_objects;\n\n      if (typeof props.object === 'object' && props.object.length > 1) {\n        //if multiple objects are provided, list will provide a table\n        setIsTable(true);\n        setSelectedHeader(props.object[0]);\n        list_objects = props.object;\n      } else if (typeof props.object === 'string') {\n        setIsTable(false);\n        setSelectedHeader(props.object);\n        list_objects = [props.object];\n      } else {\n        setIsTable(false);\n        setSelectedHeader(props.object[0]);\n        list_objects = props.object;\n      }\n\n      console.log(list_objects);\n      let temp = {};\n\n      for (let object of list_objects) {\n        console.log(object);\n        let form = new FormData();\n        form.append('object', object);\n        form.append('return', 'list');\n        axios({\n          method: 'post',\n          url: 'get-model/',\n          data: form\n        }).then(response => {\n          temp[object] = response.data;\n\n          if (Object.keys(temp).length == list_objects.length) {\n            setList(temp);\n          }\n        });\n      }\n    }\n  }, [props]);\n\n  function handleItemClick(e) {\n    //fix\n    //send selected item to parent component\n    let pk = e.currentTarget.getAttribute('pk');\n    let selected_db_object = list[0].find(obj => String(obj.id) === pk);\n    let form = {\n      html_selected: e.currentTarget,\n      object: selected_db_object\n    };\n    props.updateSelected(form); //update visuals to show selected component\n\n    for (let el of document.getElementsByClassName('list-element')) {\n      el === e.currentTarget ? el.className = 'list-element selected' : el.className = 'list-element selectable';\n    }\n  }\n\n  function displayElement(el) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selection-list-element-container\",\n      children: [props.display_title ? /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"selection-list-title\",\n        children: String(el.title)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 39\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"invisible\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 26\n      }, this), props.display_audio ? /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        src: el.filedata,\n        class: \"selection-list-audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 39\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"list-container\",\n    style: props.style_options ? { ...props.style_options\n    } : null,\n    children: [list && Object.keys(list).length > 1 ? props.object.map(function (object) {\n      const header_props = {\n        object: object,\n        onClick: e => setSelectedHeader(e.target.getAttribute('object')),\n        style: {\n          height: '50px',\n          display: 'inline-block'\n        }\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", { ...header_props,\n        children: object\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-elements-container\",\n      style: {\n        height: '100px'\n      },\n      children: list ? list[selected_header].map(function (list_element) {\n        //display list elements\n        // console.log(document.getElementById('list-container').offsetHeight)\n        const element_props = {\n          className: 'list-element',\n          pk: list_element.id\n        };\n\n        if (props.selectable) {\n          element_props['onClick'] = e => handleItemClick(e);\n\n          element_props['className'] = 'list-element selectable';\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", { ...element_props,\n          children: displayElement(list_element)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this);\n      }) : 'retrieving list...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SelectionList, \"6nrOKvstNdthvdIBkettrUoaIuc=\");\n\n_c = SelectionList;\nexport default SelectionList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectionList\");","map":{"version":3,"sources":["/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/SelectionList.js"],"names":["axios","useState","useEffect","defaults","headers","common","SelectionList","props","list","setList","is_table","setIsTable","selected_header","setSelectedHeader","list_type","list_objects","object","length","console","log","temp","form","FormData","append","method","url","data","then","response","Object","keys","handleItemClick","e","pk","currentTarget","getAttribute","selected_db_object","find","obj","String","id","html_selected","updateSelected","el","document","getElementsByClassName","className","displayElement","display_title","title","display_audio","filedata","style_options","map","header_props","onClick","target","style","height","display","list_element","element_props","selectable"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { useState, useEffect } from 'react'\nimport './SelectionList.css'\n\n\naxios.defaults.headers.common[\"X-CSRFTOKEN\"] = 'gPvOPnEwl4K7jFnYGucAwkW06M5RrJFRvEtwPMUNbylfnVsG0BOm5niJPd3COr9r';\n\n\nfunction SelectionList(props) {\n    //general selection list\n\n    //props:\n    //list_type: backend-data\n        //object - the name of the object in backend to list\n        //display_title\n        //display_audio\n    //selectable - are list items selectable?\n    //updateSelected - function to which selected item is passed\n    //style_options - passed to css style of the list container\n    \n    const [ list, setList ] = useState(null)\n    const [ is_table, setIsTable ] = useState(null)\n    const [ selected_header, setSelectedHeader ] = useState(null)\n\n    useEffect(() => {\n        if (props.list_type==='backend-data') {\n        \n            let list_objects\n            if (typeof(props.object)==='object' && props.object.length > 1) {\n                //if multiple objects are provided, list will provide a table\n                setIsTable(true)\n                setSelectedHeader(props.object[0])\n                list_objects = props.object\n            } else if (typeof(props.object)==='string') {\n                setIsTable(false)\n                setSelectedHeader(props.object)\n                list_objects = [props.object]\n            } else {\n                setIsTable(false)\n                setSelectedHeader(props.object[0])\n                list_objects = props.object\n            }\n\n            console.log(list_objects)\n            let temp = {}\n\n            for (let object of list_objects) {\n                console.log(object)\n\n                let form = (new FormData)\n                form.append('object', object)\n                form.append('return', 'list')\n\n                axios({\n                    method: 'post',\n                    url: 'get-model/',\n                    data: form\n                }).then((response) => {\n                    temp[object]=response.data\n                    \n                    if (Object.keys(temp).length == list_objects.length) {\n                        setList(temp)\n                    }\n                })\n            }\n        }\n    }, [props])\n\n\n    function handleItemClick(e) {//fix\n\n        //send selected item to parent component\n        let pk = e.currentTarget.getAttribute('pk')\n        let selected_db_object = list[0].find((obj) => String(obj.id)===pk)\n\n        let form = {\n            html_selected: e.currentTarget,\n            object: selected_db_object\n        }\n\n        props.updateSelected(form)\n\n        //update visuals to show selected component\n        for (let el of document.getElementsByClassName('list-element')) {\n            el===e.currentTarget? el.className = 'list-element selected' : el.className = 'list-element selectable'\n        }\n    }\n\n\n    function displayElement(el) {\n\n        return (\n            <div className='selection-list-element-container'>\n\n                {props.display_title? <div class='selection-list-title'>\n                    {String(el.title)}\n                </div> : <div class='invisible'/>}\n\n                {props.display_audio? <audio \n                    controls\n                    src={el.filedata}\n                    class='selection-list-audio'>\n                </audio> : <div/>}\n\n            </div>\n        )\n    }\n    \n\n    return (\n        <div id='list-container' style={props.style_options? {...props.style_options} : null}>\n            \n            {(list && Object.keys(list).length>1) ? props.object.map(function(object) {\n\n                const header_props = {\n                    object: object,\n                    onClick: (e) => setSelectedHeader(e.target.getAttribute('object')),\n                    style: {\n                        height: '50px',\n                        display: 'inline-block',\n                    }\n                }\n\n                return (\n                    <div {...header_props}>\n                        {object}\n                    </div>\n                )\n            }) : <div/>}\n\n            <div className='list-elements-container' style={\n                {height: '100px'}}>\n                {list? list[selected_header].map(function(list_element) {//display list elements\n\n                    // console.log(document.getElementById('list-container').offsetHeight)\n                    const element_props = {\n                        className: 'list-element',\n                        pk: list_element.id\n                    }\n\n                    if (props.selectable) {\n                        element_props['onClick'] = (e)=>handleItemClick(e)\n                        element_props['className'] = 'list-element selectable'\n                    }\n\n                    return (\n                        <div {...element_props}>\n                            {displayElement(list_element)}\n                        </div>\n                    )\n                }) : 'retrieving list...'}\n\n            </div>\n        </div>\n    )\n}\n\nexport default SelectionList"]},"metadata":{},"sourceType":"module"}