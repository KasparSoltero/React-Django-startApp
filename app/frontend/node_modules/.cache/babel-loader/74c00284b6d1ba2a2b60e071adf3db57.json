{"ast":null,"code":"var _jsxFileName = \"/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/Upload_Audio.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport axios from \"axios\";\nimport './Upload_Audio.css';\nimport Waveform from 'waveform-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Upload_Audio() {\n  _s();\n\n  const [audioFile, setAudioFile] = useState(0);\n  const [audioList, setAudioList] = useState(0);\n  const [output, setOutput] = useState(0);\n\n  function updateAudioList() {\n    //list of audio files in integer form are retrieved from the database\n    axios({\n      method: 'get',\n      url: '/retrieve-audio/'\n    }).then( //returned as a string like: [file_1.wav, [0,1,2,3,4,5,6]][file_2.wav, [7,8,9,10,11,12]]\n    response => setAudioList(response.data)).catch(err => console.log(err)); // console.log(audioList)\n  }\n\n  function displayAudioList() {\n    if (audioList) {\n      var listAudio = [];\n      var temp = audioList.slice(1, audioList.length - 1).split('][');\n      temp.forEach(element => listAudio.push(element.split(\"', \"))); // signal is sent by database as a string, have to change it to a JS array\n\n      for (var i = 0; i < listAudio.length; i++) {\n        var intArray = listAudio[i][1].slice(1, listAudio[i][1].length - 1).split(',').map(item => parseInt(item));\n        listAudio[i][1] = intArray;\n      }\n\n      console.log(listAudio);\n      temp2 = new Int16Array(listAudio[0][1]).buffer;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AudioList\",\n        children: /*#__PURE__*/_jsxDEV(Waveform, {\n          buffer: temp2,\n          height: 150,\n          markerStyle: {\n            color: '#fff',\n            width: 4\n          },\n          plot: \"bar\",\n          position: 0.5,\n          responsive: false,\n          showPosition: true,\n          waveStyle: {\n            animate: false,\n            color: '#000',\n            pointWidth: 1\n          },\n          width: 500\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  function addFileToObjects() {\n    //Construct file object from uploaded file and send it to database\n    var audioFile = document.getElementById('uploadFile').files[0];\n    var filename = document.getElementById('uploadFile').files[0].name;\n    const formdata = new FormData();\n    formdata.append('title', filename);\n    formdata.append('file', audioFile);\n    axios({\n      method: 'post',\n      url: '/uploadfiles/',\n      data: formdata\n    }).then(response => setOutput(response.data));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-box\",\n    children: [\"....testing file upload! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AudioList-container\",\n      children: [\"List of 'file' objects in database:\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateAudioList(),\n        children: \". Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), displayAudioList()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"uploadFile\",\n      type: \"file\",\n      id: \"uploadFile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"uploadbutton\",\n      onClick: () => addFileToObjects(),\n      children: \"Upload file to database\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Upload_Audio, \"kR4jHWXI04xOFwpnfYq5mgrt710=\");\n\n_c = Upload_Audio;\nexport default Upload_Audio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload_Audio\");","map":{"version":3,"sources":["/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/Upload_Audio.js"],"names":["React","useState","axios","Waveform","Upload_Audio","audioFile","setAudioFile","audioList","setAudioList","output","setOutput","updateAudioList","method","url","then","response","data","catch","err","console","log","displayAudioList","listAudio","temp","slice","length","split","forEach","element","push","i","intArray","map","item","parseInt","temp2","Int16Array","buffer","color","width","animate","pointWidth","addFileToObjects","document","getElementById","files","filename","name","formdata","FormData","append"],"mappings":"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","sourcesContent":["import { React, useState } from 'react';\nimport axios from \"axios\";\nimport './Upload_Audio.css'\n\nimport Waveform from 'waveform-react';\n\nfunction Upload_Audio() {\n\n    const [audioFile, setAudioFile] = useState(0);\n    const [audioList, setAudioList] = useState(0);\n    const [ output, setOutput ] = useState(0);\n\n    function updateAudioList() {\n        //list of audio files in integer form are retrieved from the database\n\n        axios({\n            method: 'get',\n            url: '/retrieve-audio/',\n        }).then(\n            //returned as a string like: [file_1.wav, [0,1,2,3,4,5,6]][file_2.wav, [7,8,9,10,11,12]]\n            (response)=>setAudioList(response.data)\n        ).catch(\n            (err)=>console.log(err))\n\n        // console.log(audioList)\n    }\n\n    function displayAudioList() {\n\n        if (audioList) {\n            \n            var listAudio = []\n\n            var temp = audioList.slice(1, audioList.length-1).split('][')\n            temp.forEach(element => listAudio.push(element.split(\"', \")))\n            \n            // signal is sent by database as a string, have to change it to a JS array\n            for (var i=0; i < listAudio.length; i++) {\n\n                var intArray = listAudio[i][1]\n                    .slice(1, listAudio[i][1].length-1)\n                    .split(',')\n                    .map(item => parseInt(item));\n                \n                listAudio[i][1] = intArray\n            }\n            console.log(listAudio)\n\n            temp2 = new Int16Array(listAudio[0][1]).buffer;\n\n            return (\n                <div className='AudioList'>\n                    <Waveform\n                        buffer = {temp2}\n\n                        height = {150}\n\n                        markerStyle={{\n                            color: '#fff',\n                            width: 4\n                        }}\n\n                        plot='bar'\n\n                        position={0.5}\n\n                        responsive={false}\n\n                        showPosition={true}\n\n                        waveStyle={{\n\n                            animate: false,\n\n                            color: '#000',\n\n                            pointWidth: 1\n                        }}\n\n                        width={500}\n                    />\n                </div>\n            )\n        }        \n    }\n\n    function addFileToObjects() {\n        //Construct file object from uploaded file and send it to database\n\n        var audioFile = document.getElementById('uploadFile').files[0];\n        var filename = document.getElementById('uploadFile').files[0].name;\n\n        const formdata = new FormData();\n        formdata.append('title', filename)\n        formdata.append('file', audioFile)\n        \n        axios({\n            method: 'post',\n            url: '/uploadfiles/',\n            data: formdata,\n            }).then(\n            (response)=>setOutput(response.data));\n    }\n\n    return (\n        <div className='main-box'>\n            ....testing file upload! <br/>\n            \n            <div className='AudioList-container'>\n                List of 'file' objects in database: \n                <button onClick={()=>updateAudioList()}>. Refresh</button>\n                <br/>\n                {displayAudioList()}\n            </div>\n\n            <input name='uploadFile' type='file' id='uploadFile' />\n            <button className='uploadbutton' onClick={() => addFileToObjects()}>\n                Upload file to database\n            </button>\n\n        </div>\n    )\n}\n\nexport default Upload_Audio;"]},"metadata":{},"sourceType":"module"}