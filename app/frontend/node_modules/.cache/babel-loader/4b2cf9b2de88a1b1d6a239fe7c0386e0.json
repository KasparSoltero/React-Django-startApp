{"ast":null,"code":"var _jsxFileName = \"/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/Analysis.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport './Analysis.css';\nimport Sound from 'react-sound';\nimport { Spectrogram } from 'react-spectrogram';\nimport axios from 'axios';\nimport ReactAudioPlayer from 'react-audio-player';\nimport Wavesurfer from 'wavesurfer.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar wavSpectro = require('wav-spectrogram');\n\nconst decode = require('audio-decode');\n\nconst buffer = require('audio-lena/wav'); // Required to allow axios to make post requests to django\n\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n\nfunction Analysis() {\n  _s();\n\n  const [audioFile, setAudioFile] = useState(null);\n  const [audioList, setAudioList] = useState(0);\n\n  function updateAudioList() {\n    axios.get(\"/api/unprocessedaudios/\").then(res => setAudioList(res)).catch(err => console.log(err));\n  }\n\n  function handleInputChange(e) {\n    setAudioFile(e.target.value);\n  }\n\n  function displayAudioSelect() {\n    if (audioList) {\n      let htmlList = [];\n      let selectAudioContainer = document.getElementsByClassName('select-audio-container')[0];\n      console.log(audioList.data);\n      let elements = document.getElementsByClassName('audio-in-list');\n      elements.map(element => {\n        element.remove();\n      });\n      audioList.data.map(function (file) {\n        console.log(file.title);\n        let temp = document.createElement('div');\n        temp.setAttribute('class', 'audio-in-list');\n        temp.innerHTML += file.title;\n        console.log(temp.className);\n        selectAudioContainer.appendChild(temp);\n      }); // return (\n      //     <select value={audioFile} onChange={handleInputChange} multiple>\n      //         {audioList.data.map((file)=>(\n      //             <option value={file.filedata}>{file.title}</option>\n      //         ))}\n      //     </select>\n      // )\n    } else return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"fetching audio list...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n  const Spectrogram = 0;\n  var arrayBuffer = 0;\n\n  function updateWaveforms() {\n    if (document.getElementById('original-waveform')) {\n      var element = document.getElementById('original-waveform');\n      element.remove();\n      var element = document.getElementById('denoised-waveform');\n      element.remove();\n    }\n\n    var domE1 = document.createElement(\"div\");\n    domE1.setAttribute('id', 'original-waveform');\n    var domE2 = document.getElementById(\"waveform-container\");\n    domE2.appendChild(domE1);\n    var wavesurfer = Wavesurfer.create({\n      container: '#original-waveform'\n    });\n\n    if (audioFile) {\n      if (wavesurfer) {\n        wavesurfer.load(audioFile);\n      }\n    } else {\n      console.log('no audio file selected');\n    }\n  }\n\n  function denoiseWaveform() {\n    //denoise the selected waveform\n    const formdata = new FormData();\n    formdata.append('url', audioFile);\n    axios({\n      method: 'post',\n      url: '/get-denoised/',\n      data: formdata\n    }).then(function (res) {\n      console.log(res); //create waveform display\n\n      if (document.getElementById('denoised-waveform')) {\n        var element = document.getElementById('denoised-waveform');\n        element.remove();\n      }\n\n      var domE1 = document.createElement(\"div\");\n      domE1.setAttribute('id', 'denoised-waveform');\n      var domE2 = document.getElementById(\"waveform-container\");\n      domE2.appendChild(domE1);\n      var wavesurfer2 = Wavesurfer.create({\n        container: '#denoised-waveform',\n        waveColor: 'red',\n        height: 100,\n        barHeight: 100\n      });\n      var temp = 0;\n      updateAudioList();\n      audioList.data.forEach(function (data) {\n        if (data.title === 'denoised_temp') {\n          temp = data.filedata;\n          console.log(data.title);\n        }\n      });\n\n      if (audioFile) {\n        if (wavesurfer2) {\n          wavesurfer2.load(temp);\n        }\n      } else {\n        console.log('no audio file selected');\n      }\n    }).catch(err => console.log(err));\n  }\n\n  function displaySpectrogram() {\n    if (audioFile) {\n      // reader.readAsArrayBuffer(audioFile)\n      return (\n        /*#__PURE__*/\n        // <audio src={audioFile} controls></audio>\n        _jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this)\n      );\n    } else return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"fetching audio list...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 23\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-box\",\n    children: [\"Testing audio / Spectrogram display...\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-audio-container\",\n      children: [\"Select audio file.\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateAudioList(),\n        children: \". Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), displayAudioSelect()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"uploadbutton\",\n      onClick: () => updateWaveforms(),\n      children: \"update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"uploadbutton\",\n      onClick: () => denoiseWaveform(),\n      children: \"de-noise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n      src: \"https://unpkg.com/wavesurfer.js\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"waveform-container\",\n      className: \"audio-display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Analysis, \"5hbk16WNceFE/CVhLhtQfzR1CYM=\");\n\n_c = Analysis;\nexport default Analysis;\n\nvar _c;\n\n$RefreshReg$(_c, \"Analysis\");","map":{"version":3,"sources":["/Users/kaspar/Documents/GitHub/React-Django-startApp/app/frontend/src/Components/Analysis.js"],"names":["React","useEffect","useState","Sound","Spectrogram","axios","ReactAudioPlayer","Wavesurfer","wavSpectro","require","decode","buffer","defaults","xsrfCookieName","xsrfHeaderName","Analysis","audioFile","setAudioFile","audioList","setAudioList","updateAudioList","get","then","res","catch","err","console","log","handleInputChange","e","target","value","displayAudioSelect","htmlList","selectAudioContainer","document","getElementsByClassName","data","elements","map","element","remove","file","title","temp","createElement","setAttribute","innerHTML","className","appendChild","arrayBuffer","updateWaveforms","getElementById","domE1","domE2","wavesurfer","create","container","load","denoiseWaveform","formdata","FormData","append","method","url","wavesurfer2","waveColor","height","barHeight","forEach","filedata","displaySpectrogram"],"mappings":"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","sourcesContent":["import { React, useEffect, useState } from 'react';\nimport './Analysis.css';\nimport Sound from 'react-sound';\nimport { Spectrogram } from 'react-spectrogram';\nimport axios from 'axios';\nimport ReactAudioPlayer from 'react-audio-player'\nimport Wavesurfer from 'wavesurfer.js';\n\nvar wavSpectro = require('wav-spectrogram');\n\nconst decode = require('audio-decode');\nconst buffer = require('audio-lena/wav');\n\n// Required to allow axios to make post requests to django\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\"\n\nfunction Analysis() {\n\n    const [ audioFile, setAudioFile ] = useState(null);\n    const [ audioList, setAudioList ] = useState(0);\n\n    function updateAudioList() {\n        axios\n        .get(\"/api/unprocessedaudios/\")\n        .then((res) => setAudioList(res))\n        .catch((err) => console.log(err));\n    }\n\n    function handleInputChange(e) {\n        setAudioFile(e.target.value)\n    }\n\n    function displayAudioSelect() {\n        if (audioList) {\n\n            let htmlList = []\n\n            let selectAudioContainer = document.getElementsByClassName('select-audio-container')[0]\n\n            console.log(audioList.data)\n\n            let elements = document.getElementsByClassName('audio-in-list')\n            elements.map((element)=>{element.remove()})\n\n            audioList.data.map(function(file) {\n                console.log(file.title)\n\n                let temp = document.createElement('div')\n                temp.setAttribute('class', 'audio-in-list')\n                temp.innerHTML += file.title\n\n                console.log(temp.className)\n                \n                selectAudioContainer.appendChild(temp)\n\n            })\n\n            // return (\n            //     <select value={audioFile} onChange={handleInputChange} multiple>\n            //         {audioList.data.map((file)=>(\n            //             <option value={file.filedata}>{file.title}</option>\n            //         ))}\n            //     </select>\n            // )\n        } else return (\n            <div>fetching audio list...</div>\n        )\n    }\n\n    const Spectrogram = 0;\n\n    var arrayBuffer = 0;\n\n    function updateWaveforms() {\n\n        if (document.getElementById('original-waveform')) {\n            var element = document.getElementById('original-waveform')\n            element.remove()\n            var element = document.getElementById('denoised-waveform')\n            element.remove()\n        }\n\n        var domE1 = document.createElement(\"div\");\n        domE1.setAttribute('id', 'original-waveform')\n\n        var domE2 = document.getElementById(\"waveform-container\")\n        domE2.appendChild(domE1)\n\n        var wavesurfer = Wavesurfer.create({\n            container: '#original-waveform'\n        });\n\n        if (audioFile) {\n            if (wavesurfer) {\n                wavesurfer.load(audioFile)\n            }\n        } else {\n            console.log('no audio file selected')\n        }\n    }\n\n    function denoiseWaveform() {\n\n        //denoise the selected waveform\n        const formdata = new FormData();\n\n        formdata.append('url', audioFile)\n\n        axios({\n            method: 'post',\n            url: '/get-denoised/',\n            data: formdata\n        }).then(function(res) \n        {\n            console.log(res)\n            //create waveform display\n            if (document.getElementById('denoised-waveform')) {\n                var element = document.getElementById('denoised-waveform')\n                element.remove()\n            }\n\n            var domE1 = document.createElement(\"div\");\n            domE1.setAttribute('id', 'denoised-waveform')\n\n            var domE2 = document.getElementById(\"waveform-container\")\n            domE2.appendChild(domE1)\n\n            var wavesurfer2 = Wavesurfer.create({\n                container: '#denoised-waveform',\n                waveColor: 'red',\n                height: 100,\n                barHeight: 100\n            });\n            \n            var temp = 0\n\n            updateAudioList()\n\n            audioList.data.forEach(function(data) {\n                if (data.title === 'denoised_temp') {\n                    temp = data.filedata\n                    console.log(data.title)\n                }\n            })\n\n            if (audioFile) {\n                if (wavesurfer2) {\n                    wavesurfer2.load(temp)\n                }\n            } else {\n                console.log('no audio file selected')\n            }\n        }\n        ).catch(\n            (err)=>(console.log(err))\n        );\n    }\n\n    function displaySpectrogram() {\n\n        if (audioFile) {\n\n            // reader.readAsArrayBuffer(audioFile)\n            return (\n                // <audio src={audioFile} controls></audio>\n                <div/>\n            )\n        } else return <div>fetching audio list...</div>\n    }\n\n    return (\n        <div className='main-box'>\n            Testing audio / Spectrogram display...\n            \n            <div className='select-audio-container'>\n                Select audio file.\n                <button onClick={()=>updateAudioList()}>. Refresh</button>\n                <br/>\n                {displayAudioSelect()}\n                {/* <canvas id='spectrogram-canvas' width='200' height='100'></canvas>\n                {displaySpectrogram()} */}\n            </div>            \n\n            <button className='uploadbutton' onClick={()=>updateWaveforms()}>update</button>\n            <button className='uploadbutton' onClick={()=>denoiseWaveform()}>de-noise</button>\n\n\n            <script src = 'https://unpkg.com/wavesurfer.js'></script>\n\n            <div id='waveform-container' className='audio-display'>\n                {/* <div id = \"original-waveform\"></div>\n                <div id = \"denoised-waveform\"></div> */}\n            </div>\n\n        </div>\n    )\n}\n\nexport default Analysis;"]},"metadata":{},"sourceType":"module"}